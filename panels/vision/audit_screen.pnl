V 13
4
LANG:10001 11 Audit trail
LANG:10004 12 审计跟踪
LANG:10000 16 Audit Auswertung
LANG:10027 25 Журнал аудита
PANEL,-1 -1 1038 652 N "_3DFace" 0
"bool bConnect;
int iMaxLines;
string sPropertiesDP;
string sHostFilter, sUsernameFilter, sItemFilter;



main()
{
   int iType;
   dyn_string ds;
   dyn_float df;
 

   sPropertiesDP= \"_AuditProp_\"+myUiNumber()+\"_\"+myModuleName();
   iMaxLines = 100;  // default

   dpGet(\"_AuditTrail.:_archive.._type\", iType);

   if ( iType == DPCONFIG_NONE)
   {

   if (getUserPermission(2))
      ChildPanelOnCentralModalReturn(\"vision/audit_config.pnl\",  getCatStr(\"sc\", \"audittrailconfigheader\"),
        makeDynString(), df, ds);
   else
     ChildPanelOnCentralModalReturn(\"vision/MessageWarning\",getCatStr(\"va\",\"headerPanelhost\"),makeDynString(getCatStr(\"general\",\"permission\"),getCatStr(\"general\",\"cancel\")), df, ds);


   dpGet(\"_AuditTrail.:_archive.._type\", iType);

   }
   if (iType == DPCONFIG_NONE)
      PanelOff();




   if (!dpExists(sPropertiesDP))     // create and sett default
   {
      dpCreate(sPropertiesDP,\"_ASProperties\");
      dpSet(sPropertiesDP + \".Settings.Filter.State:_original.._value\", 0,
               sPropertiesDP + \".Settings.Timerange.Type:_original.._value\", 0,
               sPropertiesDP + \".Settings.Timerange.MaxLines:_original.._value\", 100,
               sPropertiesDP + \".Settings.Timerange.Chrono:_original.._value\", true,
               sPropertiesDP + \".Settings.Name:_original.._value\", \"\",
               sPropertiesDP + \".Settings.User:_original.._value\", DEFAULT_USERID,
               sPropertiesDP + \".Settings.Type.AlertSummary:_original.._value\", 0
               ) ;
   
   }


   dpConnect(\"redrawScreen\", false,  sPropertiesDP + \".Settings.Timerange.Type:_online.._value\",
                                 sPropertiesDP + \".Settings.Timerange.Begin:_online.._value\", 
                                 sPropertiesDP + \".Settings.Timerange.End:_online.._value\");

   dpConnect(\"maxLinesCB\", sPropertiesDP + \".Settings.Timerange.MaxLines:_online.._value\", 
                           sPropertiesDP + \".Settings.Filter.DpComment:_online.._value\");



  ChildPanelOnCentralModalReturn(\"vision/audit_properties.pnl\", getCatStr(\"STD_Symbols\", \"properties\")+\"_\"+myPanelName() ,
                           makeDynString(\"\"), df, ds );

  if ( dynlen(df) > 0 && df[1] == 1)
  {
 
    refreshScreen(); 
    configNames.text	= \"\";
 
  }

}

maxLinesCB( string dp1, int max , string dp2, string sFilter)   // change of maxlines
{
  dyn_string ds=strsplit(sFilter, \"|\");;
  
  if ( max < 100)
    max = 100;
  iMaxLines = max;  // scriptglobal
  ds[4] = \"\";  // dummy

  if (dynlen(ds) > 0)  sUsernameFilter  = ds[1];  // scriptglobal
  if (dynlen(ds) > 1)  sItemFilter = ds[2];       // scriptglobal
  if (dynlen(ds) > 2)  sHostFilter = ds[3];       // scriptglobal

  refreshScreen();
}
             
             
redrawScreen(string dp1, bool b,
             string dp2, time tStart,
             string dp3, time tEnd)
{
   int type;


   if (b && tEnd > getCurrentTime())   // end in the future
     type = 1;                         // open with connect
   else if (!b && tEnd > getCurrentTime())   // end in the future
     type = 1;     // getPeriod
   else if ( tEnd <= getCurrentTime())   // end in the past
     type = 2;     // getPeriod
   
   if ( tEnd == tStart  && tStart == makeTime(1970,1,1))
     return;
   
  tabTail.deleteAllLines();
  
//DebugN(\"Type = \", type,b, tStart, tEnd );  
	  
	// disconnect if necessary
	if ( bConnect)
	{
	   dpDisconnect(  \"auditCB\", \"_AuditTrail.time:_online.._value\",
															\"_AuditTrail.username:_online.._value\",
															\"_AuditTrail.host:_online.._value\",
															\"_AuditTrail.uinum:_online.._value\",
															\"_AuditTrail.batchid:_online.._value\",
															\"_AuditTrail.item:_online.._value\",
															\"_AuditTrail.itemtype:_online.._value\",
															\"_AuditTrail.action:_online.._value\",
															\"_AuditTrail.oldval:_online.._value\",
															\"_AuditTrail.newval:_online.._value\",
															\"_AuditTrail.reason:_online.._value\");
	
	   bConnect = FALSE;
	
	}
	// connect  
	if (type == 1 || type == 0)
	{
	   dpConnect(  \"auditCB\", FALSE, \"_AuditTrail.time:_online.._value\",
																	\"_AuditTrail.username:_online.._value\",
																	\"_AuditTrail.host:_online.._value\",
																	\"_AuditTrail.uinum:_online.._value\",
																	\"_AuditTrail.batchid:_online.._value\",
																	\"_AuditTrail.item:_online.._value\",
																	\"_AuditTrail.itemtype:_online.._value\",
																	\"_AuditTrail.action:_online.._value\",
																	\"_AuditTrail.oldval:_online.._value\",
																	\"_AuditTrail.newval:_online.._value\",
																	\"_AuditTrail.reason:_online.._value\");
	   bConnect = TRUE;
	}

   if (type == 2 || type == 1)
   {    dyn_int dp1; 	dyn_time   t;
        dyn_int dp2;	dyn_string username;
        dyn_int dp3;	dyn_string host;
        dyn_int dp4;	dyn_uint   uinum;
        dyn_int dp5;	dyn_uint   batchid;
        dyn_int dp6;	dyn_string item;
        dyn_int dp7;	dyn_string itemtype;
        dyn_int dp8;	dyn_string action;
        dyn_int dp9;	dyn_anytype oldval;
        dyn_int dp10;	dyn_anytype newval;
        dyn_int dp11;	dyn_string reason;
        dyn_time dt1, dt2, dt3, dt4, dt5, dt6, dt7, dt8, dt9, dt10, dt11;

        int i;
        dyn_string ds;
        string sUsernameFilter, sItemFilter, sHostFilter;
        
        dyn_bool dbool1, dbool2;

             
            
      if ( tStart == 0 || tEnd == 0 || (tEnd < tStart))
        return;

	   dpGetPeriod(tStart,tEnd, 0, \"_AuditTrail.time:_offline.._value\",t,dt1, dp1,          // get elements
								\"_AuditTrail.username:_offline.._value\", username,  dt2, dp2,
								\"_AuditTrail.host:_offline.._value\",     host,      dt3, dp3,
								\"_AuditTrail.uinum:_offline.._value\",    uinum,     dt4, dp4,
								\"_AuditTrail.batchid:_offline.._value\",  batchid,   dt5, dp5,
								\"_AuditTrail.item:_offline.._value\",     item,      dt6, dp6,
								\"_AuditTrail.itemtype:_offline.._value\", itemtype,  dt7, dp7,
								\"_AuditTrail.action:_offline.._value\",   action,    dt8, dp8,
								\"_AuditTrail.oldval:_offline.._value\",   oldval,    dt9, dp9,
								\"_AuditTrail.newval:_offline.._value\",   newval,    dt10,dp10,
								\"_AuditTrail.reason:_offline.._value\" ,  reason,    dt11,dp11);

//     DebugN( tStart, tEnd, \"liefert in dpGetPEriod: \" , t);

//     for ( i= 1; i<= dynlen( dt1); i++)
//     DebugN(  t[i], dt1[i],\" 2\",  dt2[i], \" 3\",dt3[i], \" 4\",dt4[i],\" 5\", dt5[i],\" 6\", dt6[i],\" 7\", dt7[i], \" 8\",dt8[i],\" 9\",dt9[i],\" 10\", dt10[i], \" 11\",dt11[i]);

     auditCBLines(t,username,host,uinum,batchid,item,itemtype,action,oldval,newval,reason);   // write after filtercheck in table    
   
   }

  refreshScreen();

}


auditCB(string dp1, time t,
        string dp2,	string username,
        string dp3,	string host,
        string dp4,	unsigned  uinum,
        string dp5,	unsigned batchid,
        string dp6,	string item,
        string dp7,	string itemtype,
        string dp8,	string action,
        string dp9,	anytype oldval,
        string dp10,anytype newval,
        string dp11,string reason)

{
  string sTime = formatTime(\"%c\", t);
  string display = host;
  int manid = uinum;
  string device= item;
  anytype oldvalue=oldval;
  anytype newvalue= newval;
  int lines = tabTail.lineCount;
  bool bool1=TRUE, bool2=TRUE, bool3=TRUE;
  string ds;

  if (sUsernameFilter != \"\"  && sUsernameFilter!=\"*\")
       bool1 = patternMatch( sUsernameFilter,  username); 
  if (sItemFilter != \"\" && sItemFilter!=\"*\")
       bool2 = patternMatch( sItemFilter,  item); 
  if (sHostFilter != \"\" && sHostFilter!=\"*\")
       bool3 = patternMatch( sHostFilter,  host); 

  if (!(bool1 && bool2 && bool3))              // skip line -> no match
     return;


 ds = dpGetComment(device);
  
// DebugN(  \"time\", sTime, \"username\", username, \"display\", display, \"manid\", manid,\"batchid\",batchid , \"device\",ds, \"action\", action, \"oldvalue\", oldvalue, \"newvalue\", newvalue, \"reason\", reason, \"dp\", device);
  
  
  tabTail.appendLine(\"time\", sTime, \"username\", username, \"display\", display, \"manid\", manid,\"batchid\",batchid , \"device\",ds, \"action\", action, \"oldvalue\", oldvalue, \"newvalue\", newvalue, \"reason\", reason, \"dp\", device);

  if (lines > iMaxLines)                        // delete first line(s)
    tabTail.deleteLinesN(1, lines-iMaxLines);  

}

auditCBLines(dyn_time &t,              // & only for performance
             dyn_string &username,
             dyn_string &host,
             dyn_uint  &uinum,
             dyn_uint &batchid,
             dyn_string &item,
             dyn_string &itemtype,
             dyn_string &action,
             dyn_anytype &oldval,
             dyn_anytype &newval,
             dyn_string &reason)

{
  int i;
  int lines = tabTail.lineCount;
  dyn_bool dbool1, dbool2;
  dyn_string dsTime;
  dyn_string ds;
  

//DebugN(dynlen(t),  t, reason);  

   if (sUsernameFilter != \"\" && sUsernameFilter!=\"*\")
       dbool1 = patternMatch( sUsernameFilter,  username); 
 
   if ( dynlen( dbool1) > 0)
      for ( i= dynlen( t); i>0; i--)
      {
         if ( dbool1[i] == FALSE )  // -> remove  not matching with username or host
         {
            dynRemove(t, i);
            dynRemove(username, i);
            dynRemove(host, i);
            dynRemove(uinum, i);
            dynRemove(batchid, i);
            dynRemove(item, i);
            dynRemove(itemtype, i);
            dynRemove(action, i);
            dynRemove(oldval, i);
            dynRemove(newval, i);
            dynRemove(reason, i);
         }
      }
 
    dynClear(dbool1);
 
    if (sHostFilter != \"\" && sHostFilter!=\"*\")
       dbool1 = patternMatch( sHostFilter,  host); 

    if ( dynlen( dbool1) > 0)
      for ( i= dynlen( t); i>0; i--)
      {
         if ( dbool1[i] == FALSE )  // -> remove  not matching with username or host
         {
            dynRemove(t, i);
            dynRemove(username, i);
            dynRemove(host, i);
            dynRemove(uinum, i);
            dynRemove(batchid, i);
            dynRemove(item, i);
            dynRemove(itemtype, i);
            dynRemove(action, i);
            dynRemove(oldval, i);
            dynRemove(newval, i);
            dynRemove(reason, i);
         }
      }

 
   for (i=1; i<= dynlen(item); i++)       // find matching comments
      ds[i] = dpGetComment(item[i]);

   if (sItemFilter != \"\" && sItemFilter!=\"*\")  
       dbool2 = patternMatch( sItemFilter,  item); 
   if (sItemFilter != \"\" && sItemFilter!=\"*\")
       dbool1 = patternMatch( sItemFilter,  ds); 


   if ( dynlen( dbool2) > 0)
      for ( i= dynlen( t); i>0; i--)
      {
         if ( dbool2[i] == FALSE &&  dbool1[i] == FALSE)  // -> remove  if not maching with comment and dp !!
         {
            dynRemove(t, i);
            dynRemove(username, i);
            dynRemove(host, i);
            dynRemove(uinum, i);
            dynRemove(batchid, i);
            dynRemove(item, i);
            dynRemove(itemtype, i);
            dynRemove(action, i);
            dynRemove(oldval, i);
            dynRemove(newval, i);
            dynRemove(reason, i);
            dynRemove(ds, i);
         }
      }


   for ( i= dynlen( t); i>0; i--)     // convert time
   {
     dsTime[i] = formatTime(\"%c\", t[i]);
   }  




  tabTail.appendLines(dynlen(t), \"time\", dsTime, \"username\", username, \"display\", host, \"manid\", uinum,\"batchid\",batchid , \"device\",ds, \"action\", action, \"oldvalue\", oldval, \"newvalue\", newval, \"reason\", reason, \"dp\", item);

//  if (lines > iMaxLines)                        // delete first line(s)
//    tabTail.deleteLinesN(1, lines-iMaxLines);  

}








" 0
 E E E E 1 -1 -1 0  556 577
""0  1
E "// !!!!!!!!

refreshScreen()
{
  time tStart, tEnd;
  string sStart, sEnd;
  string sPropertiesDP;
  unsigned uTimerangeType, uFilterState;
  string sFilter;
  dyn_string ds, dsConfigs;
  string user;
  
  sPropertiesDP= \"_AuditProp_\"+myUiNumber()+\"_\"+myModuleName();

  
  
  
  if (dpExists(sPropertiesDP))     // create and sett default
   {
      dpGet(sPropertiesDP + \".Settings.Filter.State:_online.._value\", uFilterState,
            sPropertiesDP + \".Settings.Timerange.Type:_online.._value\", uTimerangeType,
            sPropertiesDP + \".Settings.Timerange.Begin:_online.._value\", tStart,
            sPropertiesDP + \".Settings.Timerange.End:_online.._value\", tEnd ,
            sPropertiesDP + \".Settings.Filter.DpComment:_online.._value\", sFilter ) ;
   
   }

  
  sStart = formatTime(\"%c\", tStart);
  sEnd = formatTime(\"%c\", tEnd);
 
  if (tEnd == 0)
    txtTime.text = getCatStr(\"sc\", \"current\");
  else    
    txtTime.text = sStart +\" -> \"+sEnd;
  
  ds = strsplit(sFilter, \"|\");
  ds[4] = \"\";
  sFilter = \"\";
  
  if (ds[1] != \"\" && ds[1] != \"*\")
    sFilter = getCatStr(\"sc\", \"userFilter\")+ \"=\\\"\"+ds[1]+\"\\\"\";
  
  if (ds[2] != \"\" && ds[2] != \"*\")
  {
    if ( sFilter != \"\")
      sFilter += \", \";
    sFilter += getCatStr(\"sc\", \"deviceFilter\")+ \"=\\\"\"+ds[2]+\"\\\"\";
  }
  if (ds[3] != \"\" && ds[3] != \"*\")
  {
    if ( sFilter != \"\")
      sFilter += \", \";
    sFilter += getCatStr(\"sc\", \"hostFilter\")+ \"=\\\"\"+ds[3]+\"\\\"\";
  } 

  txtFilter.text = sFilter;
  txtOptions.text	= \"\";
  
  
  getConfigList(dsConfigs);
  
  configNames.items = dsConfigs;
  
    
}


getConfigList(dyn_string &configNames, string dpt = \"_ASConfig\", string dpFilter = \"_AuditProp\")
{
  dyn_dyn_anytype configs;
  int i;
  string selectString = \"SELECT '_online.._value' FROM '\"+dpFilter+\"**.Name' WHERE _DPT = \\\"\"+dpt+\"\\\"\";

  dpQuery(\"SELECT '_online.._value' FROM '\"+dpFilter+\"**.Name' WHERE _DPT = \\\"\"+dpt+\"\\\" AND '_online.._value' == \\\"\\\"\", configs);
  for (i = 2; i <= dynlen(configs); i++) 
  {
    DebugN(\"automatic DELETE:\", configs[i][1]);
    dpDelete(dpSubStr(configs[i][1], DPSUB_SYS_DP));
  }


  dpQuery(selectString, configs);
           
           
  if ( dynlen(getLastError()) ) 
  {        dyn_errClass err = getLastError(); 
    errorDialog(err); 
    return; 
  } 
             
  for (i = 2; i <= dynlen(configs); i++) 
    dynAppend(configNames, configs[i][2]);


}

" 0
 2
"CBRef" "0"
"EClose" E
0 0 0
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
2 1
"Text2"
""
1 32 579 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
3 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 32 579 100 594
0 2 2 "0s" 0 0 0 192 0 0  32 579 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 14 Configuration:
LANG:10004 7 配置:
LANG:10000 14 Konfiguration:
LANG:10027 19 Настройки:
2 12
"Text11"
""
1 258 551 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
14 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 260 551 328 566
0 2 2 "0s" 0 0 0 192 0 0  260 551 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 11 Time range:
LANG:10004 13 时间范围:
LANG:10000 12 Zeitbereich:
LANG:10027 18 Врем. инт.:
2 47
"Text4"
""
1 259 578 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
48 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 271 578 318 593
0 2 2 "0s" 0 0 0 194 0 0  318 578 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 13 Filter:      
LANG:10004 7 过滤:
LANG:10000 13 Filter:      
LANG:10027 13 Фильтр:
2 51
"Text1"
""
1 635 549 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
49 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 637 549 661 564
0 2 2 "0s" 0 0 0 192 0 0  637 549 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 3 DP:
LANG:10004 3 DP:
LANG:10000 3 DP:
LANG:10027 3 DP:
30 53
"Frame1"
""
1 20 605 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
51 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 20 531 1010 605
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 10 Properties
LANG:10004 6 属性
LANG:10000 13 Eigenschaften
LANG:10027 16 Свойства
13 21
"close"
""
1 804 613 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
23 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  804 613 908 643

T 
4
LANG:10001 5 Close
LANG:10004 6 关闭
LANG:10000 10 Schließen
LANG:10027 14 Закрыть
"main()
{
  PanelOff();
}" 0
 E E E
13 22
"props"
""
1 122 613 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
24 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  122 613 226 643

T 
4
LANG:10001 13 Properties...
LANG:10004 9 属性…
LANG:10000 16 Eigenschaften...
LANG:10027 20 Свойства ...
"main()
{
  dyn_string ds;
  dyn_float df;

  ChildPanelOnCentralModalReturn(\"vision/audit_properties.pnl\", getCatStr(\"STD_Symbols\", \"properties\")+\"_\"+myPanelName() ,
                           makeDynString(\"\"), df, ds );

  if ( dynlen(df) > 0 && df[1] == 1)
  {
 
    refreshScreen(); 
    configNames.text	= \"\";
 
  }
}
" 0
 E E E
13 27
"help"
""
1 909 613 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
28 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  909 613 1009 643

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main()
{
  std_help(\"auditscreen\");
}
" 0
 E E E
22 33
"configNames"
""
1 115 572 E E E 1 E 1 E N {0,0,0} E N "_Window" E E
 E E
34 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  115 572 253 601
0

"main()
{
  dyn_string configNames;

  getConfigList(configNames);

  this.items = configNames;

}



" 0

"main()
{
  string dpConfig, configName, header;
   
  configName = this.text;

  if ( configName == \"\" ) return;
  
  getConfigDP(dpConfig, configName);
  
  if ( dpConfig == \"\" )
  {
    ChildPanelOnCentralModal(\"vision/MessageWarning\", \"\",
      makeDynString(\"$1:\" + getCatStr(\"sc\", \"unknownConfig\")));
    return;
  }

  getProperties(dpConfig);

}


getConfigDP(string &dp, string configName, string dpt = \"_ASConfig\", string dpFilter = \"_AuditProp\")
{
  dyn_dyn_anytype tab;
  string selectString = \"SELECT '_online.._value' FROM '\"+dpFilter+\"**.Name' WHERE _DPT = \\\"\"+dpt+\"\\\" AND '_online.._value' == \\\"\" + configName + \"\\\"\";
  dp = \"\";

  // get DP of selected configuration
  dpQuery(selectString, tab);
      
  if ( dynlen(getLastError()) )
  {
    dyn_errClass err = getLastError();
    errorDialog(err);
    return;
  }

  if ( dynlen(tab) < 2 ) return;
    
  dp = dpSubStr(tab[2][1], DPSUB_DP) ;
}


getProperties(string sPropertiesDP = \"\")
{
  time tStart, tEnd;
  string sStart, sEnd;
  unsigned uTimerangeType, uFilterState;
  langString lsHeader;
  string sUsernameFilter, sItemFilter, sHostFilter;
  string sFilter;
  dyn_string ds;
  bool bIsOpen;
  string sOffset;
  
  if ( sPropertiesDP == \"\")
      sPropertiesDP = \"_AuditProp_\"+myUiNumber()+\"_\"+myModuleName();

  if (dpExists(sPropertiesDP))     // create and sett default
   {
      if (dpTypeName(sPropertiesDP) == \"_ASProperties\")
        sOffset = \".Settings\";

 
      dpGet(sPropertiesDP + sOffset +\".Filter.State:_online.._value\", uFilterState,
            sPropertiesDP + sOffset +\".Timerange.Type:_online.._value\", uTimerangeType,
            sPropertiesDP + sOffset +\".Timerange.Begin:_online.._value\", tStart,
            sPropertiesDP + sOffset +\".Timerange.End:_online.._value\", tEnd,
            sPropertiesDP + sOffset +\".Header:_online.._value\", lsHeader,
            sPropertiesDP + sOffset +\".Filter.DpComment:_online.._value\", sFilter
              ) ;

      sPropertiesDP = \"_AuditProp_\"+myUiNumber()+\"_\"+myModuleName();
      sOffset = \".Settings\";

      dpSet(sPropertiesDP + sOffset +\".Filter.State:_original.._value\", uFilterState,
            sPropertiesDP + sOffset +\".Timerange.Type:_original.._value\", uTimerangeType,
            sPropertiesDP + sOffset +\".Timerange.Begin:_original.._value\", tStart,
            sPropertiesDP + sOffset +\".Timerange.End:_original.._value\", tEnd,
            sPropertiesDP + sOffset +\".Header:_original.._value\", lsHeader,
            sPropertiesDP + sOffset +\".Filter.DpComment:_original.._value\", sFilter
              ) ;
 

 
    }


}

" 0

E
 0 0
14 43
"txtTime"
""
1 324 545 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
44 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  326 544 632 571
2 "0s" 0 0 0 0 0 -1  E E E
25 46
"tabTail"
""
1 20 0 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
47 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 25 Arial,8,-1,5,50,0,0,0,0,0
0  18 -2 1032 510
E"main(int row, string column, string value)
{
  if (value != \"\" && value != \"0\")
  switch (column)
  {
    case \"device\":
    case \"batchid\":
    case \"action\":
    case \"reason\":
          ChildPanelOnCentralModal(\"vision/MessageInfoList\", getCatStr(\"scheduler\", \"details\")+\"_\"+myPanelName() ,
                           makeDynString(getCatStr(\"scheduler\", \"details\"), value, getCatStr(\"general\", \"OK\")));


  
             break;
    default: break;
  }
  txtOptions.text	= this.cellValueRC(row, \"dp\");
  
}" 0
 1 0 1 11 1 "time" 12 1 0 "s" 4
LANG:10001 4 Time
LANG:10004 6 时间
LANG:10000 4 Zeit
LANG:10027 10 Время
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

150 "username" 6 1 0 "s" 4
LANG:10001 4 User
LANG:10004 6 用户
LANG:10000 8 Benutzer
LANG:10027 24 Пользователь
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

80 "display" 8 1 0 "s" 4
LANG:10001 4 Host
LANG:10004 6 主机
LANG:10000 7 Rechner
LANG:10027 8 Хост
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

100 "manid" 2 1 0 "s" 4
LANG:10001 2 Id
LANG:10004 2 Id
LANG:10000 2 ID
LANG:10027 11 Идент.
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

33 "batchid" 6 1 0 "s" 4
LANG:10001 12 Batch id ...
LANG:10004 12 批次ID ...
LANG:10000 10 ChrgNr ...
LANG:10027 17 ИД пакета
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

80 "device" 14 1 0 "s" 4
LANG:10001 15 Used device ...
LANG:10004 16 曾用设备 ...
LANG:10000 23 Betroffenen Geräte ...
LANG:10027 53 Пользовательское устройство
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

162 "action" 6 1 0 "s" 4
LANG:10001 10 Action ...
LANG:10004 9 动作...
LANG:10000 10 Aktion ...
LANG:10027 24 Выполнение ...
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

79 "oldvalue" 8 1 0 "s" 4
LANG:10001 9 Old value
LANG:10004 12 逢变则报
LANG:10000 10 Alter Wert
LANG:10027 29 Старое значение
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

100 "newvalue" 8 1 0 "s" 4
LANG:10001 9 New value
LANG:10004 9 新数值
LANG:10000 10 Neuer Wert
LANG:10027 27 Новое значение
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

100 "reason" 9 1 0 "s" 4
LANG:10001 10 Reason ...
LANG:10004 9 原因...
LANG:10000 9 Grund ...
LANG:10027 18 Причина ...
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

107 "dp" 9 0 0 "s" 4
LANG:10001 9 Grund ...
LANG:10004 10 原因 ...
LANG:10000 13 DP unsichtbar
LANG:10027 17 Скрытый DP
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

107 
24 24 "" 1 4
LANG:10001 1 1
LANG:10004 1 1
LANG:10000 1 1
LANG:10027 1 1
8 30
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 25 Arial,8,-1,5,50,0,0,0,0,0
0 0 2 1 1 7
1 0
14 48
"txtFilter"
""
1 318 573 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
49 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  326 572 997 599
2 "0s" 0 0 0 0 0 -1  E E E
14 52
"txtOptions"
""
1 659 545 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
50 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  658 544 997 571
2 "0s" 0 0 0 0 0 -1  E E E
13 55
"drucken"
""
1 19 613 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
53 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  19 613 59 643

P 
10789024
"pictures/printer.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  dyn_string header, footer;
  string dummy;
  langString headerText;
  
  unsigned valState;
  string stateText;
  string valShortcut;
  string valPrio;
  string valDpComment;
  string valAlertText;
  dyn_string valDpList;
                          
  unsigned valType;
  time valBegin;
  time valEnd;
  
  dyn_int valTypeSelections;
  bool    valTypeAlertSummary;
  bool    bFirstType;
  int     i;
  string  valTypeFooter;
  
  dyn_string valSystemSelections;
  string     valSystemFooter;
  
  // TI 18225 - pallesch / variables for printTable()
  bool    showDialog = false;
  string  shapeName = \"tabTail\";
  int     columnsType=PT_VISIBLECOLUMNS;
  dyn_int columns=makeDynInt();
  bool    fitToPage=true;
  bool    landscape=true;
  bool    gridLines=true;
  bool    gridBackground=true;
  dyn_int margin=makeDynInt( 20,20,20,20 );
  string  printerName=\"\";
 
 
  time tStart, tEnd;
  string sStart, sEnd;
  string sPropertiesDP;
  unsigned uTimerangeType, uFilterState;
  string sFilter;
  string sOffset;
  langString lsHeader;
  dyn_string ds;
 
  sPropertiesDP = \"_AuditProp_\"+myUiNumber()+\"_\"+myModuleName();

  if (dpExists(sPropertiesDP))     // create and sett default
   {
      if (dpTypeName(sPropertiesDP) == \"_ASProperties\")
        sOffset = \".Settings\";

 
      dpGet(sPropertiesDP + sOffset +\".Filter.State:_online.._value\", uFilterState,
            sPropertiesDP + sOffset +\".Timerange.Type:_online.._value\", uTimerangeType,
            sPropertiesDP + sOffset +\".Timerange.Begin:_online.._value\", tStart,
            sPropertiesDP + sOffset +\".Timerange.End:_online.._value\", tEnd,
            sPropertiesDP + sOffset +\".Header:_online.._value\", lsHeader,
            sPropertiesDP + sOffset +\".Filter.DpComment:_online.._value\", sFilter
              ) ;



		  ds = strsplit(sFilter, \"|\");
	
		
		  ds[4] = \"\";
		  sFilter = \"\";
		  
		  if (ds[1] != \"\" && ds[1] != \"*\")
		    sFilter = getCatStr(\"sc\", \"userFilter\")+ \"=\\\"\"+ds[1]+\"\\\"\";
		  
		  if (ds[2] != \"\" && ds[2] != \"*\")
		  {
		    if ( sFilter != \"\")
		      sFilter += \", \";
		    sFilter += getCatStr(\"sc\", \"deviceFilter\")+ \"=\\\"\"+ds[1]+\"\\\"\";
		  }
		  if (ds[3] != \"\" && ds[3] != \"*\")
		  {
		    if ( sFilter != \"\")
		      sFilter += \", \";
		    sFilter += getCatStr(\"sc\", \"hostFilter\")+ \"=\\\"\"+ds[3]+\"\\\"\";
		  } 




  headerText = lsHeader;
  valBegin = tStart;
  valEnd = tEnd;
  valType = uTimerangeType;


  
  header[1] = \"\\\\left{\" + getCatStr(\"sc\", \"alerts\") + \",\" + 
              ((headerText == \"\") ? \"\" : (headerText + \",\")) + 
              formatTime(\"%c\", getCurrentTime()) + \"}\\\\center{\" +
              // show timerange only in closed mode
              ((valType == 2) ? (formatTime(\"%c\", valBegin) + \" - \" + formatTime(\"%c\", valEnd)) : \"\") +
              \"}\\\\right{\\\\page/\\\\numpages}\";
  header[2] = \"\\\\fill{_}\";
  header[3] = \"\\\\tablehead\";
  header[4] = \"\\\\fill{_}\";

  footer[1] = \"\\\\fill{_}\";
  footer[2] = getCatStr(\"sc\", \"filter\") + \": \" + sFilter;




  if( isMotif() )
  {
    setValue(\"tabTail\", \"printTable\",
              header,
              makeDynString(),   // no special column attributes
              footer,
              _UNIX ? \"AS_UNIX.cfg\" : \"AS_NT.cfg\",  // config-file for Alert Screen
              PAPER_FORMAT_A4_COND,
              true,              // landscape ?
              false,             // all columns ?
              '|',               // delimiter
              0,                 // leftSpace 
              0);                // lineSpace
  }
  else
  {
    // TI 18225 - pallesch / new printTable() instead of setValue( \"printTable\" ...
    printTable( shapeName,
                showDialog,
                header,
                footer,
                columnsType,
                columns,
                fitToPage,
                landscape,
                gridLines,
                gridBackground,
                margin,
                printerName );

    }
  }
}
" 0
 E E E
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
0
