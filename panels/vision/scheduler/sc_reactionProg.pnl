V 13
4
LANG:10001 16 Reaction program
LANG:10004 12 反应程序
LANG:10000 17 Reaktionsprogramm
LANG:10027 25 План действий
PANEL,-1 -1 560 609 N "_3DFace" 1
"$DP"
"main()
{
  // Common visibility
  buttonV.visible(TRUE);

  dynClear(p_dsSysNames);
  dynClear(p_duiSysIds);
  getSystemNames(p_dsSysNames, p_duiSysIds);
  sc_eventInitReaction();
  sc_loadTable(\"R\", \"tabReactionProgs\");
  
  if (p_bCancel == TRUE)
  {
    on.enabled(FALSE);
    off.enabled(FALSE);
    single.enabled(FALSE);
  }
    
  dynClear(p_dsPDC);
  sc_getObjectContentReact(p_dsPDC);
  
  // Common visibility
  buttonV.visible(FALSE);  
}" 0
 E E E E 1 -1 -1 0  20 20
""0  1
E "// ============================================================================
// Panel Global Variables
  int              p_iSpecDayMode,        //...Plan.specDaysMode
                   p_iVcRelOP,            //...Plan.time.vcRelOp
                   p_iCondType,           //...Plan.time.conditionType
                   p_iRelOp,              //...Plan.reaction.relOp
                   p_iRelOpON,            //...Plan.reaction.relOpON
                   p_iRelOpOFF,           //...Plan.reaction.relOpOFF
                   p_iValTyp,             //...Plan.reaction.valTyp
                   p_iSyncTime,           //...Plan.time.timedFunc.syncTime
                   p_iSyncWeekDay,        //...Plan.time.timedFunc.syncWeekDay
                   p_iSyncDay,            //...Plan.time.timedFunc.syncDay
                   p_iSyncMonth,          //...Plan.time.timedFunc.syncMonth
                   p_iDelay,              //...Plan.time.timedFunc.delay
                   p_iDpeType;
  unsigned         p_uInterval;           //...Plan.time.timedFunc.interval                   
  bool             p_bDpeListActive,      //...Plan.actions.dpeList.active
                   p_bRecipeActive,       //...Plan.actions.recipe.active
                   p_bPopUpActive,        //...Plan.actions.popUp.active
                   p_bRemAlarmActive,     //...Plan.actions.reminderAlarm.active
                   p_bScriptActive,       //...Plan.actions.script.active
                   p_bVcActive,           //...Tagesplan1.time.vcActive
                   p_bMode,               //...Plan.mode
                   p_bResult,             //...Plan.result
                   p_bLogEntry;           //...Plan.logEntry
  string           p_sRecipeType,         //...Plan.actions.recipe.recipeType
                   p_sRecipeName,         //...Plan.actions.recipe.recipeName
                   p_sRecipeTypeON,       //...Plan.actions.recipe.recipeTypeOn
                   p_sRecipeNameON,       //...Plan.actions.recipe.recipeNameOn
                   p_sRecipeTypeOFF,      //...Plan.actions.recipe.recipeTypeOff
                   p_sRecipeNameOFF,      //...Plan.actions.recipe.recipeNameOff
                   p_sScriptPath,         //...Plan.actions.script.path
                   p_sScriptPathON,       //...Plan.actions.script.pathOn
                   p_sScriptPathOFF,      //...Plan.actions.script.pathOff
                   p_sVcDpe,              //...Plan.time.vcDpeString
                   p_sVcValue,            //...Plan.time.vcValue
                   p_sVcTyp,              //...Plan.time.vcValue:_common
                   p_sType,               //...Plan.type
                   p_sDpe,                //...Plan.reaction.dpe
                   p_sDpe2,               //...Plan.reaction.dpe2
                   p_sValue,              //...Plan.reaction.value
                   p_sValueON,            //...Plan.reaction.valueON
                   p_sValueOFF,           //...Plan.reaction.valueOFF
                   p_sName;               //...Plan
  langString       p_lsName,              //...Plan.name
                   p_lsDescription,       //...Plan.name:_common  
                   p_lsAlarmText,         //...Plan.actions.reminderAlarm.text
                   p_lsPopUpText,         //...Plan.actions.popUp.text
                   p_lsSpecDay;           //...Plan.specDayList
  time             p_tValidFrom,          //...Plan.time.timedFunc.validFrom
                   p_tValidUntil;         //...Plan.time.timedFunc.validUntil
  dyn_string       p_dsDpeList,           //...Plan.actions.dpeList.dpes
                   p_dsDpeValuesOn,       //...Plan.actions.dpeList.dpeValuesON
                   p_dsDpeValuesOff,      //...Plan.actions.dpeList.dpeValuesOFF
                   p_dsDpeValues,         //...Plan.actions.dpeList.dpeValues
                   p_dsUsers,             //...Plan.actions.popUp.users
                   p_dsUis,               //...Plan.actions.popUp.uiNums
                   p_dsTimesWeekTable;    //...Plan.time.timesWeekTable
  dyn_int          p_diTime,              //...Plan.time.timedFunc.time
                   p_diWeekDay,           //...Plan.time.timedFunc.weekDay
                   p_diMonthDay,          //...Plan.time.timedFunc.monthDay
                   p_diMonth;             //...Plan.time.timedFunc.month
  dyn_time         p_dtTimesFree;         //...Plan.time.timesFreeScheduler

// ============================================================================
// MISC
// ----
  bool       p_bValue, 
             p_bDPE, 
             p_bWorkOnOff = TRUE, 
             p_bCancel = FALSE;
  dyn_string g_dsdpeRecent;
  int        p_iChange = 0;
  string     p_sDpe1,
             p_sNewDP = \"\";
  dyn_uint   p_duiSysIds;
  dyn_string p_dsSysNames;
  
//Panel data check
// ------------------------
  dyn_string        p_dsPDC;
    
// ============================================================================
// End variable definition
// ============================================================================
// ============================================================================
// Function:   sc_getOpjectContentReact()
// ============================================================================
sc_getObjectContentReact(dyn_string &ds)
{
  ds[1] = off.enabled();
  ds[2] = on.enabled();
  ds[3] = single.enabled();
  ds[4] = pb_selectActions.enabled();
  ds[5] = pb_selectAdvancedDPE2.enabled();
  ds[6] = pb_selectDPE2.enabled();

  ds[7] = cbConditionType.text();
  ds[8] = cbDPE1.text();
  ds[9] = cbDpe2.text();
  ds[10] = cbOFF.text();
  ds[11] = cbON.text();
  ds[12] = cbSingleRelOp.text();
  ds[13] = txtDPEoffValue.text();
  ds[14] = txtDPEonValue.text();
  ds[15] = txtFieldDescrip.text();
  ds[16] = txtFieldName.text();
  ds[17] = txtSingleValue.text();

  getMultiValue(\"chkDPE2\", \"state\", 0, ds[28],
                \"chkDpeList\", \"state\", 0, ds[29],
                \"chkLOG\", \"state\", 0, ds[30],
                \"chkPopUp\", \"state\", 0, ds[31],
                \"chkRecipe\", \"state\", 0, ds[32],
                \"chkScript\", \"state\", 0, ds[33],
                \"chkValue\", \"state\", 0, ds[34],
                \"chkAlarm\", \"state\", 0, ds[35]);
                
  getValue (\"radCurrentState\", \"number\", ds[36]);
}

// ============================================================================
// Function:     sc_dpe1EmptyEnDis() 
// ============================================================================
sc_dpe1EmptyEnDis()
{
  if (cbDPE1.text() == \"\")
  {
    txtConditionType.enabled = FALSE;
    cbConditionType.enabled = FALSE;
    txtRelOperator.enabled = FALSE;
    cbSingleRelOp.enabled = FALSE;
    chkValue.enabled = FALSE;
    chkDPE2.enabled = FALSE;
    chkValue.state(0)   = FALSE;
    chkDPE2.state(0)    = FALSE;
    txtValue.enabled = FALSE;
    txtDPE2.enabled = FALSE;
    fraVOn.enabled = FALSE;
    fraVOff.enabled = FALSE;
    cbON.enabled = FALSE;
    cbOFF.enabled = FALSE;
    txtSingleValue.enabled = FALSE;
    txtDPEonValue.enabled = FALSE;
    txtDPEoffValue.enabled = FALSE;
    cbDpe2.enabled = FALSE;
    pb_selectDPE2.enabled = FALSE;
    pb_selectAdvancedDPE2.enabled = FALSE;
  }
  else
  {
    txtConditionType.enabled = TRUE;
    cbConditionType.enabled = TRUE;
    txtRelOperator.enabled = TRUE;
    cbSingleRelOp.enabled = TRUE;
    
    fraVOn.enabled = TRUE;
    fraVOff.enabled = TRUE;
    cbON.enabled = TRUE;
    cbOFF.enabled = TRUE;
    txtDPEonValue.enabled = TRUE;
    txtDPEoffValue.enabled = TRUE;
    
    if (chkValue.state(0) == TRUE)
    {
      chkDPE2.enabled = FALSE;
      txtDPE2.enabled = FALSE;
      cbDpe2.enabled = FALSE;
      pb_selectDPE2.enabled = FALSE;
      pb_selectAdvancedDPE2.enabled = FALSE;

      chkValue.enabled = TRUE;
      txtValue.enabled = TRUE;
      txtSingleValue.enabled = TRUE;
    }
    else if (chkDPE2.state(0) == TRUE)
    {
      chkDPE2.enabled = TRUE;
      txtDPE2.enabled = TRUE;
      cbDpe2.enabled = TRUE;
      pb_selectDPE2.enabled = TRUE;
      pb_selectAdvancedDPE2.enabled = TRUE;

      chkValue.enabled = FALSE;
      txtValue.enabled = FALSE;
      txtSingleValue.enabled = FALSE;
    }
    else if (chkDPE2.state(0) == FALSE && chkValue.state(0) == FALSE)
    {
      chkDPE2.enabled = TRUE;
      txtDPE2.enabled = TRUE;
      cbDpe2.enabled = TRUE;
      pb_selectDPE2.enabled = TRUE;
      pb_selectAdvancedDPE2.enabled = TRUE;

      chkValue.enabled = TRUE;
      txtValue.enabled = TRUE;
      txtSingleValue.enabled = TRUE;
    }
  }
 }   
// ============================================================================
// Function:     sc_dpeDuplicate() 
// ============================================================================
sc_dpeDuplicate(string cbName)
{
  int     i1, i2;
  shape   cb;
  string  sMessageText;
  
  if(cbDPE1.text()!=\"\" && cbDpe2.text()!=\"\")
  {
    if(dpElementType(cbDPE1.text()) != dpElementType(cbDpe2.text()))
    {
      sMessageText = getCatStr(\"ac\",\"invalidname\");
      ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
    
      cb = getShape(cbName);
    
      cb.text() = \"\";  
      return;
    }
  
    if(cbDPE1.text() == cbDpe2.text())
    {
      sMessageText = getCatStr(\"scheduler\",\"invalidEntry\");
      ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
    
      cb = getShape(cbName);
    
      cb.text() = \"\";
      return;
    }
  }
}

// ============================================================================
// Function:     sc_eventInitReaction() - Event Initialize for reaction plan 
// ============================================================================
sc_eventInitReaction(string sName = \":\")
{
  int     i, iSpecDay, iErr = 0;
  bool    exist;
  string  dpType;
  time    t;
  
  p_sType = \"R\";
  
  // Read the datapoint; create it first, if it doesnt exist
  if (sName != \":\")
    p_sName = sName;
  else
  if (isDollarDefined(\"$DP\"))
    p_sName = $DP;

  exist = dpExists(p_sName);
  
  if (exist)
    dpType = dpTypeName(p_sName);
  
  if (exist && dpType != \"_Sc\")
  {
    //DebugN(\"Change the datapoint name. Invalid name\", p_sName);
    PanelOff();
  }
  
  if ((p_sName == \"\") || (!exist))
  {
    sc_createNewSchedulerName(p_sName, iErr);
    p_sType = \"R\";
    if (iErr == -5)
    {
      //DebugN(\"Cannot create this datapoint\", p_sName);
      sc_errorHandling(iErr);
      return;
    }
    else
      sc_setPlanDefaults(p_sName, p_sType);
  }
  
  if (dpExists(p_sName))
  sc_readProgram(p_sName);

  // Fill in the mask    
  //-- Name and description  
  txtFieldName.text     = p_lsName[getActiveLang()];            // Datapoint name
  txtFieldDescrip.text   = p_lsDescription[getActiveLang()];    // Plan description

  radCurrentState.number = p_bMode ? 0 : 1;      // Plan state

  //-- Condition type
  cbConditionType.selectedPos = p_iValTyp < 3 ? 1 : 2;
  p_bValue = (p_iValTyp == 1);
  p_bDPE = (p_iValTyp == 2);
  sc_setValType(cbConditionType.selectedPos);
  
  cbSingleRelOp.selectedPos = p_iRelOp == 0 ? 1 : p_iRelOp;
  cbON.selectedPos          = p_iRelOpON == 0 ? 1 : p_iRelOpON;
  cbOFF.selectedPos         = p_iRelOpOFF == 0 ? 1 : p_iRelOpOFF;
  cbDPE1.editable           = TRUE;
  cbDpe2.editable           = TRUE;
  
  sc_checkSys(p_sDpe, p_sDpe);
  cbDPE1.text               = p_sDpe;
  
  sc_checkSys(p_sDpe2, p_sDpe2);
  cbDpe2.text               = p_sDpe2;
  txtSingleValue.text       = p_sValue;
  txtDPEonValue.text        = p_sValueON;
  txtDPEoffValue.text       = p_sValueOFF;

  //Initial checkbox status
  chkValue.state(0)   = p_bValue;
  chkDPE2.state(0)     = p_bDPE;
  chkLOG.state(0)     = p_bLogEntry;  
  chkDpeList.state(0) = p_bDpeListActive;
  chkRecipe.state(0)   = p_bRecipeActive;
  chkPopUp.state(0)   = p_bPopUpActive; 
  chkAlarm.state(0)   = p_bRemAlarmActive;
  chkScript.state(0)   = p_bScriptActive;  
  
  // Plan activated/deactivated
  radCurrentState.number = p_bMode ? 0 : 1;
  
  // Data format
  //if (cbConditionType.selectedPos == 1)
    sc_dpeAndValues(p_sDpe, \"cbDPE1\", \"txtSingleValue\");      //Single value
  //else
    sc_dpeAndValues(p_sDpe, \"cbDPE1\", \"txtDPEonValue\", false, \"txtDPEoffValue\");  //ON/OFF value

  sc_dpe1EmptyEnDis();
    
}

// ============================================================================
// Function:  sc_setValType
// ============================================================================
sc_setValType(int type)
{
  switch(type)
  {
    case 1:
      txtDPEoffValue.visible(FALSE);
        txtDPEonValue.visible(FALSE);
        cbON.visible(FALSE);
        cbOFF.visible(FALSE);
        fraVOff.visible(FALSE);
        fraVOn.visible(FALSE);
        on.visible(false);
        off.visible(false);
                             
        txtRelOperator.visible(FALSE);
        txtValue.visible(FALSE);
        txtDataType.visible(FALSE);
        txtRelOperator.position(150,175);
        txtValue.text(getCatStr(\"scheduler\", \"m11\"));
        txtValue.position(148, 205);
        txtDataType.position(468,201);
        txtRelOperator.visible(TRUE);
        txtValue.visible(TRUE);
        txtDataType.visible(TRUE);

        cbSingleRelOp.visible(TRUE);
        txtDPE2.visible(TRUE);
        chkDPE2.visible(TRUE);
        cbDpe2.visible(TRUE);
        pb_selectDPE2.visible(TRUE);
        pb_selectAdvancedDPE2.visible(TRUE);
        chkValue.visible(TRUE);
        txtSingleValue.visible(TRUE);
        single.visible(true);
        sc_objectsEnabled();
        break;

    case 2:
        cbSingleRelOp.visible(FALSE);
        txtDPE2.visible(FALSE);
        chkDPE2.visible(FALSE);
        cbDpe2.visible(FALSE);
        pb_selectDPE2.visible(FALSE);
        pb_selectAdvancedDPE2.visible(FALSE);
        chkValue.visible(FALSE);
        txtSingleValue.visible(FALSE);
        single.visible(false);

        txtRelOperator.visible(FALSE);
        txtValue.visible(FALSE);
        txtDataType.visible(FALSE);
        txtRelOperator.position(149,195);
        txtValue.text(getCatStr(\"scheduler\", \"m12\"));
        txtValue.position(148, 225);
        txtDataType.position(465,222);
        txtRelOperator.visible(TRUE);
        txtValue.visible(TRUE);
        txtDataType.visible(TRUE);

        txtDPEoffValue.visible(TRUE);
        txtDPEonValue.visible(TRUE);
        cbON.visible(TRUE);
        cbOFF.visible(TRUE);
        fraVOff.visible(TRUE);
        fraVOn.visible(TRUE);
        on.visible(true);
        off.visible(true);
                             
        break;
  }
}

// ============================================================================
// Function:  sc_objectsEnabled() 
// ============================================================================
sc_objectsEnabled()
{
  bool I, II;
  
  I  = p_bValue || !p_bDPE;
  II = p_bDPE || !p_bValue;
  
  //Value
  chkValue.enabled(I);
  txtDataType.enabled(I);
  txtSingleValue.enabled(I);
  txtValue.enabled(I);
   
  //Dpe2
  cbDpe2.enabled(II);
  chkDPE2.enabled(II);
  pb_selectAdvancedDPE2.enabled(II);
  pb_selectDPE2.enabled(II);
  txtDPE2.enabled(II);      
}

// ============================================================================
// Function:  sc_saveReactionPlan
// ============================================================================
sc_saveReactionPlan()
{
  int   iErr, i, rc;

  // Save into the global variables
  //-- Value type condition
  if (cbConditionType.selectedPos == 2)   p_iValTyp = 3;
  else if (p_bDPE)                        p_iValTyp = 2;
  else if (p_bValue)                      p_iValTyp = 1;
  else                                    p_iValTyp = 0;
 
  p_bMode = (radCurrentState.number == 0); // Activated/Deactivated
  
  p_iRelOp     = cbSingleRelOp.selectedPos;
  p_iRelOpON   = cbON.selectedPos;
  p_iRelOpOFF  = cbOFF.selectedPos;
  p_sDpe       = dpSubStr(cbDPE1.text, DPSUB_SYS_DP_EL);
  p_sDpe2      = dpSubStr(cbDpe2.text, DPSUB_SYS_DP_EL);
  p_sValue     = txtSingleValue.text;
  p_sValueON   = txtDPEonValue.text;
  p_sValueOFF  = txtDPEoffValue.text;
  
  p_bLogEntry       = chkLOG.state(0);
  p_bDpeListActive  = chkDpeList.state(0);
  p_bRecipeActive   = chkRecipe.state(0);
  p_bPopUpActive    = chkPopUp.state(0); 
  p_bRemAlarmActive = chkAlarm.state(0);
  p_bScriptActive   = chkScript.state(0);  

  // Write the values into the database
  sc_writeProgram(p_sName);  
}

// ============================================================================
// Function: sc_currentDPE
//           datapoint selector and combobox handling
//           cbName : combobox; dpe_string: selected datapoint
// ============================================================================
bool sc_currentDPE(string cbName, string dpe_string)
{  
  int    imaxComboList = 20;
  string dpe_string_formatted, dpe2, dpe3, combo, sMessageText;
  shape  cb;

  if(p_bWorkOnOff == FALSE)
    return 0;
  
  cb = getShape(cbName);
  
  // String is empty?
  if(dpe_string == \"\")
  {
    cb.text = last_dpe.text;
    return 0; 
  }

  // DPE exists?
  if(!dpExists(dpe_string + \":_online.._value\"))
  {
    string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\") + \"!\";
    dpe_string_formatted  =  last_dpe.text();
    sc_checkSys(dpe_string_formatted, dpe_string_formatted);  
    this.text=dpe_string_formatted;
    ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
    return 0;    
  }
  
  if (dpTypeName(dpe_string) == \"_Sc\")// _Sc type is only \"mode\" valid!
  {
    dpe_string = dpSubStr(dpe_string,DPSUB_SYS_DP_EL); 
    dpe2 = dpSubStr(dpe_string,DPSUB_SYS_DP);
    dpe3 = dpe_string;
    strreplace(dpe3, dpe2, \"\");

    if(dpe3 != \".mode\" || dpSubStr(dpe2,DPSUB_SYS_DP) == dpSubStr(p_sName,DPSUB_SYS_DP))
    {
      if (cb.name == \"cbDpe2\")
        cb.text = \"\";
      else
      {
        cb.text = \"\";
        txtDPEonValue.text = \"\";
        txtDPEoffValue.text = \"\";
        txtSingleValue.text = \"\";
      }
        
      sMessageText = getCatStr(\"scheduler\",\"invalidEntry\");
      ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
      
      return 0;
    }
  }    
  if (dpTypeName(dpe_string) == \"_ScCom\") // _ScCom type is not allowed!
  {
    string sMessageText=getCatStr(\"ac\",\"invalidname\");
    ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));

    if (cb.name == \"cbDpe2\")
      cb.text = \"\";
    else
    {
      cb.text = \"\";
      txtDPEonValue.text = \"\";
      txtDPEoffValue.text = \"\";
      txtSingleValue.text = \"\";
    }   
    return 0;
  }
  
  // If OK
  sc_checkSys(dpe_string, dpe_string_formatted);
  
  cb.text = dpe_string_formatted;
  
  // ComboxList not System*1:_mp_ANALOG1.value:_pv_range.._typelanger then imaxComboList // NoCheckWarning 
  if(dynContains(g_dsdpeRecent, dpe_string_formatted) <= 0)
  {
    dynInsertAt(g_dsdpeRecent, dpe_string_formatted, 1);
  }
  else
  {
    dynRemove(g_dsdpeRecent, dynContains(g_dsdpeRecent, dpe_string_formatted));
    dynInsertAt(g_dsdpeRecent, dpe_string_formatted, 1);
  }
  if(dynlen(g_dsdpeRecent) > imaxComboList)
    dynRemove(g_dsdpeRecent, imaxComboList + 1);
    
  this.items = g_dsdpeRecent;  
  dpSet(myUiDpName()+\".DpeInfo.RecentDpe.LastDpes:_original.._value\", g_dsdpeRecent);
  
  sc_checkSys(dpe_string, dpe_string_formatted);
  
  last_dpe.text=dpe_string;
  
  return 1;
}




" 0
 3
"CBRef" "0"
"EClose" "main()
{
  dyn_float  df;
  dyn_string ds;
  
  dynClear(ds);
  dynAppend(ds, p_bCancel);  // TRUE means NEW schedule no APPLY
  dynAppend(ds, p_sNewDP);

  PanelOffReturn(df, ds);
}" 0

"dpi" "96"
0 0 0
""
1
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
30 2
"fraReacProgDetails"
""
1 10 550 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
2 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 10 10 550 550
4
LANG:10001 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,75,0,0,0,0,0
0 4
LANG:10001 24 Reaction program details
LANG:10004 18 反应程序详细
LANG:10000 25 Details Reaktionsprogramm
LANG:10027 44 Детальный план действия
2 3
"txtDPE1"
""
1 142 112 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
3 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 113 112 151 127
0 2 2 "0s" 0 0 0 194 0 0  151 112 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 5 DPE 1
LANG:10004 5 DPE 1
LANG:10000 5 DPE 1
LANG:10027 5 DPE 1
2 4
"txtName"
""
1 149 32 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 122 32 151 47
0 2 2 "0s" 0 0 0 194 0 0  151 32 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 5 Name:
LANG:10004 5 Name:
LANG:10000 5 Name:
LANG:10027 7 Имя:
2 5
"txtDescripOfProg"
""
1 149 62 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 88 62 151 77
0 2 2 "0s" 0 0 0 194 0 0  151 62 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 12 Description:
LANG:10004 9 描述：
LANG:10000 13 Beschreibung:
LANG:10027 17 Описание:
30 47
"fraReactions"
""
1 150 353 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
10 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 150 270 540 360
4
LANG:10001 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,75,0,0,0,0,0
0 4
LANG:10001 8 Reaction
LANG:10004 6 反应
LANG:10000 8 Reaktion
LANG:10027 16 Действие
2 48
"txtRelOperator"
""
1 149 172 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 21 172 151 187
0 2 2 "0s" 0 0 0 194 0 0  151 172 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 20 Relational operator:
LANG:10004 18 关系运算符：
LANG:10000 20 Logische Operatoren:
LANG:10027 37 Логическ. операторы:
2 50
"txtDPE2"
""
1 149 232 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
12 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 113 232 151 247
0 2 2 "0s" 0 0 0 194 0 0  151 232 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 5 DPE 2
LANG:10004 5 DPE 2
LANG:10000 5 DPE 2
LANG:10027 5 DPE 2
2 55
"txtValue"
""
1 148 205 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
14 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 30 205 150 220
0 2 2 "0s" 0 0 0 194 0 0  150 205 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 12 Value range:
LANG:10004 15 取值范围：
LANG:10000 13 Wertebereich:
LANG:10027 34 Диапазон значений:
30 67
"fraCondition"
""
1 20 247 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
15 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 20 90 540 260
4
LANG:10001 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,75,0,0,0,0,0
0 4
LANG:10001 9 Condition
LANG:10004 6 条件
LANG:10000 9 Bedingung
LANG:10027 14 Условие
30 68
"fraCurrentState"
""
1 20 353 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
17 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 20 270 140 360
4
LANG:10001 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,75,0,0,0,0,0
0 4
LANG:10001 13 Current state
LANG:10004 12 当前状态
LANG:10000 16 Aktueller Status
LANG:10027 33 Текущее состояние
2 79
"txtLOG"
""
1 189 286 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
23 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 180 287 226 302
0 2 2 "0s" 0 0 0 193 0 0  203 287 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 3 LOG
LANG:10004 3 LOG
LANG:10000 3 LOG
LANG:10027 12 Журнал
30 98
"fraVOn"
""
1 161 250 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
32 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E 1.035971223021583 0 1 -5.79136690647482 0 0 E 161 170 301 250
4
LANG:10001 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,75,0,0,0,0,0
0 4
LANG:10001 12 ON condition
LANG:10004 12 ON condition
LANG:10000 13 EIN Bedingung
LANG:10027 21 Условие ВКЛ
30 99
"fraVOff"
""
1 311 250 E E E 1 E 0 E N "_3DText" E N "_Transparent" E E
 E E
33 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E 1.043165467625899 0 1 -9.424460431654662 0 0 E 311 170 451 250
4
LANG:10001 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,75,0,0,0,0,0
0 4
LANG:10001 13 OFF condition
LANG:10004 13 OFF condition
LANG:10000 13 AUS Bedingung
LANG:10027 23 Условие ВЫКЛ
2 110
"txtConditionType"
""
1 149 142 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
38 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 73 142 151 157
0 2 2 "0s" 0 0 0 194 0 0  151 142 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 15 Condition type:
LANG:10004 15 条件类型：
LANG:10000 14 Bedingungstyp:
LANG:10027 22 Тип условия:
2 125
"txtRecipe"
""
1 291 286 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
47 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 291 287 333 302
0 2 2 "0s" 0 0 0 193 0 0  312 287 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 6 Recipe
LANG:10004 6 配方
LANG:10000 6 Rezept
LANG:10027 12 Рецепт
2 126
"txtPopUp"
""
1 342 286 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
48 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 350 287 380 302
0 2 2 "0s" 0 0 0 193 0 0  365 287 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 6 Pop-up
LANG:10004 6 弹窗
LANG:10000 6 Pop-up
LANG:10027 8 Окно
2 127
"txtAlarm"
""
1 400 286 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
49 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 398 287 438 302
0 2 2 "0s" 0 0 0 193 0 0  418 287 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 5 Alarm
LANG:10004 6 报警
LANG:10000 5 Alarm
LANG:10027 10 Аларм
2 128
"txtScript"
""
1 454 286 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
50 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 450 287 492 302
0 2 2 "0s" 0 0 0 193 0 0  471 287 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 6 Script
LANG:10004 6 脚本
LANG:10000 6 Skript
LANG:10027 12 Скрипт
2 129
"txtDpeList"
""
1 234 286 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
51 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 241 287 269 302
0 2 2 "0s" 0 0 0 193 0 0  255 287 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 8 DPE list
LANG:10004 8 DPE list
LANG:10000 9 DPE Liste
LANG:10027 3 DPE
2 133
"Text8"
""
1 238 330 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
54 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 153 330 240 345
0 2 2 "0s" 0 0 0 194 0 0  240 330 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 15 Test action(s):
LANG:10004 12 测试动作
LANG:10000 12 Aktionstest:
LANG:10027 26 Тест.действия:
2 139
"txtDataType"
""
1 463 203 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
58 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 465 205 531 220
0 2 0 "0s" 0 0 0 64 0 0  465 205 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 0 
LANG:10004 0 
LANG:10000 0 
LANG:10027 0 
13 131
"ok"
""
1 283 573 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
1 0 0 0 16777221 0
E E E
0
4
LANG:10001 30 Accept changes and close panel
LANG:10004 21 接受更改并关闭
LANG:10000 38 Änderungen übernehmen und schließen
LANG:10027 64 Принять изменения и закрыть панель

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  283 573 371 601

T 
4
LANG:10001 2 OK
LANG:10004 2 OK
LANG:10000 2 OK
LANG:10027 2 OK
"main()
{
  dyn_float  df;
  dyn_string ds;
  
  if (cbDPE1.text() == \"\")
  {
    sc_noDpe1(ds, df);
    dynClear(ds);
    dynAppend(ds, TRUE);  //TRUE means no saving
    dynAppend(ds, p_sNewDP);
    PanelOffReturn(df,ds);
  }
  else
  {
    sc_saveReactionPlan();
    PanelOff();
  }       
}
" 0
 E E E
14 24
"txtFieldName"
""
1 160 30 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
6 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  158 28 457 54
3 "0s" 0 0 0 0 0 -1  "main()
{
  sc_name(\"txtFieldName\");
}" 0
 E E
14 26
"txtFieldDescrip"
""
1 160 60 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
7 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  158 58 457 84
3 "0s" 0 0 0 0 0 -1  "main()
{
  langEditor(p_lsDescription);
  txtFieldDescrip.text = p_lsDescription[getActiveLang()];
}" 0
 E E
19 27
"radCurrentState"
""
1 30 290 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
8 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  28 288 127 352
2
T 
4
LANG:10001 6 Active
LANG:10004 6 激活
LANG:10000 11 Freigegeben
LANG:10027 14 Активно

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
T 
4
LANG:10001 8 Inactive
LANG:10004 6 禁用
LANG:10000 8 Gesperrt
LANG:10027 18 Неактивно

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E "main(int button)
{
  p_bMode = (button == 0);
}
" 0

13 32
"pb_selectDPE1"
""
1 469 110 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
9 0 0 0 0 0
E E E
0
4
LANG:10001 23 Open datapoint selector
LANG:10004 14 打开DP选择
LANG:10000 25 Datenpunktauswahl öffnen
LANG:10027 55 Открыть селектор точки данных

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  468 108 496 136

P 
10862530
"pictures/StandardIcons/dpeMon_tree_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  p_iChange = 1;
  sc_tree(p_sDpe1); 
}
" 0
 E E E
13 53
"pb_selectDPE2"
""
1 469 229 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
13 0 0 0 0 0
E E E
0
4
LANG:10001 23 Open datapoint selector
LANG:10004 14 打开DP选择
LANG:10000 25 Datenpunktauswahl öffnen
LANG:10027 55 Открыть селектор точки данных

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  468 227 496 255

P 
10862530
"pictures/StandardIcons/dpeMon_tree_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  p_iChange = 2;
  sc_tree(p_sDpe2); 
}
" 0
 E E E
13 69
"langEditName"
""
1 470 30 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
16 0 0 0 0 0
E E E
0
4
LANG:10001 18 Edit schedule name
LANG:10004 18 编辑调度名称
LANG:10000 23 Programmnamen editieren
LANG:10027 44 Изменить имя расписания

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  468 28 496 56

P 
12303291
"pictures/StandardIcons/edit_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  sc_name(\"txtFieldName\");
}" 0
 E E E
13 70
"langEditDesc"
""
1 470 60 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
18 0 0 0 0 0
E E E
0
4
LANG:10001 25 Edit schedule description
LANG:10004 18 编辑调度描述
LANG:10000 30 Programmbeschreibung editieren
LANG:10027 54 Изменить описание расписания

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  468 58 496 86

P 
12303291
"pictures/StandardIcons/switch_de_en_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  langEditor(p_lsDescription);
  txtFieldDescrip.text = p_lsDescription[getActiveLang()];
}" 0
 E E E
20 73
"chkValue"
""
1 50 200 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
19 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  48 198 62 222
1
T 
4
LANG:10001 12 CheckButton1
LANG:10004 12 CheckButton1
LANG:10000 12 CheckButton1
LANG:10027 12 CheckButton1

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
E"main(int button, bool state)
{
  p_bValue = state;
  if (state) 
    p_bDPE = FALSE;
  sc_objectsEnabled();
}" 0
20 76
"chkDPE2"
""
1 50 230 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
20 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  48 228 62 252
1
T 
4
LANG:10001 12 CheckButton1
LANG:10004 12 CheckButton1
LANG:10000 12 CheckButton1
LANG:10027 12 CheckButton1

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
E"main(int button, bool state)
{
  p_bDPE = state;
  if (state)  
    p_bValue = FALSE; 
  sc_objectsEnabled();
}
" 0
13 77
"pb_selectAdvancedDPE2"
""
1 499 229 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
21 0 0 0 0 0
E E E
0
4
LANG:10001 17 Datapoint details
LANG:10004 8 DP详细
LANG:10000 17 Datenpunktdetails
LANG:10027 19 Описание DP

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  498 227 526 255

P 
13421721
"pictures/StandardIcons/open_details_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  p_iChange = 0;
    
  if (cbDpe2.text != \"\")
    sc_dpeDetails(cbDpe2.text);
}" 0
 E E E
13 78
"pb_selectAdvancedDPE1"
""
1 499 110 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
22 0 0 0 0 0
E E E
0
4
LANG:10001 17 Datapoint details
LANG:10004 8 DP详细
LANG:10000 17 Datenpunktdetails
LANG:10027 19 Описание DP

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  498 108 526 136

P 
13421721
"pictures/StandardIcons/open_details_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  p_iChange = 0;
  
  if (cbDPE1.text != \"\")
    sc_dpeDetails(cbDPE1.text);
}
" 0
 E E E
20 80
"chkLOG"
""
1 200 305 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
25 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  198 303 212 322
1
T 
3
LANG:10000 1  
LANG:10001 1  
LANG:10027 1  

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
EE13 81
"cancel"
""
1 463 573 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
24 0 0 0 27 0
E E E
0
4
LANG:10001 31 Discard changes and close panel
LANG:10004 30 放弃修改的数值并关闭
LANG:10000 42 Änderungen verwerfen und Panel schließen
LANG:10027 66 Отменить изменения и закрыть панель

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  463 573 551 601

T 
4
LANG:10001 6 Cancel
LANG:10004 6 取消
LANG:10000 9 Abbrechen
LANG:10027 16 Отменить
"main()
{
  dyn_float  df;
  dyn_string ds;
  
  dynClear(ds);
  dynAppend(ds, p_bCancel);  // TRUE means NEW schedule no APPLY
  dynAppend(ds, p_sNewDP);

  PanelOffReturn(df, ds); 
}" 0
 E E E
13 83
"save"
""
1 373 573 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
26 0 0 0 0 0
E E E
0
4
LANG:10001 14 Accept changes
LANG:10004 12 接受更改
LANG:10000 23 Änderungen übernehmen
LANG:10027 37 Применить изменения

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  373 573 461 601

T 
4
LANG:10001 5 Apply
LANG:10004 6 应用
LANG:10000 11 Übernehmen
LANG:10027 18 Применить
"main()
{
  dyn_float  df;
  dyn_string ds;
  
  if (cbDPE1.text() == \"\")
  {
    sc_noDpe1(ds, df);
    return;
  }

  sc_saveReactionPlan();
  
  // Update table
  tabReactionProgs.deleteAllLines();
  sc_loadTable(\"R\", \"tabReactionProgs\");
  
  p_bCancel = FALSE; //APPLY was done
  on.enabled(TRUE);
  off.enabled(TRUE);
  single.enabled(TRUE);
  
  
  dynClear(p_dsPDC);
  sc_getObjectContentReact(p_dsPDC);
}
" 0
 E E E
13 84
"Help"
""
1 9 573 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
27 0 0 0 112 0
E E E
0
4
LANG:10001 16 Open online help
LANG:10004 18 打开在线帮助
LANG:10000 20 Online Hilfe öffnen
LANG:10027 29 Открыть справку

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  8 573 96 601

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main()
{
  std_help(\"sc_reactionProg\");
}" 0
 E E E
13 85
"pb_selectActions"
""
1 499 301 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
29 0 0 0 0 0
E E E
0
4
LANG:10001 19 Open action details
LANG:10004 18 打开动作详细
LANG:10000 22 Aktionsdetails öffnen
LANG:10027 48 Детали открытого действия

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  498 299 526 327

P 
13421721
"pictures/StandardIcons/open_details_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  dyn_float  df;
  dyn_string ds;
  string     sDpeList, sDpeString, sPopupText, sAlarmText,
             sValues, sDpeValueOn, sDpeValueOff,
             sUsers, sUis, 
             p_sPopUpMode, p_sPopUpDate, p_sGroup;
  bool       bSingleOrOnOff;
  langString p_lsPopUpName;
    
  bSingleOrOnOff = (cbConditionType.selectedPos == 2);
  p_bWorkOnOff = FALSE;

  // Convert dynamic strings into strings
  sDpeList = p_dsDpeList;
  sDpeValueOn = p_dsDpeValuesOn;
  sDpeValueOff = p_dsDpeValuesOff;
  sValues = p_dsDpeValues;
  sUsers = p_dsUsers;
  sUis = p_dsUis;
  // MS: the real dp-list will be saved into p_dsDpeString!!
  sDpeString = p_dsDpeList;
  // Convert language strings into strings
  ls2s(p_lsPopUpText, sPopupText);
  ls2s(p_lsAlarmText, sAlarmText);

   ChildPanelOnCentralModalReturn( \"/vision/scheduler/sc_actions.pnl\",
                                   getCatStr(KAT, \"m13\"),
                                   makeDynString(\"$ScriptPath:\"     +  p_sScriptPath,
                                                 \"$ScriptPathON:\"   +  p_sScriptPathON,
                                                 \"$ScriptPathOFF:\"  +  p_sScriptPathOFF,
                                                 \"$DpeString:\"      +  sDpeString,
                                                 \"$DpeList:\"        +  sDpeList,
                                                 \"$Values:\"         +  sValues,
                                                 \"$DpeValueOn:\"     +  sDpeValueOn,
                                                 \"$DpeValueOff:\"    +  sDpeValueOff,
                                                 \"$RecipeType:\"     +  p_sRecipeType,
                                                 \"$RecipeName:\"     +  p_sRecipeName,
                                                 \"$RecipeTypeON:\"   +  p_sRecipeTypeON,
                                                 \"$RecipeNameON:\"   +  p_sRecipeNameON,
                                                 \"$RecipeTypeOFF:\"  +  p_sRecipeTypeOFF,
                                                 \"$RecipeNameOFF:\"  +  p_sRecipeNameOFF,
                                                 \"$AlarmText:\"      +  sAlarmText,
                                                 \"$PopUpText:\"      +  sPopupText,
                                                 \"$PopUpMode:\"      +  p_sPopUpMode,
                                                 \"$PopUpDate:\"      +  p_sPopUpDate,
                                                 \"$PopUpGroup:\"     +  p_sGroup,
                                                 \"$PopUpUsers:\"     +  sUsers,
                                                 \"$PopUpUis:\"       +  sUis,
                                                 \"$DpeListActive:\"  +  p_bDpeListActive,
                                                 \"$RecipeActive:\"   +  p_bRecipeActive,
                                                 \"$PopUpActive:\"    +  p_bPopUpActive,
                                                 \"$RemAlarmActive:\" +  p_bRemAlarmActive,
                                                 \"$ScriptActive:\"   +  p_bScriptActive,
                                                 \"$SingleOrOnOff:\"  +  bSingleOrOnOff,
                                                 \"$sName:\"          +  p_sName), df, ds);

  if(dynlen(df)>=1)
  if(df[1] == 1)
  {
    p_sScriptPath = ds[1];       // Script path
    s2ls(ds[2], p_lsAlarmText);  // Alarm text
    s2ls(ds[3], p_lsPopUpText);  // PopUp text
    
//    p_dsDpeList       = strsplit(ds[4], \"|\");  //  DPE list, column 0
    p_dsDpeValuesOn   = strsplit(ds[5], \"|\");  //  DPE list, column 1 = for ON/OFF event
    p_dsDpeValuesOff  = strsplit(ds[6], \"|\");  //  DPE list, column 2 = for ON/OFF event
    p_dsDpeList       = strsplit(ds[17], \"|\"); //  DPE list, column 3
    p_dsDpeValues     = strsplit(ds[23], \"|\"); //  DPE list, column 4 = for single Event
    
    sc_dynTrim(p_dsDpeList);
    sc_dynTrim(p_dsDpeValuesOn);
    sc_dynTrim(p_dsDpeValuesOff);
    sc_dynTrim(p_dsDpeValues);

    p_sRecipeTypeON    = ds[8];     //  Recipe type ON for ON/OFF event
    p_sRecipeNameON    = ds[9];     //  Recipe name ON for ON/OFF event
    p_sRecipeTypeOFF   = ds[10];    //  Recipe type OFF for ON/OFF event
    p_sRecipeNameOFF   = ds[11];    //  Recipe name OFF for ON/OFF event
    p_bDpeListActive   = ds[12];    //  DPE list active
    p_bRecipeActive    = ds[13];    //  Recipe active
    p_bPopUpActive     = ds[14];    //  PopUp active
    p_bRemAlarmActive  = ds[15];    //  Reminder active
    p_bScriptActive    = ds[16];    //  Script active
    p_sPopUpMode       = ds[18];    //  PopUp parametrisation mode ON
    p_sPopUpDate       = ds[19];    //  PopUp date = only used in fast para mode
    
    p_dsUsers         = strsplit(ds[21], \"|\");  // Selected users
    p_dsUis            = strsplit(ds[22], \"|\");  // Selected UI´s
    sc_dynTrim(p_dsUsers);
    sc_dynTrim(p_dsUis);
    p_sGroup           = ds[20];                 // Selected PopUp group 
    
    p_sRecipeType      = ds[24];  // Recipe type for single event
    p_sRecipeName      = ds[25];  // Recipe name for single event
    p_sScriptPathON    = ds[26];  // Script path
    p_sScriptPathOFF   = ds[27];  // Script path
  }

  //Set checkboxes  
  chkDpeList.state(0) = p_bDpeListActive;
  chkRecipe.state(0)   = p_bRecipeActive;
  chkPopUp.state(0)   = p_bPopUpActive;
  chkAlarm.state(0)   = p_bRemAlarmActive;
  chkScript.state(0)   = p_bScriptActive;
  
  p_bWorkOnOff = TRUE;
}

" 0
 E E E
22 86
"cbDPE1"
""
1 160 110 E E E 1 E 1 E N "STD_inputfield_text" E N "STD_inputfield_back" E E
 E E
28 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  158 108 462 134
0

"main()
{
  this.enabled = getUserPermission(3);
  
  dpSet(myUiDpName()+\".DpeInfo.CurrentDpe.Name:_original.._value\", \"\");
  dpGet(myUiDpName()+\".DpeInfo.RecentDpe.LastDpes:_online.._value\",g_dsdpeRecent);
   
  this.items = g_dsdpeRecent; // Contains the list with recent used DPE`s
  dpConnect(\"workCurrentDpeCB1\",myUiDpName()+\".DpeInfo.CurrentDpe.Name:_online.._value\");
}

//********************************************
workCurrentDpeCB1(string dp1, string dpe_string)
{
  bool help;

  // React only to changes on dpe1
  if (p_iChange != 1)
    return;

  help = sc_currentDPE(this.name, dpe_string);
  if (help == TRUE)
  {
    sc_dpeAndValues(dpe_string, \"cbDPE1\", \"txtSingleValue\", true);      //Single value
    sc_dpeAndValues(dpe_string, \"cbDPE1\",\"txtDPEonValue\", true, \"txtDPEoffValue\");      //ON/OFF value
  }
  else
   ;
  
  sc_dpeDuplicate(\"cbDPE1\");
  sc_dpe1EmptyEnDis();
}

" 0

"main()
{
  string     dpe_string_formatted, dpe,dpe_string = this.text;
  dyn_string allSys;
  dyn_uint   allSysIds;

  // Change of cbDpe1
  p_iChange = 1;
  
  // If the string contains \"*;?\"
  if(strtok(dpe_string,\"*;?\") > -1)
  {
    dyn_float  resultFloat; 
    dyn_string resultString;
    string     dpe, dp1;
    
    // If the postition ...
    if(strpos(dpe_string,\"*.*\")>=0 && !getUserPermission(4))
    {
      int istrPos;
      string dpWildcarts;

      istrPos=strpos(dpe_string,\":\");
      dpWildcarts=dpe_string;
      
      if(istrPos>=0 && istrPos < strpos(dpWildcarts,\"*.*\"))
        dpWildcarts=substr(dpWildcarts,istrPos+1);
      istrPos=strpos(dpWildcarts,\":\");
      
      if(istrPos>=0 && istrPos > strpos(dpWildcarts,\"*.*\"))
        dpWildcarts=substr(dpWildcarts,0,istrPos);
      strreplace(dpWildcarts,\"*\",\"\");
      strreplace(dpWildcarts,\".\",\"\");
      
      if(strlen(dpWildcarts)==0)
      {
        string sMessageText=getCatStr(\"misc\",\"userNotAllowed\");    
        ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
        return;
      }
    }   
    ChildPanelOnCentralModalReturn(\"vision/dpe_info_selection.pnl\",\"DPE\",
                                   makeDynString(\"$s_wildcards:\"+dpe_string), resultFloat, resultString);

    dpe = resultString[1];
    //if (cbConditionType.selectedPos == 1)
      sc_dpeAndValues(dpe, \"cbDPE1\", \"txtSingleValue\", true);  //Single value
    //else
      sc_dpeAndValues(dpe, \"cbDPE1\", \"txtDPEonValue\", true, \"txtDPEoffValue\");  //ON/OFF value

    dpe_string = dpe;
  }
  
  // If the string is not empty 
  if(dpe_string!=\"\")
  {
    if(dpExists(dpe_string+\":_original.._value\") && dpElementType(dpe_string)!=1)
    {
      dynClear(allSys);
      dynClear(allSysIds);
      getSystemNames(allSys,allSysIds);
      if(dynlen(allSys) == 1)
        p_sDpe1 = allSys[1]+\":\"+dpe_string;
      else
        p_sDpe1 = dpe_string;

      dpSet(myUiDpName()+\".DpeInfo.CurrentDpe.Name:_original.._value\",dpe_string);
    }
    else
    {
      // DPE does not exist
      string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\") + \"!\"; 
      dpe_string_formatted  =  last_dpe.text();
      sc_checkSys(dpe_string_formatted, dpe_string_formatted);  
      this.text=dpe_string_formatted;
      ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
      return; 
    } 
  }
  else
  {
    // DPE does not exist
    string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\") + \"!\";  
    dpe_string_formatted  =  last_dpe.text();
    sc_checkSys(dpe_string_formatted, dpe_string_formatted);  
    this.text=dpe_string_formatted;
    ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
    return;    
  } 
}
" 0

E
 1 0
13 87
"last_dpe"
""
1 141 132 E E E 1 E 0 E N "_3DText" E N {255,0,0} E E
 E E
30 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  139 130 153 144

T 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E E E
22 88
"cbDpe2"
""
1 160 230 E E E 1 E 0 E N "STD_inputfield_text" E N "STD_inputfield_back" E E
 E E
31 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  158 228 462 254
0

"main()
{
  this.enabled = getUserPermission(3);
  
  dpSet(myUiDpName()+\".DpeInfo.CurrentDpe.Name:_original.._value\", \"\");
  dpGet(myUiDpName()+\".DpeInfo.RecentDpe.LastDpes:_online.._value\", g_dsdpeRecent);
   
  this.items = g_dsdpeRecent; //Contains the list with recent used DPE`s
  dpConnect(\"workCurrentDpeCB2\",myUiDpName()+\".DpeInfo.CurrentDpe.Name:_online.._value\");
}

//********************************************
workCurrentDpeCB2(string dp1, string dpe_string)
{
  // React only to changes on dpe2
  if(p_iChange != 2)
    return;
  
  sc_currentDPE(this.name, dpe_string);
  sc_dpeDuplicate(\"cbDpe2\");
}" 0

"main()
{
  string     dpe_string_formatted, dpe,dpe_string = this.text;
  dyn_string allSys;
  dyn_uint   allSysIds;
  
  // Change of cbDpe2
  p_iChange = 2;

  // If the string contains \"*;?\"
  if(strtok(dpe_string,\"*;?\") > -1)
  {
    dyn_float  resultFloat; 
    dyn_string resultString;
    string     dpe, dp1;
    
    // If the postition ...
    if(strpos(dpe_string,\"*.*\")>=0 && !getUserPermission(4))
    {
      int istrPos;
      string dpWildcarts;
      
      istrPos=strpos(dpe_string,\":\");
      dpWildcarts=dpe_string;
      
      if(istrPos>=0 && istrPos < strpos(dpWildcarts,\"*.*\"))
        dpWildcarts=substr(dpWildcarts,istrPos+1);
      istrPos=strpos(dpWildcarts,\":\");
      
      if(istrPos>=0 && istrPos > strpos(dpWildcarts,\"*.*\"))
        dpWildcarts=substr(dpWildcarts,0,istrPos);
      strreplace(dpWildcarts,\"*\",\"\");
      strreplace(dpWildcarts,\".\",\"\");
      
      if(strlen(dpWildcarts)==0)
      {
        string sMessageText=getCatStr(\"misc\",\"userNotAllowed\");    
        ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
        return;
      }
    }   
    ChildPanelOnCentralModalReturn(\"vision/dpe_info_selection.pnl\",\"DPE\",
                                   makeDynString(\"$s_wildcards:\"+dpe_string), resultFloat, resultString);
    
    dpe = resultString[1];
    sc_dpeAndValues(dpe,\"txtDPEsetList\",\"txtDPEonValue\", false, \"txtDPEoffValue\");
    this.text = dpe;
    dpe_string = dpe;
  }
  
  // If the string is not empty 
  if(dpe_string != \"\")
  {
    if(dpExists(dpe_string+\":_original.._value\") && dpElementType(dpe_string)!=1)
    {
      dynClear(allSys);
      dynClear(allSysIds);
      getSystemNames(allSys,allSysIds);
      if(dynlen(allSys) == 1)
        p_sDpe2 = allSys[1]+\":\"+dpe_string;
      else
        p_sDpe2 = dpe_string;

      dpSet(myUiDpName()+\".DpeInfo.CurrentDpe.Name:_original.._value\",dpe_string);
    }
    else
    {
      //DPE does not exist
      string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\") + \"!\";    
      dpe_string_formatted  =  last_dpe.text();
      sc_checkSys(dpe_string_formatted, dpe_string_formatted);  
      this.text=dpe_string_formatted;
      ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
      return; 
    } 
  }
  else
  {
    //DPE does not exist
    string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\") + \"!\";    
    dpe_string_formatted  =  last_dpe.text();
    sc_checkSys(dpe_string_formatted, dpe_string_formatted);  
    this.text=dpe_string_formatted;
    ChildPanelOnCentralModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText));
    return;    
  } 
}" 0

E
 1 0
14 100
"txtDPEonValue"
""
1 168.9583333333333 219 E E E 1 E 0 E N "_WindowText" E N "Weiss" E E
 E E
34 0 0 0 0 0
E "main()
{
  if (cbDPE1.text == \"\")
  {
    this.text() = \"\";
    return;
  }
  
  sc_bool();
  sc_2x(\"txtDPEonValue\",\"txtDPEoffValue\");
}" 0
 E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  168 218 297 244
3 "0s" 0 0 0 0 0 -1  E E E
14 101
"txtDPEoffValue"
""
1 324 219 E E E 1 E 0 E N "_WindowText" E N "Weiss" E E
 E E
35 0 0 0 0 0
E "main()
{
  if (cbDPE1.text == \"\")
  {
    this.text() = \"\";
    return;
  }
  
  sc_bool();
  sc_2x(\"txtDPEoffValue\",\"txtDPEonValue\");
}" 0
 E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  322 218 452 244
3 "0s" 0 0 0 0 0 -1  E E E
22 103
"cbOFF"
""
1 324 190 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
36 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  322 188 452 214
5
4
LANG:10001 1 =
LANG:10004 1 =
LANG:10000 1 =
LANG:10027 1 =

0
4
LANG:10001 1 >
LANG:10004 1 >
LANG:10000 1 >
LANG:10027 1 >

0
4
LANG:10001 1 <
LANG:10004 1 <
LANG:10000 1 <
LANG:10027 1 <

0
4
LANG:10001 2 >=
LANG:10004 2 >=
LANG:10000 2 >=
LANG:10027 2 >=

0
4
LANG:10001 2 <=
LANG:10004 2 <=
LANG:10000 2 <=
LANG:10027 2 <=

0

E
"main()
{
  if (txtDataType.text()    == \"BOOL\" 
      || txtDataType.text() == \"STRING\" 
      || txtDataType.text() == \"BIT32\"
      || txtDataType.text() == \"BLOB\"
      || txtDataType.text() == \"CHAR\"
     )
  {
    this.selectedPos(1);
  }
}" 0

E
 0 0
22 106
"cbON"
""
1 170 190 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
37 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  168 188 297 214
5
4
LANG:10001 1 =
LANG:10004 1 =
LANG:10000 1 =
LANG:10027 1 =

0
4
LANG:10001 1 >
LANG:10004 1 >
LANG:10000 1 >
LANG:10027 1 >

0
4
LANG:10001 1 <
LANG:10004 1 <
LANG:10000 1 <
LANG:10027 1 <

0
4
LANG:10001 2 >=
LANG:10004 2 >=
LANG:10000 2 >=
LANG:10027 2 >=

0
4
LANG:10001 2 <=
LANG:10004 2 <=
LANG:10000 2 <=
LANG:10027 2 <=

0

E
"main()
{
  if (txtDataType.text()    == \"BOOL\" 
      || txtDataType.text() == \"STRING\" 
      || txtDataType.text() == \"BIT32\"
      || txtDataType.text() == \"BLOB\"
      || txtDataType.text() == \"CHAR\"
     )
  {
    this.selectedPos(1);
  }
}" 0

E
 0 0
22 111
"cbConditionType"
""
1 160 140 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
39 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  158 138 307 164
2
4
LANG:10001 12 Single value
LANG:10004 12 单独数值
LANG:10000 10 Einzelwert
LANG:10027 25 Одно значение

0
4
LANG:10001 11 Value range
LANG:10004 12 数值范围
LANG:10000 12 Wertebereich
LANG:10027 33 Диапазон значений

0

E
"main()
{
  bool x;
  dyn_string ds;
  dyn_float  df;
  
  // If there have been parametrized actions before setting on TRUE
  x = p_bDpeListActive || p_bRecipeActive || p_bScriptActive;
    
  if (x == TRUE)
  {
    string sMessageText = getCatStr(\"scheduler\",\"sc_actionsLost\");
    
    ChildPanelOnCentralModalReturn(\"vision/MessageWarning2\",getCatStr(\"general\",\"warning\"),
                                                       makeDynString(sMessageText,
                                                       \"$2:\"+getCatStr(\"general\",\"OK\"),
                                                       \"$3:\"+getCatStr(\"general\",\"cancel\")),
                                                       df,ds);
     
    if (df[1] == 1)
    {
      p_bDpeListActive      = FALSE;
      p_bRecipeActive       = FALSE;
      p_bScriptActive       = FALSE;
      chkDpeList.state(0)   = p_bDpeListActive;
      chkRecipe.state(0)   = p_bRecipeActive;
      chkScript.state(0)   = p_bScriptActive;
    }
    else 
      return;
  }
  
  sc_setValType(this.selectedPos);
}
" 0

E
 0 0
14 116
"txtSingleValue"
""
1 157.9310344827586 199 E E E 1 E 0 E N "_WindowText" E N "Weiss" E E
 E E
40 0 0 0 0 0
E "main()
{
  bool   ok;
  string x;

  sc_bool();
  
  ok = sc_CheckValue(this.text(), p_iDpeType);

  if (!ok)
  {
    if (cbDPE1.text() != \"\")
    {
      dpGet(cbDPE1.text(), x);
      this.text(x);
    }
    else
      return;
  }       
  else
    sc_dpeAndValues(cbDPE1.text, \"cbDPE1\", \"txtSingleValue\");
}
" 0
 E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  158 198 462 224
3 "0s" 0 0 0 0 0 -1  E E "main()
{
  bool   ok;
  string x;

  sc_bool();
  
  ok = sc_CheckValue(this.text(), p_iDpeType);

  if (!ok)
  {
    if (cbDPE1.text() != \"\")
    {
      dpGet(cbDPE1.text(), x);
      this.text(x);
    }
    else
      return;
  }       
  else
    sc_dpeAndValues(cbDPE1.text, \"cbDPE1\", \"txtSingleValue\");
}
" 0

22 117
"cbSingleRelOp"
""
1 -22.59259259259261 200 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
41 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  158 168 307 194
5
4
LANG:10001 1 =
LANG:10004 1 =
LANG:10000 1 =
LANG:10027 1 =

0
4
LANG:10001 1 >
LANG:10004 1 >
LANG:10000 1 >
LANG:10027 1 >

0
4
LANG:10001 1 <
LANG:10004 1 <
LANG:10000 1 <
LANG:10027 1 <

0
4
LANG:10001 2 >=
LANG:10004 2 >=
LANG:10000 2 >=
LANG:10027 2 >=

0
4
LANG:10001 2 <=
LANG:10004 2 <=
LANG:10000 2 <=
LANG:10027 2 <=

0

E
"main()
{
  if (txtDataType.text()    == \"BOOL\" 
      || txtDataType.text() == \"STRING\" 
      || txtDataType.text() == \"BIT32\"
      || txtDataType.text() == \"BLOB\"
      || txtDataType.text() == \"CHAR\"
     )
   {
     this.selectedPos(1);
   }
}" 0

E
 0 0
20 120
"chkRecipe"
""
1 306 305 E E E 0 E 1 E N "_3DText" E N "_3DFace" E E
 E E
42 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  304 303 318 322
1
T 
3
LANG:10000 1  
LANG:10001 1  
LANG:10027 1  

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
EE20 121
"chkDpeList"
""
1 250 305 E E E 0 E 1 E N "_3DText" E N "_3DFace" E E
 E E
43 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  248 303 262 322
1
T 
3
LANG:10000 1  
LANG:10001 1  
LANG:10027 1  

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
EE20 122
"chkScript"
""
1 465 305 E E E 0 E 1 E N "_3DText" E N "_3DFace" E E
 E E
44 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  463 303 477 322
1
T 
3
LANG:10000 1  
LANG:10001 1  
LANG:10027 1  

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
EE20 123
"chkAlarm"
""
1 412 305 E E E 0 E 1 E N "_3DText" E N "_3DFace" E E
 E E
45 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  410 303 424 322
1
T 
3
LANG:10000 1  
LANG:10001 1  
LANG:10027 1  

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
EE20 124
"chkPopUp"
""
1 359 305 E E E 0 E 1 E N "_3DText" E N "_3DFace" E E
 E E
46 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  357 303 371 322
1
T 
3
LANG:10000 1  
LANG:10001 1  
LANG:10027 1  

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
EE25 130
"tabReactionProgs"
""
1 106 234.941176470588 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E "main()
{
  dyn_int      lines;
  dyn_anytype  line;
  dyn_float    df;
  dyn_string   ds, ods;
  
  lines = tabReactionProgs.getSelectedLines();
  line  = tabReactionProgs.getLineN(lines[1]);
  
  sc_checkSys(line[2],line[2]);
  sc_checkSys(p_sName,p_sName);

  if (p_sName == line[2])
    return;
  
  //Get current objec data
  sc_getObjectContentReact(ods);

  if (p_dsPDC != ods)
  { 
    // Question: Save NEW or changes on EXISTING before?
    ChildPanelOnCentralModalReturn(\"vision/MessageInfo3\", \"Scheduler\", 
                          makeDynString(\"$1:\" + getCatStr(\"scheduler\", \"m5\"), 
                                        \"$2:\" + getCatStr(\"general\", \"yes\"),
                                        \"$3:\" + getCatStr(\"general\", \"no\"),
                                        \"$4:\" + getCatStr(\"general\", \"cancel\")),
                                        df, ds);
    if (dynlen(df) < 1)
      return;
      // CANCEL -> return
      // YES > Save > Load selected
    if (df[1] == CANCEL)
      return;
    
    if (cbDPE1.text() == \"\")
    {
      sc_noDpe1(ds, df);
      return;
    }
  
    if (df[1] == YES)
      sc_saveReactionPlan();
  }
    
  // Common visibility
  buttonV.visible(TRUE);    

  // Open chosen program
  dynClear(p_dsSysNames);
  dynClear(p_duiSysIds);
  getSystemNames(p_dsSysNames,p_duiSysIds);
  lines = tabReactionProgs.getSelectedLines();
  line = tabReactionProgs.getLineN(lines[1]);
  p_sName = line[2];
  sc_eventInitReaction(p_sName);
  tabReactionProgs.deleteAllLines();
  sc_loadTable(\"R\", \"tabReactionProgs\");
  
  if (p_bCancel == TRUE)
  {
    on.enabled(FALSE);
    off.enabled(FALSE);
    single.enabled(FALSE);
  }
  
  dynClear(p_dsPDC);
  sc_getObjectContentReact(p_dsPDC);
  
  // Common visibility
  buttonV.visible(FALSE);  
}
" 0

52 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  18 366 540 544
"main()
{
  this.tableMode(TABLE_SELECT_BROWSE);
  this.selectByClick(TABLE_SELECT_LINE);
}
" 0
E 1 0 1 5 1 "name" 17 1 0 "s" 4
LANG:10001 4 Name
LANG:10004 4 Name
LANG:10000 4 Name
LANG:10027 6 Имя
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

200 "dpe" 17 0 0 "s" 4
LANG:10001 3 dpe
LANG:10004 3 dpe
LANG:10000 3 dpe
LANG:10027 3 dpe
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

198 "desc" 16 1 0 "s" 4
LANG:10001 11 Description
LANG:10004 6 描述
LANG:10000 12 Beschreibung
LANG:10027 16 Описание
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

194 "state" 8 1 0 "s" 4
LANG:10001 15  Current state 
LANG:10004 12 当前状态
LANG:10000 16 Aktueller Status
LANG:10027 33 Текущее состояние
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

105 "specdays" 9 0 0 "s" 4
LANG:10001 12 Special days
LANG:10004 12 特殊日期
LANG:10000 10 Sondertage
LANG:10027 16 Выходные
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

115 
17 17 "" 1 4
LANG:10001 2 #1
LANG:10004 2 #1
LANG:10000 2 #1
LANG:10027 2 #1
8 30
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 0 2 0 1 7
1 0
13 132
"reload"
""
1 193 573 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
53 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  193 573 281 601

T 
4
LANG:10001 6 Reload
LANG:10004 9 相对的
LANG:10000 9 Neu laden
LANG:10027 16 Обновить
"main()
{
  dynClear(p_dsSysNames);
  dynClear(p_duiSysIds);
  getSystemNames(p_dsSysNames,p_duiSysIds);

  sc_eventInitReaction(p_sName);
  tabReactionProgs.deleteAllLines();
  sc_loadTable(\"R\", \"tabReactionProgs\");
  
  
  dynClear(p_dsPDC);
  sc_getObjectContentReact(p_dsPDC);
}" 0
 E E E
13 136
"on"
""
1 250 327 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
55 0 0 0 0 0
E E E
0
4
LANG:10001 18 Execute ON actions
LANG:10004 14 执行ON动作
LANG:10000 23 EIN Aktionen ausführen
LANG:10027 42 Выполнить действия ВКЛ

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  248 325 301 352

T 
4
LANG:10001 2 ON
LANG:10004 2 ON
LANG:10000 3 EIN
LANG:10027 6 ВКЛ
"main()
{
  int iErr;

  iErr = dpSet(p_sName + \".command:_original.._value\", 1);

  if(iErr != 0)
    sc_errorHandling(iErr);
}

" 0
 E E E
13 137
"off"
""
1 319 330 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
56 0 0 0 0 0
E E E
0
4
LANG:10001 19 Execute OFF actions
LANG:10004 16 执行OFF 动作
LANG:10000 23 AUS Aktionen ausführen
LANG:10027 44 Выполнить действия ВЫКЛ

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  308 325 361 353

T 
4
LANG:10001 3 OFF
LANG:10004 3 OFF
LANG:10000 3 AUS
LANG:10027 8 ВЫКЛ
"main()
{
  int iErr;

  iErr = dpSet(p_sName + \".command:_original.._value\", 2);

  if(iErr != 0)
    sc_errorHandling(iErr);
}
" 0
 E E E
13 138
"single"
""
1 250 327 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
57 0 0 0 0 0
E E E
0
4
LANG:10001 15 Execute actions
LANG:10004 12 执行动作
LANG:10000 19 Aktionen ausführen
LANG:10027 35 Выполнить действия

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  248 325 301 353

T 
4
LANG:10001 2 ON
LANG:10004 2 ON
LANG:10000 3 EIN
LANG:10027 6 ВКЛ
"main()
{
  int iErr = 0;

  iErr =  dpSet(p_sName + \".command:_original.._value\", 3);

  if (iErr != 0)
    sc_errorHandling(iErr);
}

" 0
 E E E
13 141
"Button5"
""
1 10 560 E E E 1 E 0 E N {204,0,0} E N {255,204,0} E E
 E E
59 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,-1,10,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,10,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,10,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,10,5,40,0,0,0,0,0
0  8 558 42 592

T 
4
LANG:10001 3 OBJ
LANG:10004 3 OBJ
LANG:10000 3 OBJ
LANG:10027 3 OBJ
"main()
{
  dyn_string objects;
  
  sc_getAllGraphObj(\"C:/pvss/PVSS_DemoApplication/panels/vision/scheduler/sc_reactionProg.pnl\", objects);
  //DebugTN(objects);
}" 0
 E E E
13 140
"buttonV"
""
1 1 0 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
59 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0  -1 -2 563 622

T 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E E "main()
{

}" 0

1 142 0 "" 0
0
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
3 0 "PANEL_REF0" -1
"" ""
"objects_parts/STD_OBJECTS/ButtonBarBackground.pnl" 40 550 T 60 1.152304609218437 0 1 -56.09218436873753 15
0
0
