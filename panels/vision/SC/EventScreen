V 14
4
LANG:10001 11 Event panel
LANG:10004 12 事件面板
LANG:10000 14 Ereignisschirm
LANG:10027 27 Панель событий
PANEL,-1 -1 1009 681 N "_3DFace" 0
"main()
{

}" 0
 E E E E 1 -1 -1 0  20 20
""0  1
E E 4
"CBRef" "0"
"EClose" E
"dpi" "96"
"pdpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
10 9
"Polyline1"
""
1 162 642 E E E 1 E 1 E N "_Window" E N "_Transparent" E E
 E E
23 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 3 162 642
162 671
9 671
 0
10 10
"Polyline2"
""
1 10 670 E E E 1 E 1 E N "_ButtonShadow" E N "_Transparent" E E
 E E
24 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 3 10 670
10 643
160 643
 0
6 11
"busySize"
""
1 14 646 E E E 1 E 1 E N "_3DFace" E N "_Transparent" E E
 E E
25 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 14 646 156 663
6 12
"busyFlag"
""
1 16 647 E E E 1 E 0 E N {0,0,153} E N {0,0,153} E E
 E E
26 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  1 E 16 647 52 666
6 16
"Border1"
""
1 996 593 E E E 1 E 1 E N "_ButtonShadow" E N "_Transparent" E E
 E E
27 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 10 528 996 593
6 17
"Border2"
""
1 997 594 E E E 1 E 1 E N "_Window" E N "_Transparent" E E
 E E
28 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 11 529 997 594
2 18
"Text1"
""
1 17 519 E E E 1 E 1 E N {0,0,0} E N "_3DFace" E E
 E E
29 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  1 E 19 519 99 533
0 2 2 "0s" 0 0 0 192 0 0  19 519 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 8 Settings
LANG:10004 6 设置
LANG:10000 13 Einstellungen
LANG:10027 18 Настройки
2 21
"Text2"
""
1 16 538 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
30 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 18 538 101 552
0 2 2 "0s" 0 0 0 192 0 0  18 538 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 14 Configuration:
LANG:10004 6 配置
LANG:10000 14 Konfiguration:
LANG:10027 14 Конфиг.:
2 22
"Text3"
""
1 18 568 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
31 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 18 568 103 582
0 2 2 "0s" 0 0 0 192 0 0  18 568 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 12 Description:
LANG:10004 9 描述：
LANG:10000 13 Beschreibung:
LANG:10027 17 Описание:
2 23
"Text4"
""
1 552 538 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
32 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 554 538 611 552
0 2 2 "0s" 0 0 0 192 0 0  554 538 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 14 Time interval:
LANG:10004 15 时间周期：
LANG:10000 9 Zeitraum:
LANG:10027 17 Интервал:
2 24
"Text5"
""
1 772 538 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
33 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 772 538 779 552
0 2 2 "0s" 0 0 0 192 0 0  772 538 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 1 -
LANG:10004 1 -
LANG:10000 1 -
LANG:10027 1 -
2 26
"Text6"
""
1 245 568 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
34 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 245 568 269 582
0 2 2 "0s" 0 0 0 192 0 0  245 568 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 3 DP:
LANG:10004 3 DP:
LANG:10000 3 DP:
LANG:10027 3 DP:
2 27
"Text7"
""
1 243 538 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
35 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 245 538 315 552
0 2 2 "0s" 0 0 0 192 0 0  245 538 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 11 Time range:
LANG:10004 12 时间范围
LANG:10000 12 Zeitbereich:
LANG:10027 19 Врем.диап.:
2 28
"Text8"
""
1 920 538 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
36 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 920 538 951 552
0 2 2 "0s" 0 0 0 192 0 0  920 538 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 4 Max:
LANG:10004 4 Max:
LANG:10000 4 Max:
LANG:10027 9 Макс:
2 36
"Text9"
""
1 547 596 E E E 1 E 0 E N {255,0,0} E N "_Transparent" E E
 E E
37 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 547 596 648 610
1 2 2 "0s" 0 0 0 192 0 0  547 596 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 17 unten: 2 Objekte!
LANG:10004 17 unten: 2 Objekte!
LANG:10000 17 unten: 2 Objekte!
LANG:10027 29 внизу: 2 Объекта!
13 0
"fortsetzen"
""
1 568 603 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
8 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  568 603 668 633

T 
4
LANG:10001 2 Go
LANG:10004 2 Go
LANG:10000 10 Fortsetzen
LANG:10027 12 Вперед
"main()
{
  string  stext;
  bool    stopped;
  string  dpProp;
  anytype aType;
  bool    bCancel;
  
  getValue(\"table\", \"stop\", stopped);
  stopped = !stopped;     // change mode
  stext = getCatStr(\"sc\", \"running\");


  if ( !stopped )
  {
    setMultiValue( \"props\",       \"enabled\", true, // in stopped mode we can not change properties
                   \"filter\",      \"enabled\", true,
                   \"table\",       \"stop\",    stopped,
                   \"fortsetzen\",  \"visible\", false,
                   \"anhalten\",    \"visible\", true,
                   \"state\",       \"text\",    stext,
                   \"configNames\", \"enabled\", true );

    // If stopped with disconnect get and set one element to start connection
    dpProp = es_getPropDP( true );
    dpGet( dpProp + \"Cancel:_online.._value\", bCancel,
           dpProp + \"Settings.System.Selections:_online.._value\", aType );

    if( bCancel )
      dpSet( dpProp + \"Cancel:_original.._value\", false,
             dpProp + \"Settings.System.Selections:_original.._value\", aType );
  }
}
" 0
 E E E
26 1
"anhalten"
""
1 568 603 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
7 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  568 603 668 633
 0 4
LANG:10001 11        Stop
LANG:10004 13        停止
LANG:10000 11    Anhalten
LANG:10027 20 Остановить
"" 0 0 0 0 0
 2 1 4
LANG:10001 14 With updateing
LANG:10004 6 升级
LANG:10000 18 Mit Aktualisierung
LANG:10027 25 С обновлением
"0" 0 0 0 0 0
 1 4
LANG:10001 17 Without updateing
LANG:10004 12 没有升级
LANG:10000 19 Ohne Aktualisierung
LANG:10027 27 Без обновления
"1" 0 0 0 0 0
 E E2 "0" "main()
{
  string stext;
  bool stopped;
  
  getValue(\"table\", \"stop\", stopped);
  stopped = !stopped;     // change mode
  stext = getCatStr(\"sc\", \"stopped\");
  
  if ( stopped )
  {
    setMultiValue( \"props\",       \"enabled\", false, // only in running mode we can change properties
                   \"filter\",      \"enabled\", false,
                   \"table\",       \"stop\",    stopped,
                   \"fortsetzen\",  \"visible\", true,
                   \"anhalten\",    \"visible\", false,
                   \"state\",       \"text\",    stext,
                   \"configNames\", \"enabled\", false );
  }
}
" 0

"1" "main()
{
  string stext;
  bool   stopped;
  string dpProp;

  
  getValue(\"table\", \"stop\", stopped);
  stopped = !stopped;     // change mode
  stext = getCatStr(\"sc\", \"stopped\");
  
  if ( stopped )
  {
    setMultiValue( \"props\",       \"enabled\", false, // only in running mode we can change properties
                   \"filter\",      \"enabled\", false,
                   \"table\",       \"stop\",    stopped,
                   \"fortsetzen\",  \"visible\", true,
                   \"anhalten\",    \"visible\", false,
                   \"state\",       \"text\",    stext,
                   \"configNames\", \"enabled\", false );

    dpProp = es_getPropDP( true );
    dpSet( dpProp + \"Cancel:_original.._value\", true );
  }
}
" 0


13 19
"cancel"
""
1 669 603 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
9 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  669 603 769 633

T 
4
LANG:10001 6 Cancel
LANG:10004 6 取消
LANG:10000 9 Abbrechen
LANG:10027 16 Отменить
"// set the cancelled flag to stop the query-loop on closed protocoll
main()
{
  string dpProp = es_getPropDP();
  
  dpSet(dpProp + \"Cancel:_original.._value\", true);
}" 0
 E E E
13 2
"schlieen"
""
1 797 603 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
10 0 0 0 27 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  797 603 897 633

T 
4
LANG:10001 5 Close
LANG:10004 6 关闭
LANG:10000 10 Schließen
LANG:10027 14 Закрыть
"main()
{
  PanelOff();
}" 0
 E E E
13 7
"hilfe"
""
1 898 603 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
11 0 0 0 112 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  898 603 998 633

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main()
{
  std_help(\"Ereignisschirm\");
}
" 0
 E E E
25 3
"table"
""
1 8 8 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
44 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  8 8 999 509
"string   g_connectId;        // holds id of current query
dyn_int  g_counterConnectId; // holds numbers of Id's
time     g_timeLastUpdate;   // holds time of the last update
string   g_dpCommentFilter;
bool     g_showInternals;    // value from _Config.ShowInternals
unsigned g_maxClosedLines;   // max num of lines to be queried by closed protocoll

int      g_busyThread;       // id of thread, which shows busyness

int      g_maxLines;         // num of max lines in open protocoll

// characters for status-bits in current language
char g_Cdefault, g_Cout_prange, g_Cinvalid, g_Cfrom_GI, g_Cuserbit1, g_Cuserbit2;

// TI 14075 (discarding pending values)
int        g_discardThread;
time       g_discardStart;
bool       g_discarded;
const time MINCB_TIME = 2;
const time MAXCB_TIME = 5;

//-------------------------------------------------------------------------

main()
{
  string dpProp = es_getPropDP();  // every manager has own DP
  unsigned action;
  dyn_string configNames;

  dyn_int diTypeSelections;
  int i;

  dyn_string dsSystemNames; 
  dyn_uint   duSystemIds; 
  int        iCheckSystemNames; 


  dpProp = substr(dpProp, 0, strlen(dpProp) - 1);  // remove last char \".\"

  g_busyThread = -1;
  g_connectId = \"\"; 
  dynClear( g_counterConnectId ); 
  g_timeLastUpdate = 0;
  
  std_startBusy();
  es_init();
  
  // get current filter settings 

  // if Properties DP does not exist, create it
  if ( ! dpExists(dpProp) )
  {
    bool vis;
    dyn_string sortList;

    if ( dpCreate(dpProp, \"_ESProperties\") == -1 )
    {
      std_stopBusy();
      std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE,
                E_ES_FUNCTION, \"main(): dpCreate(\"+dpProp+\",_ESProperties)\");
      return;
    }
    if ( dynlen(getLastError()) )
    { dyn_errClass err = getLastError();
      std_stopBusy();
      errorDialog(err);
      return;
    }
      
    // now set default-values
    sortList[1] = \"timeStr\";


    // Read names of all systems 
    iCheckSystemNames = getSystemNames( dsSystemNames, duSystemIds ); 
    if( iCheckSystemNames == -1 ) 
    { 
      std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE, 
                 E_AS_FUNCTION, \"es_getPropsFilterTypes(): dpGet( ... FilterSystems ...)\"); 
      return; 
    } 
    if ( dynlen(getLastError()) ) 
    { 
      dyn_errClass err = getLastError(); 
      errorDialog(err); 
      return; 
    } 


    // Default Values Filter Types
    for( i = 1; i <= dynlen( ES_TYPEFILTER ); i ++ ) 
      dynAppend( diTypeSelections, 0 ); 
    
    if ( dpSet(dpProp + \".Settings.Sorting.SortList:_original.._value\", sortList,
               dpProp + \".Settings.Timerange.Type:_original.._value\", 0,
               dpProp + \".Settings.Timerange.MaxLines:_original.._value\", 100,
               dpProp + \".Settings.Name:_original.._value\", \"\",              
               dpProp + \".Settings.User:_original.._value\", DEFAULT_USERID,
               dpProp + \".Settings.Type.Selections:_original.._value\", diTypeSelections,
               dpProp + \".Settings.System.Selections:_original.._value\", dsSystemNames
              ) == -1 )
    {
      std_stopBusy();
      std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE,
                E_ES_FUNCTION, \"main(): dpSet(... default values ...)\");
      return;
    }
  }

  // connect to cancel-bit
  if( dpConnect( \"es_cancel\", dpProp + \".Cancel:_original.._value\" ) == -1 )
  {
    std_stopBusy();
    std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE,
              E_ES_FUNCTION, \"main(): dpConnect(... Cancel ...)\");
    return;
  }


  // check if there is the correct number of typeselections 
  dpGet( dpProp + \".Settings.Type.Selections:_online.._value\", diTypeSelections ); 
  if( dynlen( diTypeSelections ) != dynlen( ES_TYPEFILTER ) ) 
  { 
    diTypeSelections = \"\"; 
    for( i = 1; i <= dynlen( ES_TYPEFILTER ); i ++ ) 
      dynAppend( diTypeSelections, 0 ); 
       
    dpSet( dpProp + \".Settings.Type.Selections:_original.._value\", diTypeSelections );
  } 

  // Check if there is any system selected 
  dpGet( dpProp + \".Settings.System.Selections:_online.._value\", dsSystemNames ); 
  if( dynlen( dsSystemNames ) <= 0 ) 
  { 
    // Read and write names of all systems 
    getSystemNames( dsSystemNames, duSystemIds ); 
    dpSet( dpProp + \".Settings.System.Selections:_original.._value\", dsSystemNames ); 
  } 

  // check if the user wants the Screen not to activate the query 
  // but instead show the properties dialog 
  dpGet(dpProp+\".Action:_online.._value\", action); 
 
  if ( dpConnect(\"propertiesCB\", action >= 2,
                  dpProp+\".Settings.Filter.DpComment:_online.._value\",
                  dpProp+\".Settings.Filter.DpList:_online.._value\",
                  dpProp+\".Settings.Filter.Userbits:_online.._value\",
                
                  dpProp+\".Settings.Sorting.SortList:_online.._value\",
                
                  dpProp+\".Settings.Timerange.Type:_online.._value\",
                  dpProp+\".Settings.Timerange.Begin:_online.._value\",
                  dpProp+\".Settings.Timerange.End:_online.._value\",
                  dpProp+\".Settings.Timerange.MaxLines:_online.._value\",
                  dpProp+\".Settings.Timerange.Selection:_online.._value\",
                  
                  dpProp+\".Settings.Name:_online.._value\",

                  dpProp+\".Settings.Type.Selections:_online.._value\",
                  dpProp+\".Settings.System.Selections:_online.._value\",
                  dpProp+\".Settings.System.Selections:_online.._stime\"
                 ) == -1 )
  {
    std_stopBusy();
    std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE,
              E_ES_FUNCTION, \"main(): dpConnect(... properties ...)\");
    return;
  }

  if ( action <= 1 )
  {
    as_openPropWindow(\"vision/SC/ES_properties\");
    std_stopBusy();
  }

  // see which configurations we have 
  configNames[1] = \"\"; 
  es_getConfigList(configNames); 
  setValue(\"configNames\", \"items\", configNames);
}

//-----------------------------------------------------------------------------
/*
Shows current Filter etc. Settings and issue SELECT statement
*/

propertiesCB(string dpaDpComment, string valDpComment,
             string dpaDpList, dyn_string valDpList,
             string dpaUserbits, bit32 valUserbits,

             string dpaSortList, dyn_string valSortList,
             
             string dpaType, unsigned valType,
             string dpaBegin, time valBegin,
             string dpaEnd, time valEnd,
             string dpaMaxLines, unsigned valMaxLines,
             string dpaSelection, unsigned valSelection,
             
             string dpaConfig, string currentConfig,

             string dpaTypeSelections, dyn_int valTypeSelections,
             string dpaSystemSelections, dyn_string valSystemSelections,
             string dpaSystemSelectionsTime, time valTimeUpdate
             )
{
  int ret;
  string attrList, from, where, tyString;
  int count;

  int    iNumberSystemSelections; 
  int    iCountSystems; 
  int    n; 
  string remote, gName;
  bool   bOnlyOwnSystem;
  int    iSystemId;

  int noOfDpes = 0;

  // Check redu-switch 
  if (valTimeUpdate == g_timeLastUpdate) // No update when redu-switch 
    return; 
  else 
    g_timeLastUpdate = valTimeUpdate; 


  std_startBusy();
  
  g_esDisplayLines = 0;
  g_maxLines = valMaxLines;
  g_dpCommentFilter = valDpComment;
  iNumberSystemSelections = dynlen( valSystemSelections );

  if ( g_connectId != \"\" ) 
  { // Diconnect all selected systems 
    for( n = 1; n <= dynlen( g_counterConnectId ); n ++ ) 
      dpQueryDisconnect(\"eventsCB\", g_connectId + \"_\" + g_counterConnectId[n]); 
     
    g_connectId = \"\"; 
    dynClear( g_counterConnectId ); 
  } 
    
  setMultiValue(\"\", \"deleteAllLines\",
                \"\", \"stop\", false,
                \"configNames\", \"text\", currentConfig,
                \"fieldValue\", \"text\", \"\",
                \"state\", \"text\", getCatStr(\"sc\", \"running\"));
  
  // only if no special configuration is selected 
  setValue(\"props\", \"enabled\", ( currentConfig == \"\" ));
  
  // allow \"set filter\" button in openMode or closedMode
  setMultiValue(\"\", \"tableMode\", TABLE_SELECT_BROWSE,
                \"\", \"selectByClick\", TABLE_SELECT_LINE,
                \"filter\", \"enabled\", true,
                \"trend\",  \"enabled\", true);
  
  // properties for filter
  tyString = valDpList;
  if (dynlen(valDpList)==1 && strpos(valDpList[1],\"group:::\")==0)
  {
    gName=valDpList[1]; strreplace(gName,\"group:::\",getCatStr(\"groups\",\"groupfilter\")+\" = \");
    setMultiValue(\"fi_dpComment\",  \"text\",  valDpComment,
                  \"fi_dpList\",     \"text\",  gName/*,
                  \"fi_userbit1\",\"state\",\"0\",getBit(valUserbits,24), 
                  \"fi_userbit2\",\"state\",\"0\",getBit(valUserbits,25), 
                  \"fi_userbit3\",\"state\",\"0\",getBit(valUserbits,26), 
                  \"fi_userbit4\",\"state\",\"0\",getBit(valUserbits,27), 
                  \"fi_userbit5\",\"state\",\"0\",getBit(valUserbits,28), 
                  \"fi_userbit6\",\"state\",\"0\",getBit(valUserbits,29), 
                  \"fi_userbit7\",\"state\",\"0\",getBit(valUserbits,30), 
                  \"fi_userbit8\",\"state\",\"0\",getBit(valUserbits,31) */
                  ); 
  }
  else
    setMultiValue(\"fi_dpComment\",  \"text\",  valDpComment,
                  \"fi_dpList\",     \"text\",  valDpList/*,
                  \"fi_userbit1\",\"state\",\"0\",getBit(valUserbits,24), 
                  \"fi_userbit2\",\"state\",\"0\",getBit(valUserbits,25), 
                  \"fi_userbit3\",\"state\",\"0\",getBit(valUserbits,26), 
                  \"fi_userbit4\",\"state\",\"0\",getBit(valUserbits,27), 
                  \"fi_userbit5\",\"state\",\"0\",getBit(valUserbits,28), 
                  \"fi_userbit6\",\"state\",\"0\",getBit(valUserbits,29), 
                  \"fi_userbit7\",\"state\",\"0\",getBit(valUserbits,30), 
                  \"fi_userbit8\",\"state\",\"0\",getBit(valUserbits,31) */
                  ); 
  
  {
    int i;

    // do not sort the timeStr column, but sort the time column
    for (i = 1; i <= dynlen(valSortList); i++)
      if ( valSortList[i] == \"timeStr\" ) valSortList[i] = \"time\";   

    setValue(\"\", \"sortDyn\", valSortList);
  }
  
  {
    time t;
    // properties for timerange

    // end-time must be greater than begin-time
    if ( valBegin > valEnd ) { t = valBegin; valBegin = valEnd; valEnd = t; }
    if ( valEnd > getCurrentTime() ) valEnd = getCurrentTime();

    switch ( valType )
    {
      case 0:
      {
        setMultiValue(\"ti_type\",      \"text\", getCatStr(\"sc\", \"open\"),
                      \"ti_begin\",     \"text\", \"\",
                      \"ti_end\",       \"text\", \"\",
                      \"ti_maxLines\",  \"text\", valMaxLines,
                      \"ti_selection\", \"text\", \"\",
                      \"anhalten\",     \"enabled\", true);
        break;
      }

      case 1:
      {
        string selection;
        sprintf(selection, \"select%d\", valSelection-1);
        setMultiValue(\"ti_type\",      \"text\", getCatStr(\"sc\", \"closed\"),
                      \"ti_begin\",     \"text\", formatTime(\"%c\", valBegin),
                      \"ti_end\",       \"text\", formatTime(\"%c\", valEnd),
                      \"ti_maxLines\",  \"text\", \"\",
                      \"ti_selection\", \"text\", getCatStr(\"sc\", selection),
                      \"anhalten\",     \"enabled\", false);
        break;
      }
      
      default:
        std_error(\"ES\", ERR_PARAM, PRIO_WARNING, E_ES_DP_VAL, \"propertiesCB():\"+dpaType);
    }
  } 
  
  // now connect/query for events
  
  attrList = \"'_offline.._stime',\"
             \"'_offline.._value',\"
             \"'_offline.._status',\"
             \"'_offline.._text'\";

  if ( valType == 0 )  // open list 
  {
    es_getFromWhere(from, where, valDpList, valUserbits, valDpComment, valTypeSelections, 0);  // closedmode = 0
    where = \" _LEAF \" + where;

    as_getDpesOfFilter(from, false, noOfDpes);
    if (noOfDpes == -1 || noOfDpes > g_esMaxDpeToDisplay)
    {
      dyn_float  df;
      dyn_string ds;
      string     sTemp;
      
      if (noOfDpes != -1)
      { 
        sTemp = getCatStr(\"sc\",\"toomuchdpe2\");
        strreplace(sTemp, \"§\", noOfDpes);
        strreplace(sTemp, \"°\", g_esMaxDpeToDisplay);
      }
      else
      {
        sTemp = getCatStr(\"sc\",\"toomuchintro\") + 
                getCatStr(\"sc\",\"toomuch\")+
                getCatStr(\"sc\",\"toomuchdpe\");
      }
      ChildPanelOnCentralModalReturn(\"vision/MessageWarning2\",
                 getCatStr(\"sc\",\"Attention\"),
                 makeDynString(sTemp,
                               getCatStr(\"general\",\"OK\"),
                               getCatStr(\"sc\",\"cancel\")),
                 df, ds );

      if (!df[1])
      {
        std_stopBusy();
        g_esDisplayDpes = 1; // do not display, return
        state.text = getCatStr(\"sc\",\"cancelledtoomuch\");
        setValue(\"\", \"deleteAllLines\");
        setValue(\"\", \"visible\",true);
        return;
      }
      else
      {
        strreplace(sTemp,\"\\n\",\" \");
        DebugTN(\"ManNum:\"+myUiNumber(),\"User: \"+getUserName(),sTemp,getCatStr(\"para\",\"yes\"));
        g_esDisplayDpes  = 2; // do display
      }
    }
    // connect for every selected system 
    for( iCountSystems = 1; iCountSystems <= iNumberSystemSelections; iCountSystems ++ ) 
    { 
      checkSystems( bOnlyOwnSystem ); // find in as.ctl
     
      if( bOnlyOwnSystem ) 
      { // if there is only one system available 
        iSystemId = getSystemId() + \":\";
        // now do a QUERY-CONNECT
        if ( dpQueryConnectSingle(\"eventsCB\", false, \"openMode_\" + iSystemId,
               \"SELECT \" + attrList + \" FROM \" + from + \" WHERE \" + where, 1000) == -1 )
        {
          std_stopBusy();
          std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE,
                    E_ES_FUNCTION, \"propertiesCB(): dpQueryConnectSingle(...)\");
          return;
        }

        if ( dynlen(getLastError()) )
        {        dyn_errClass err = getLastError();
          std_stopBusy();
          errorDialog(err);
          return;
        }
      }
      else
      { // if there are more systems available
        remote = valSystemSelections[iCountSystems]; 
        iSystemId = getSystemId( remote + \":\" );
        if( strpos( remote, \":\" ) <= -1) 
          remote += \":\"; 
       
        remote = \"'\" + remote + \"'\"; 

        // now do a QUERY-CONNECT
        if ( dpQueryConnectSingle(\"eventsCB\", false, \"openMode_\" + iSystemId,
               \"SELECT \" + attrList + \" FROM \" + from + \" REMOTE \" + remote + \" WHERE \" + where, 1000) == -1 )
        {
          std_stopBusy();
          std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE,
                    E_ES_FUNCTION, \"propertiesCB(): dpQueryConnectSingle(...)\");
          return;
        }
      } // End systems available

      if ( dynlen(getLastError()) )
      {        dyn_errClass err = getLastError();
        std_stopBusy();
        es_checkQueryError( err, iSystemId );
        iSystemId = 0;
      }
      // Setting id for connect 
      if (iSystemId > 0) 
        dynAppend( g_counterConnectId, iSystemId ); 

    } // End loop systems

    g_connectId = \"openMode\";

    setValue(\"\", \"visible\", true); 
    std_stopBusy();
  }
  else if ( valType == 1 ) // closed list
  {
    dyn_dyn_anytype tab, tabAll;
    time t;
    int rangeSec = dynlen(valDpList) ? ES_HIST_RANGE_SEC : 3600;
    unsigned action, lines;
    string fileName, dpProp = es_getPropDP();
    string st1, st2, select;
    int iSystemId;

    es_getFromWhere(from, where, valDpList, valUserbits, valDpComment, valTypeSelections, 1);  //closedmode = 1
    where = \" _LEAF \" + where;

    {
      time t = valEnd - valBegin;
      int  hours = period(t);
      
      as_getDpesOfFilter(from, false, noOfDpes);
      hours /= 3600;

      // checking if number of dpes greater then g_esMaxDpeToDisplay
      if (noOfDpes == -1 ||  noOfDpes > g_esMaxDpeToDisplay)
      {
        dyn_float  df;
        dyn_string ds;
        string     sTemp;

        if (noOfDpes != -1)
        { 
          sTemp = getCatStr(\"sc\",\"toomuchdpe2\");
          strreplace(sTemp, \"§\", noOfDpes);
          strreplace(sTemp, \"°\", g_esMaxDpeToDisplay);
        }
        else
        {
          sTemp = getCatStr(\"sc\",\"toomuchdpehour1\");
        }
        ChildPanelOnCentralModalReturn(\"vision/MessageWarning2\",
                   getCatStr(\"sc\",\"Attention\"),
                   makeDynString(sTemp,
                                 getCatStr(\"general\",\"OK\"),
                                 getCatStr(\"sc\",\"cancel\")),
                   df, ds );

        if (!df[1])
        {
          std_stopBusy();
          g_esDisplayDpes = 1; // do not display, return
          state.text = getCatStr(\"sc\",\"cancelledtoomuch\");
          setValue(\"\", \"deleteAllLines\");
          setValue(\"\", \"visible\",true);
          return;
        }
        else
        {
          strreplace(sTemp,\"\\n\",\" \");
          DebugTN(\"ManNum:\"+myUiNumber(),\"User: \"+getUserName(),sTemp,getCatStr(\"para\",\"yes\"));
        }
      }
      else
      if (noOfDpes == -1 ||  noOfDpes * hours > g_esMaxDpeHourToDisplay )
      {
        dyn_float  df;
        dyn_string ds;
        string     sTemp;

        if (noOfDpes != -1)
        { 
          sTemp = getCatStr(\"sc\",\"toomuchdpehour2\");
          strreplace(sTemp, \"§\", noOfDpes*hours);
          strreplace(sTemp, \"°\", g_esMaxDpeHourToDisplay);
        }
        else
        {
          sTemp = getCatStr(\"sc\",\"toomuchdpehour1\");
        }
        ChildPanelOnCentralModalReturn(\"vision/MessageWarning2\",
                   getCatStr(\"sc\",\"Attention\"),
                   makeDynString(sTemp,
                                 getCatStr(\"general\",\"OK\"),
                                 getCatStr(\"sc\",\"cancel\")),
                   df, ds );
        if (!df[1])
        {
          std_stopBusy();
          g_esDisplayHours = 1; // do not display, return
          state.text = getCatStr(\"sc\",\"cancelledtoomuch\");
          setValue(\"\", \"deleteAllLines\");
          setValue(\"\", \"visible\",true);
          return;
        }
        else
        {
          strreplace(sTemp,\"\\n\",\" \");
          DebugTN(\"ManNum:\"+myUiNumber(),\"User: \"+getUserName(),sTemp,getCatStr(\"para\",\"yes\"));
          g_esDisplayHours = 2; // do display
          //g_esDisplayLines = 2; // do display
        }
      }
    }
    setValue(\"\", \"visible\", false);

    dpGet(dpProp + \"Action:_online.._value\", action, 
          dpProp + \"FileName:_online.._value\", fileName);
    
    dpSet(dpProp + \"Cancel:_original.._value\", false);  // for cancelling query-loop
    setValue(\"cancel\", \"enabled\", true);

    while ( valBegin < valEnd )
    {
      bool cancelled;

      if ( (valEnd - valBegin) < rangeSec )
        t = valEnd;
      else
        setPeriod(t, valBegin + rangeSec - 1, 999); // end with 999 mSecs of previous second

      st1 = valBegin;   // convert time to string
      st2 = t;          // convert time to string

      setValue(\"fieldValue\", \"text\", formatTime(\"%c\", valBegin) + \"  -  \" + formatTime(\"%c\", t));


      // loop for selected systems 
      for( iCountSystems = 1; iCountSystems <= iNumberSystemSelections; iCountSystems ++ ) 
      { 
        checkSystems( bOnlyOwnSystem ); // find in as.ctl
     
        if( bOnlyOwnSystem ) 
        { // if there is only one system available 
          select = \"SELECT \" + attrList + \" FROM \" + from + \" WHERE \" + where;

          if ( dpQuery(select + \" TIMERANGE(\\\"\" + st1 + \"\\\",\\\"\" + st2 + \"\\\",1,0)\", tab) == -1 )
          {
            std_stopBusy();
            std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE,
                      E_ES_FUNCTION, \"propertiesCB(): dpQuery(...)\");
            setMultiValue(\"cancel\", \"enabled\", false);
            return;
          }

          if ( dynlen(getLastError()) )
          {
            dyn_errClass err = getLastError();
            std_stopBusy();
            errorDialog(err);
            setMultiValue(\"cancel\", \"enabled\", false);
            return;
          }
        }
        else
        { // if there are more systems available
          remote = valSystemSelections[iCountSystems]; 
          if( strpos( remote, \":\" ) <= -1) 
            remote += \":\"; 

          iSystemId = getSystemId( remote );
          remote = \"'\" + remote + \"'\"; 
         
          select = \"SELECT \" + attrList + \" FROM \" + from + \" REMOTE \" + remote + \" WHERE \" + where;

          if ( dpQuery(select + \" TIMERANGE(\\\"\" + st1 + \"\\\",\\\"\" + st2 + \"\\\",1,0)\", tab) == -1 )
          {
            std_stopBusy();
            std_error(\"ES\", ERR_SYSTEM, PRIO_SEVERE,
                      E_ES_FUNCTION, \"propertiesCB(): dpQuery(...)\");
            setMultiValue(\"cancel\", \"enabled\", false);
            return;
          }

          if ( dynlen(getLastError()) )
          {        dyn_errClass err = getLastError();
            std_stopBusy();
            es_checkQueryError( err, iSystemId );
            setMultiValue(\"cancel\", \"enabled\", false);
            return;
          }
        } // End systems available
      
        lines += (dynlen(tab) - 1);   // sum of all lines - 1 header line per query
      
        /*
          g_esDisplayLines:
            == 0 ... No question yet
            == 1 ... Cancel query
            == 2 ... Continue query[/displaying]

          Questions:
            lines > g_maxClosedLines -> Ende (Always checken)

            lines > g_esMaxLinesToDisplay (check only, if g_esDisplayLines == 0)
                      -> Query not yet ready: \"Question: Continue?\" (may come once)
                         ( sc.cat - toomuchalert3 (replace \"°\" by 'g_esMaxLinesToDisplay')
                      -> Query ready (End time reached): \"Question: Display?\"
                         ( sc.cat - toomuchalert2 (replace \"°\" by 'g_esMaxLinesToDisplay',
                                                   \"§\" by 'lines')
        */

        if ( lines >= g_maxClosedLines)  // too much lines -> show warning
        {
          string msg;
        
          msg = getCatStr(\"sc\", \"maxLines\");
          strreplace(msg, \"§\", \"\\n\");
        
          std_stopBusy();

          ChildPanelOnCentralModal(\"vision/MessageWarning\", \"\", makeDynString(msg));
          setMultiValue(\"cancel\", \"enabled\", false);
          return;
        }

        if (lines > g_esMaxLinesToDisplay )  // too much lines found
        {
          dyn_float  df;
          dyn_string ds;
          string     sTemp;

          if ( t + 0.001 >= valEnd )  // The whole timerange queried,
          {                           // display them?
            sTemp = getCatStr(\"sc\",\"toomuchevents2\");
            strreplace(sTemp, \"§\", lines);
            strreplace(sTemp, \"°\", g_esMaxLinesToDisplay);
            ChildPanelOnCentralModalReturn(\"vision/MessageWarning2\",
              getCatStr(\"sc\",\"Attention\"),
              makeDynString(sTemp,
                            getCatStr(\"general\",\"OK\"),
                            getCatStr(\"sc\",\"cancel\")),
              df, ds );
            if (!df[1])  // No, don't display results
            {
              std_stopBusy();
              g_esDisplayLines = 1;
              state.text = getCatStr(\"sc\",\"cancelledtoomuch\");
              setValue(\"\", \"deleteAllLines\");
              setValue(\"\", \"visible\",true);
              return;
            }
            else  // Yes, display them
            {
              strreplace(sTemp,\"\\n\",\" \");
              DebugTN(\"ManNum:\"+myUiNumber(),\"User: \"+getUserName(),sTemp,getCatStr(\"para\",\"yes\"));
              g_esDisplayLines = 2; // do display
            }
          }
          
          else                          // Query is not yet ready.
          if ( g_esDisplayLines == 0 )  // No question yet,
          {                             // continue query?
            sTemp = getCatStr(\"sc\",\"toomuchevents3\");
            strreplace(sTemp, \"°\", g_esMaxLinesToDisplay);
            ChildPanelOnCentralModalReturn(\"vision/MessageWarning2\",
              getCatStr(\"sc\",\"Attention\"),
              makeDynString(sTemp,
                            getCatStr(\"general\",\"OK\"),
                            getCatStr(\"sc\",\"cancel\")),
              df, ds );
            if (!df[1])  // No, don't continue query
            {
              std_stopBusy();
              g_esDisplayLines = 1;
              state.text = getCatStr(\"sc\",\"cancelledtoomuch\");
              setValue(\"\", \"deleteAllLines\");
              setValue(\"\", \"visible\",true);
              return;
            }
            else  // Yes, continue query
            {
              strreplace(sTemp,\"\\n\",\" \");
              DebugTN(\"ManNum:\"+myUiNumber(),\"User: \"+getUserName(),sTemp,getCatStr(\"para\",\"yes\"));
              g_esDisplayLines = 2; // do display
            }
          }
        }

        dpGet(dpProp + \"Cancel:_online.._value\", cancelled);  // did the user interrupt the query-loop
      
        if ( cancelled )
        {
          std_stopBusy();
          setMultiValue(\"cancel\", \"enabled\", false,
                        \"fieldValue\", \"text\", \"\");
          return;
        }

        if ( action != 3 )
          eventsCB(\"closedMode\", tab);
        else
        {
          if ( dynlen(tabAll) > 0 ) dynRemove(tab, 1);  // delete header-line
          dynAppend(tabAll, tab);
        }

        valBegin = t + 0.001;  // add one milliSecond
      } // End loop systems
    }
    
    setMultiValue(\"\", \"visible\", true,
                  \"cancel\", \"enabled\", false,
                  \"fieldValue\", \"text\", \"\");
 
    if ( action == 2 ) 
    { 
      es_printTable(); 
      dpSet(dpProp + \"Action:_original.._value\", 0);  // do this only once 
    } 
    else if ( action == 3 ) 
    {
      dyn_dyn_anytype ret;
  
      convertEventTab(tabAll, g_dpCommentFilter, g_showInternals,ret);
      as_saveTable(fileName, ret); 
 
      dpSet(dpProp + \"Action:_original.._value\", 0);  // do this only once 
    } 

    std_stopBusy();
  }
  // update linecount 
  getValue(\"\", \"lineCount\", count); 
  if ( shapeExists(\"es_lineCount\") ) setValue(\"es_lineCount\", \"text\", count); 
}

//--------------------------------------------------------------------------

eventsCB(string ident, dyn_dyn_anytype tab)
{
  int             line, row, col, i, lineCount, pos, errCode, iPos, connectId;
  bool            stopped;
  time            tCurr;
  string          dpProp = es_getPropDP();
  dyn_string      valSortList;
  dyn_errClass    err; 
  dyn_dyn_anytype xtab;
  
  if ( g_discarded )
  {
    if ( ( (tCurr = getCurrentTime()) - g_discardStart) > MINCB_TIME )
    {
      string screenType, dpProp;
      dyn_string state;

      g_discarded = false;
      if ( g_discardThread >= 0 ) stopThread(g_discardThread);
      if ( shapeExists(\"fieldValue\") )
      {
        setValue(\"fieldValue\", \"text\", \"\",
                               \"backCol\", \"\");
      }

      // dpSet für refresh
      getValue(\"\", \"type\", screenType);

      // Checks if the Properties DP exists. If not, it creates it.
      dpProp = es_getPropDP();

      dpGet(dpProp+\"Settings.System.Selections\", state);
      dpSet(dpProp+\"Settings.System.Selections\", state);
    }
    else
    {
      g_discardStart = tCurr;
    }
    return;
  }

  err = getLastError();
  if( dynlen( err ) > 0 )
  {
    if ( getErrorCode(err[1]) == 114 )  // values discarded
    {
      if ( ! g_discarded )
      {
        g_discarded = true;
        g_discardStart = getCurrentTime();
        g_discardThread = startThread(\"es_discardTimeOut\");

        if ( shapeExists(\"fieldValue\") )
          setValue(\"fieldValue\", \"backCol\", \"vorwKamGingUnq\",
                                 \"text\", getCatStr(\"sc\",\"discardingdisplay\"));
        table.deleteAllLines();
      }
      return;
    }
    else
    {
      // connection lost
      // Find out connectId
      iPos = strpos( ident, \"_\" );
      connectId = substr( ident, iPos + 1 );
      
      es_checkQueryError( err, connectId );
    }
  }
/*
  err = getLastError(); 
  if( dynlen( err ) > 0 ) 
  { 
    // connection lost 
    // Find out connectId 
    iPos = strpos( ident, \"_\" ); 
    connectId = substr( ident, iPos + 1 );  
 
    es_checkQueryError( err, connectId );
  } 
*/
  if (dynlen(tab) > g_esMaxLinesToDisplay)
  {
    dyn_float  df;
    dyn_string ds;
    string     sTemp;
        
    if (g_esDisplayLines == 1) // do not display
    {
      std_stopBusy();
      state.text = getCatStr(\"sc\",\"cancelledtoomuch\");
      setValue(\"\", \"deleteAllLines\");
      setValue(\"\", \"visible\",true);
      return;
    }
    else
    if (g_esDisplayLines != 2)
    {
      { 
        sTemp = getCatStr(\"sc\",\"toomuchevents2\");

        if ( dynlen(tab) >= g_maxClosedLines)  // too much lines -> show warning
        {
          sTemp = getCatStr(\"sc\",\"toomuchEventsCancel\");
          strreplace(sTemp, \"§\", dynlen(tab));
          strreplace(sTemp, \"°\", g_esMaxLinesToDisplay);
            
          std_stopBusy();

          ChildPanelOnCentralModal(\"vision/MessageWarning\", \"\", makeDynString(sTemp));
          setValue(\"cancel\", \"enabled\", false);
          return;
        }

        strreplace(sTemp, \"§\", dynlen(tab));
        strreplace(sTemp, \"°\", g_esMaxLinesToDisplay);

        ChildPanelOnCentralModalReturn(\"vision/MessageWarning2\",
                   getCatStr(\"sc\",\"Attention\"),
                   makeDynString(sTemp,
                                 getCatStr(\"general\",\"OK\"),
                                 getCatStr(\"sc\",\"cancel\")),
                   df, ds );

      }
      if (!df[1])
      {
        std_stopBusy();
        g_esDisplayLines = 1;
        state.text = getCatStr(\"sc\",\"cancelledtoomuch\");
        setValue(\"\", \"deleteAllLines\");
        setValue(\"\", \"visible\",true);
        return;
      }
      else
      {
        strreplace(sTemp,\"\\n\",\" \");
        DebugTN(\"ManNum:\"+myUiNumber(),\"User: \"+getUserName(),sTemp,getCatStr(\"para\",\"yes\"));
        g_esDisplayLines = 2; // do display
      }
    }
  }

  // clear all \"_\" in identifier 
  pos = strpos( ident, \"_\" ); 
  if( pos > - 1 ) 
    ident = substr( ident, 0, pos ); 


  getValue(\"\", \"stop\", stopped);

  convertEventTab(tab, g_dpCommentFilter, g_showInternals,xtab);

  if ( dynlen(xtab[1]) == 0 ) return;  // nothing to do

 
  if (ident == \"openMode\")
  {  
    //  setValue(\"\", \"appendLines\", dynlen(xtab[1]),
   setValue(\"\", \"updateLines\", 2,
                                \"dpid\",       xtab[1],
                                \"time\",       xtab[2],
                                \"timeStr\",    xtab[3],
                                \"dpElement\",  xtab[4],
                                \"dpComment\",  xtab[5],
                                \"_value\",     xtab[6],
                                \"_text\",      xtab[9],
                                \"bits\",       xtab[7],
                                \"detail\",     xtab[8]);
  }
  else // closed mode
  {
    setValue(\"\", \"appendLines\", dynlen(xtab[1]),
                 \"dpid\",       xtab[1],
                 \"time\",       xtab[2],
                 \"timeStr\",    xtab[3],
                 \"dpElement\",  xtab[4],
                 \"dpComment\",  xtab[5],
                 \"_value\",     xtab[6],
                 \"_text\",      xtab[9],
                 \"bits\",       xtab[7],
                 \"detail\",     xtab[8]);
    dpProp = substr(dpProp, 0, strlen(dpProp) - 1);  // remove last char \".\"
    dpGet(dpProp+\".Settings.Sorting.SortList:_online.._value\",valSortList);
    for (i = 1; i <= dynlen(valSortList); i++)
      if ( valSortList[i] == \"timeStr\" ) valSortList[i] = \"time\";   
    if ( dynlen( valSortList) > 0 )
      setValue(\"\", \"sortDyn\", valSortList);
    else
      setValue(\"\", \"sort\", \"time\", \"count\");
  }

  if ( (ident == \"openMode\") && (! stopped) )
  {
    int count;

    getValue(\"\", \"lineCount\", count);
  
    if ( count > (g_maxLines + (g_maxLines/20)) )
    {
      setValue(\"\", \"sort\", \"time\", \"count\");
      setValue(\"\", \"deleteLinesN\", 0, count - g_maxLines,
                   \"sortUndo\", 0);
    }
  }
  // update linecount
  getValue(\"\", \"lineCount\", lineCount);
  if ( shapeExists(\"es_lineCount\") ) setValue(\"es_lineCount\", \"text\", lineCount);
}

//--------------------------------------------------------------------------
void es_discardTimeOut()
{
  while (true)
  {
    if ( (getCurrentTime() - g_discardStart) > MAXCB_TIME )
    {
      string screenType, dpProp;
      dyn_string state;

      g_discarded = false;
      g_discardThread = -1;

      if ( shapeExists(\"fieldValue\") )
      {
        setValue(\"fieldValue\", \"text\", \"\",
                                  \"backCol\", \"\");
      }

      // dpSet für refresh
      getValue(\"\", \"type\", screenType);
      // Checks if the Properties DP exists. If not, it creates it.
      dpProp = es_getPropDP();
      dpGet(dpProp+\"Settings.System.Selections\", state);
      dpSet(dpProp+\"Settings.System.Selections\", state);
      return;
    }
    delay(1);
  }
}

//--------------------------------------------------------------------------
/* 
The cancel-dp takes two functions: 
For a closed protocol the user can stop query by pushing \"cancel\"-button. 
For other protocols this bit is high, when user pushes \"stop\"-button with the 
option \"with disconnect\". 
 
Parameters: 
  bCancel ... value from cancel-datapoint 
*/ 
 
es_cancel( string dpCancel, bool bCancel ) 
{ 
int n;


  if( ( g_connectId == \"currentMode\" || g_connectId == \"openMode\" ) && bCancel ) 
  { // Diconnect all selected systems 
    for( n = 1; n <= dynlen( g_counterConnectId ); n ++ ) 
      dpQueryDisconnect(\"eventsCB\", g_connectId + \"_\" + g_counterConnectId[n]); 
     
    g_connectId = \"\"; 
    dynClear( g_counterConnectId ); 
  } 
} 

//-------------------------------------------------------------------------- 
/* 
CheckError when query is not successful and delete the connect-Id 
*/ 
 
es_checkQueryError( dyn_errClass err, int iSystemId ) 
{ 
int        iPos; 
int        errCode; 
string     msg; 
string     sSystemName; 


  if( dynlen( err ) > 0 ) 
  { // Find out type of error 
    errCode = getErrorCode( err[1] ); 

    sSystemName = getSystemName( iSystemId ); 
    sSystemName = strrtrim( sSystemName, \":\" ); 
     
    if( errCode == 110 )
    {
      msg = getCatStr(\"sc\",\"reduSwitched\");
      strreplace(msg, \"§\", \"\\n\");
      ChildPanelOnCentral(\"vision/MessageWarning\",
                          getCatStr(\"sc\",\"Attention\") + \"_\" + sSystemName,
                          makeDynString(\"$1:\" + msg + sSystemName + \" (\" + iSystemId + \")\" )
                          );
    } 
    else if( errCode == 111 )
    {
      msg = getCatStr(\"sc\",\"reduConnectionLost\");
      strreplace(msg, \"§\", \"\\n\");
      ChildPanelOnCentral(\"vision/MessageWarning\",
                          getCatStr(\"sc\",\"Attention\") + \"_\" + sSystemName,
                          makeDynString(\"$1:\" + msg + sSystemName + \" (\" + iSystemId + \")\" )
                          );
    }
    else
    {
      msg = getCatStr(\"sc\",\"distConnectionLost\");
      strreplace(msg, \"§\", \"\\n\");
      ChildPanelOnCentral(\"vision/MessageWarning\",
                          getCatStr(\"sc\",\"Attention\") + \"_\" + sSystemName,
                          makeDynString(\"$1:\" + msg + sSystemName + \" (\" + iSystemId + \")\" )
                          );
    }
    throwError( err ); // Write error to stderr 
  } 
   
  // Delete connect-Id 
  iPos = dynContains( g_counterConnectId, iSystemId ); 
  if( iPos > 0 ) 
    dynRemove( g_counterConnectId, iPos ); 
} 
" 0
E 1 0 1 10 19 "timeStr" 11 1 0 "s" 4
LANG:10001 4 Time
LANG:10004 6 时间
LANG:10000 4 Zeit
LANG:10027 10 Время
"main()
{
  string value;
  time timevalue;
  int row,col;

  getValue(\"\", \"currentCell\", row,col);  
  getValue(\"\",\"cellValueRC\",row,\"time\", timevalue); 
  value   = formatTime(\"%c\", timevalue, \" (%d)\");  
  
  //getValue(\"\", \"cellValue\", value);
  setValue(\"fieldValue\", \"text\", value);
}" 0

3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

130 "dpElement" 17 0 0 "s" 4
LANG:10001 10 DP element
LANG:10004 3 DPE
LANG:10000 10 DP-Element
LANG:10027 17 Элемент DP
"main()
{
  string value;
  
  getValue(\"\", \"cellValue\", value);
  setValue(\"fieldValue\", \"text\", value);
}" 0

3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

200 "dpComment" 29 1 0 "s" 4
LANG:10001 22 DP element/Description
LANG:10004 10 DPE/描述
LANG:10000 23 DP-Element/Beschreibung
LANG:10027 34 Элемент DP/Описание
"main()
{
  string value;
  
  getValue(\"\", \"cellValue\", value);
  setValue(\"fieldValue\", \"text\", value);
}" 0

3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

334 "_value" 17 1 0 "s" 4
LANG:10001 5 Value
LANG:10004 6 数值
LANG:10000 4 Wert
LANG:10027 16 Значение
"main()
{
  string value;
  
  getValue(\"\", \"cellValue\", value);
  setValue(\"fieldValue\", \"text\", value);
}" 0

3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

200 "_text" 15 1 0 "s" 4
LANG:10001 8 Contents
LANG:10004 6 内容
LANG:10000 6 Inhalt
LANG:10027 20 Содержание
"main()
{
  string value;
  
  getValue(\"\", \"cellValue\", value);
  setValue(\"fieldValue\", \"text\", value);
}" 0

3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

180 "bits" 8 1 0 "s" 4
LANG:10001 4 Bits
LANG:10004 4 Bits
LANG:10000 4 Bits
LANG:10027 8 Биты
"main()
{
  string value;
  
  getValue(\"\", \"cellValue\", value);
  setValue(\"fieldValue\", \"text\", value);
}" 0

3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

100 "detail" 1 1 0 "s" 4
LANG:10001 3 ...
LANG:10004 3 ...
LANG:10000 3 ...
LANG:10027 3 ...
"main(int row, string col)
{
  string dpid, tim, val;
  anytype value;
  
  getValue(\"\", \"cellValueRC\", row, \"dpid\", dpid,
               \"cellValueRC\", row, \"time\", tim,
               \"cellValueRC\", row, \"_value\", value);
  
  // start child panel for detail information
  ChildPanelOnCentralModal(\"vision/SC/ES_detail\", \"\",
       makeDynString(\"$dpid:\" + dpid,
                     \"$time:\" + tim,
                     \"$value:\" + (val = value)));   // convert value to string
}" 0

3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

24 "project" 2 0 0 "s" 4
LANG:10001 16 Project-specific
LANG:10004 16 Project-specific
LANG:10000 17 Projektspezifisch
LANG:10027 45 Соответствующий проекту
"main()
{
  es_project();
}" 0

3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

32 "dpid" 4 0 0 "s" 4
LANG:10001 4 dpid
LANG:10004 4 dpid
LANG:10000 4 dpid
LANG:10027 4 dpid
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

56 "time" 4 0 0 "s" 4
LANG:10001 4 Time
LANG:10004 6 时间
LANG:10000 4 Time
LANG:10027 10 Время
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

56 
26 26 "" 1 4
LANG:10001 2 #1
LANG:10004 2 #1
LANG:10000 2 #1
LANG:10027 2 #1
"" 1 4
LANG:10001 2 #2
LANG:10004 2 #2
LANG:10000 2 #2
LANG:10027 2 #2
"" 1 4
LANG:10001 2 #3
LANG:10004 2 #3
LANG:10000 2 #3
LANG:10027 2 #3
"" 1 4
LANG:10001 2 #4
LANG:10004 2 #4
LANG:10000 2 #4
LANG:10027 2 #4
"" 1 4
LANG:10001 2 #5
LANG:10004 2 #5
LANG:10000 2 #5
LANG:10027 2 #5
"" 1 4
LANG:10001 2 #6
LANG:10004 2 #6
LANG:10000 2 #6
LANG:10027 2 #6
"" 1 4
LANG:10001 2 #7
LANG:10004 2 #7
LANG:10000 2 #7
LANG:10027 2 #7
"" 1 4
LANG:10001 2 #8
LANG:10004 2 #8
LANG:10000 2 #8
LANG:10027 2 #8
"" 1 4
LANG:10001 2 #9
LANG:10004 2 #9
LANG:10000 2 #9
LANG:10027 2 #9
"" 1 4
LANG:10001 3 #10
LANG:10004 3 #10
LANG:10000 3 #10
LANG:10027 3 #10
"" 1 4
LANG:10001 3 #11
LANG:10004 3 #11
LANG:10000 3 #11
LANG:10027 3 #11
"" 1 4
LANG:10001 3 #12
LANG:10004 3 #12
LANG:10000 3 #12
LANG:10027 3 #12
"" 1 4
LANG:10001 3 #13
LANG:10004 3 #13
LANG:10000 3 #13
LANG:10027 3 #13
"" 1 4
LANG:10001 3 #14
LANG:10004 3 #14
LANG:10000 3 #14
LANG:10027 3 #14
"" 1 4
LANG:10001 3 #15
LANG:10004 3 #15
LANG:10000 3 #15
LANG:10027 3 #15
"" 1 4
LANG:10001 3 #16
LANG:10004 3 #16
LANG:10000 3 #16
LANG:10027 3 #16
"" 1 4
LANG:10001 3 #17
LANG:10004 3 #17
LANG:10000 3 #17
LANG:10027 3 #17
"" 1 4
LANG:10001 3 #18
LANG:10004 3 #18
LANG:10000 3 #18
LANG:10027 3 #18
"" 1 4
LANG:10001 3 #19
LANG:10004 3 #19
LANG:10000 3 #19
LANG:10027 3 #19
8 72
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 0 2 1 1 7
1 0
14 34
"ti_type"
""
1 316 532 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
13 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  316 532 412 561
2 "0s" 0 0 0 0 0 -1  E E E
14 35
"ti_selection"
""
1 415 532 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
14 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  415 532 545 561
2 "0s" 0 0 0 0 0 -1  E E E
14 30
"ti_begin"
""
1 630 532 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
15 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  630 532 767 561
2 "0s" 0 0 0 0 0 -1  E E E
14 31
"ti_end"
""
1 780 532 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
16 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  780 532 917 561
2 "0s" 0 0 0 0 0 -1  E E E
14 33
"ti_maxLines"
""
1 949 532 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
17 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  949 532 991 561
2 "0s" 0 0 0 0 0 -1  E E E
14 32
"fi_dpComment"
""
1 99 561 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
18 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  99 561 236 590
2 "0s" 0 0 0 0 0 -1  E E E
14 25
"fi_dpList"
""
1 269 564 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
19 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  268 563 991 590
2 "0s" 0 0 0 0 0 -1  E E E
14 4
"state"
""
1 165 640 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
20 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  165 640 320 673
2 "0s" 0 0 0 0 0 -1  E E E
14 5
"es_lineCount"
""
1 321 640 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
21 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  321 640 500 673
2 "0s" 0 0 0 0 0 -1  E E E
14 6
"fieldValue"
""
1 501 640 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
22 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  501 640 998 673
2 "0s" 0 0 0 0 0 -1  E E E
1 39 0 "" 0
0
13 13
"filter"
""
1 339 603 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  339 603 439 633

T 
4
LANG:10001 10 Set filter
LANG:10004 15 设置过滤器
LANG:10000 13 Filter setzen
LANG:10027 21 Прим.фильтр
"main()
{
  dyn_int lines;
  string dpe, dpProp = es_getPropDP();

  getValue(\"table\", \"getSelectedLines\", lines);

  if ( dynlen(lines) == 0 )   // nothing selected
  {
    ChildPanelOnCentralModal(\"vision/MessageWarning\", \"\",
      makeDynString(\"$1:\" + getCatStr(\"sc\", \"noSel\")));
    return;
  }
  
  getValue(\"table\", \"cellValueRC\", lines[1], \"dpid\", dpe);
  
  if ( dpSet(dpProp + \"Settings.Name:_original.._value\", \"\",          // this is not a configuration (== \"\")
             dpProp + \"Settings.Filter.DpComment:_original.._value\", \"\",
             dpProp + \"Settings.Filter.DpList:_original.._value\", makeDynString(dpSubStr(dpe, DPSUB_DP_EL))) == -1 )
  {
    ChildPanelOnCentralModal(\"vision/MessageWarning\",
      getCatStr(\"para\",\"warning\"),makeDynString(getCatStr(\"sc\",\"filterSetError\")));
  }
  else
    ChildPanelOnCentralModal(\"vision/MessageInfo1\",
      getCatStr(\"para\",\"information\"),makeDynString(getCatStr(\"sc\",\"filterSet\")));
}" 0
 E E E
13 20
"DPListe"
""
1 212 603 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
4 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  212 603 312 633

T 
4
LANG:10001 10 DP List...
LANG:10004 10 DP List...
LANG:10000 11 DP Liste...
LANG:10027 20 Перечни DP...
"main()
{ 
  ChildPanelOnParentModal(\"vision/SC/ES_dpeList\", \"\",myPanelName(),makeDynString(),20,7);
}
" 0
 E E E
13 8
"props"
""
1 108 603 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
3 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  108 603 211 633

T 
4
LANG:10001 13 Properties...
LANG:10004 9 属性...
LANG:10000 16 Eigenschaften...
LANG:10027 20 Свойства ...
"main()
{
  dyn_anytype cond, resT;
  string dpUi;
  time timeout = 86400;
  dyn_string configNames;
  
  dpUI = myUiDpName() + \".\";

  as_openPropWindow(\"vision/SC/ES_properties\");
  
  cond[1] = myModuleName();
  
  dpWaitForValue(makeDynString(dpUi + \"PanelOff.ModuleName:_online.._value\"),
                  cond,
                  makeDynString(), resT, timeout);

  // see which configurations we have 
  configNames[1] = \"\"; 
  es_getConfigList(configNames); 
  setValue(\"configNames\", \"items\", configNames);
}
" 0
 E E E
22 29
"configNames"
""
1 98 532 E E E 1 E 1 E N {0,0,0} E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  98 532 236 561
0

E
"main()
{
  string config, dp;
  dyn_dyn_anytype tab;
  
  string valDpComment;
  dyn_string valDpList;
  bit32 valUserbits;
 
  dyn_string valSortList;
 
  unsigned valType;
  time valBegin;
  time valEnd;
  unsigned valMaxLines;
  unsigned valSelection, valShift;  
  dyn_int valTypeSelections;
  dyn_string valSystemSelections;

  
  getValue(\"\", \"text\", config);

  if ( config == \"\" )    // no special configuration
  {
    setValue(\"props\", \"enabled\", true);
    return;
  }

  setValue(\"props\", \"enabled\", false);
  
  es_getConfigDP(dp, config);
  
  if ( dp == \"\" )
  {
    std_error(\"AS\", ERR_SYSTEM, PRIO_WARNING, E_ES_FUNCTION, \"es_getConfigDP()\");
    return;
  }

  // get settings of choosen configuration
  dpGet(dp + \"Filter.DpComment:_online.._value\", valDpComment,
        dp + \"Filter.DpList:_online.._value\", valDpList,
        dp + \"Filter.Userbits:_online.._value\", valUserbits,

        dp + \"Sorting.SortList:_online.._value\", valSortList,
        
        dp + \"Timerange.Type:_online.._value\", valType,
        dp + \"Timerange.Begin:_online.._value\", valBegin,
        dp + \"Timerange.End:_online.._value\", valEnd,
        dp + \"Timerange.MaxLines:_online.._value\", valMaxLines,
        dp + \"Timerange.Selection:_online.._value\", valSelection,
        dp + \"Timerange.Shift:_online.._value\", valShift,

        dp + \"Type.Selections:_online.._value\", valTypeSelections,
        dp + \"System.Selections:_online.._value\", valSystemSelections
       );
       
  // correct timerange for current time
  as_getBeginEndTime(valBegin, valEnd, valSelection, valShift);

  // set them onto _ESProp_ DP
  dp = es_getPropDP();
  dpSet(dp + \"Settings.Name:_original.._value\", config,

        dp + \"Settings.Filter.DpComment:_original.._value\", valDpComment,
        dp + \"Settings.Filter.DpList:_original.._value\", valDpList,
        dp + \"Settings.Filter.Userbits:_original.._value\", valUserbits,

        dp + \"Settings.Sorting.SortList:_original.._value\", valSortList,

        dp + \"Settings.Timerange.Type:_original.._value\", valType,
        dp + \"Settings.Timerange.Begin:_original.._value\", valBegin,
        dp + \"Settings.Timerange.End:_original.._value\", valEnd,
        dp + \"Settings.Timerange.MaxLines:_original.._value\", valMaxLines,
        dp + \"Settings.Timerange.Selection:_original.._value\", valSelection,
        dp + \"Settings.Timerange.Shift:_original.._value\", valShift,

        dp + \"Settings.Type.Selections:_original.._value\", valTypeSelections,
        dp + \"Settings.System.Selections:_original.._value\", valSystemSelections
       );
}" 0

E
 0 0
13 37
"Drucken"
""
1 19 1208 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
45 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  8 603 48 633

P 
4294967295
"pictures/printer.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  es_printTable();
}" 0
 E E E
13 38
"tabelleSpeichern"
""
1 737 3295 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
46 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  48 602.9999999999995 88 632.9999999999995

P 
4294967295
"pictures/StandardIcons/Save_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  es_tableToFile();
}" 0
 E E E
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
3 0 "trend" -1
"layoutAlignment" "AlignCenter"
"" ""
"vision/SC/trendButton.pnl" 909 469 T 6 1.11111111111111 0 1 -571.1111111111099 133
0
0
