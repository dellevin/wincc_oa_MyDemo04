V 14
4
LANG:10001 8 (NoName)
LANG:10004 8 (NoName)
LANG:10000 8 (NoName)
LANG:10027 18 (БезИмени)
PANEL,-1 -1 400 375 N "_3DFace" 1
"$DP"
E E E E E 1 -1 -1 0  84 524
""0  1
E "vt_checkDp(string dp)
{
  string dpType, refType;
  bool bCompress;
  dyn_string ds;
  dyn_string  acDpTypes, acfunctions, acAllFunctions;
  int i, compression, i_pos;
 
  bgSteps = false;
  
  // check if the name of the dpe contains \"C?\"
  // get the dpe name without \"C?\"
  i_pos = strpos(dp,\"C?\",0); 
  if ( i_pos > 0)
  {
    dp = substr(dp,0,i_pos-1);
  }

  //Check if the DpSelector uses RDB Compr
  if (!bgSteps)
  {
    // 20.08.2014 Martin Pokorny IM 115218: change \"System1:\" to getSystemName(), another VarTrend of System2 can not access DPEs of System1 
    if (dpSubStr( dp, DPSUB_SYS ) == getSystemName() )  // NoCheckWarning      
      dp=dpSubStr(dp,DPSUB_DP_EL);
    else
      dp=dpSubStr(dp,DPSUB_SYS_DP_EL);
  }

  if (dp!=\"\")
  {
    //the normal way -> no comprSteps are used
    if (!bgSteps)
    {
      if (strpos(dp,\".\")<=0)
        dp+=\".\";

      // testen ob Knoten oder Blatt
      if (dpElementType(dp) == DPEL_STRUCT || dpElementType(dp) ==  DPEL_TYPEREF || dpSubStr(dp,DPSUB_DP_EL)==dpSubStr(dp,DPSUB_DP)  )
      {
        dpType = dpTypeName(dp);
        acGetTypes(acDpTypes);
        if (dynContains(acDpTypes,dpType) <= 0)    // ist keine direkter AC Type
        {
          acGetRefACType(dp, refType);
        }
        else
        {
          refType = dpType;
        }
      }
	
      if (substr(dp, strlen(dp)-1, 1) == \".\")
        dp = substr(dp, 0,strlen(dp)-1);
	     
      if (refType !=\"\" )  // Falls nur eine Struktur und Komprimiert
      {
        if (dpExistsDPE(dp + \".C?\")  )    // 1 Stufe gewählt  -> Alle Funktionen auswähnen 
        {
          dp += \".\";
          bCompress = 1;
          acGetCompressions(refType,compression);
          for (i= 1; i<=compression; i++)
          {
            acGetFunctions(refType, \"C\"+i,acfunctions);
            dynAppend(acAllFunctions, acfunctions);
          }
          dynUnique(acAllFunctions);
          dp += \"C?.\"+acAllFunctions[1];
        }
        else
        {
          ds = strsplit(dp, \".\");
          if (substr(ds[dynlen(ds)],0,1)==\"C\")
          {
            bCompress = 1;
                 
            compression = acGetCompression(dp + \".DUMMY\" );
            acGetFunctions(refType, \"C\"+compression,acfunctions);
            dp+=\".\"+acfunctions[1];
          }
        }
      }
      DPSelectorText.text= dp;
	  
      connectDP();

      gDP[gSelectedCurve] = DPSelectorText.text;
			
      dpSet($DP+\".refresh:_original.._value\",1);
    }
    else	//we got RDB ComprSteps
    {
      DPSelectorText.text= dp;
      gDP[gSelectedCurve] = DPSelectorText.text;    	  
      dpSet($DP+\".refresh:_original.._value\",1);    	
    }
  }
}

" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
2 33
"Text2"
""
1 79 407 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
34 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 40 40 314 55
0 2 0 "0s" 0 0 0 192 0 0  40 40 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 41 Select datapoint with datapoint selector:
LANG:10004 28 使用DP选择器来选择DP
LANG:10000 44 Datenpunktauswahl mittels Datenpunktselektor
LANG:10027 35 Выбор точки данных:
2 42
"withText"
""
1 358 467 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
43 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 107 172 159 187
0 2 0 "0s" 0 0 0 192 0 0  107 172 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 13 with function
LANG:10004 13 with function
LANG:10000 8 Funktion
LANG:10027 14 Функция
2 47
"Text4"
""
1 125 742 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
48 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 32 265 338 280
0 2 0 "0s" 0 0 0 192 0 0  32 265 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 47 Datapoint information of the selected datapoint
LANG:10004 17 选定DP的信息
LANG:10000 50 Datenpunktinformation des gewählten Datenpunktes:
LANG:10027 67 Информация о выбранной точке данных:
2 48
"Text5"
""
1 172 954 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
49 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 43 287 76 302
0 2 0 "0s" 0 0 0 194 0 0  76 287 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 5 Alias
LANG:10004 6 别名
LANG:10000 6 Alias:
LANG:10027 18 Псевдоним
2 49
"Text6"
""
1 208 1091 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
50 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 22 314 76 329
0 2 0 "0s" 0 0 0 194 0 0  76 314 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 7 Comment
LANG:10004 6 备注
LANG:10000 9 Langtext:
LANG:10027 15 Коммент.
2 54
"Text1"
""
1 60 140 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
54 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 62 142 165 157
0 2 0 "0s" 0 0 0 192 0 0  62 142 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 17 Compression level
LANG:10004 12 压缩等级
LANG:10000 17 Verdichtungslevel
LANG:10027 30 Уровень агрегир.
2 55
"Text3"
""
1 147 250 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
55 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 62 112 117 127
0 2 0 "0s" 0 0 0 192 0 0  62 112 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 14 Archive active
LANG:10004 12 归档激活
LANG:10000 10 Archiviert
LANG:10027 26 Архивирование
13 37
"DPSelector"
""
1 0 3 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
38 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  358 57 386 85

P 
13107
"pictures/StandardIcons/dpeMon_tree_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  string dp;
  dyn_string ds;
  dyn_uint  dui;

  getSystemNames(ds, dui);

  if ( dynlen( ds) > 1)
    dpSelector(dp,FALSE, \"ALL_SYSTEM_NAME_SYS\");
  else
    dpSelector(dp,FALSE, \"OWN_SYSTEM_NAME_NO_SYS\");
  
  vt_checkDp(dp);
}
  " 0
 E E E
14 39
"DPSelectorText"
""
1 70 130 E E E 0 E 1 E N "_WindowText" E N "STD_inputfield_back" E E
 E E
40 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  38 58 352 84
3 "0s" 0 0 0 0 0 -1  E E "main()
{
  string dp;
  
  dp = this.text;
  
  vt_checkDp(dp);
}
" 0

20 43
"checkArchive"
""
1 137 517 E E E 0 E 1 E N "_3DText" E N "_3DFace" E E
 E E
44 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  35 108 59 132
1
T 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
E"main()
{
  this.state(0)= !this.state(0);
}" 0
20 44
"checkCompress"
""
1 137 577 E E E 0 E 1 E N "_3DText" E N "_3DFace" E E
 E E
45 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  35 138 59 162
1
T 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
E"main()
{
  this.state(0)= !this.state(0);
}" 0
22 45
"compressState"
""
1 435.3333333333334 407 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
46 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  188 138 352 165
0

E
"main()
{
string dpType,refType;
string dp = gDP[gSelectedCurve];
dyn_string ds = strsplit(dp,\".\"), acDpTypes, acfunctions, acAllFunctions, acfunctionstring, dsReturn, dfReturn;
int i, compression;


dpType = dpTypeName(ds[1]);
acGetTypes(acDpTypes);
if (dynContains(acDpTypes,dpType) <= 0)		// ist keine direkter AC Type
{
  	acGetRefACType(dp, refType);
  	  	dpType = refType;

}
else
{
	refType = dpType;
}

if (refType!=\"\")				// falls komprimiert
{
	if (this.selectedPos == 1)							// Automatik
	  ds[dynlen(ds)-1]=\"C?\";
	else																		// nicht Automatik, überprüfen ob die Funktion überhaupt vorhanden?!
		{
		  acGetFunctions(dpType, \"C\"+(this.selectedPos -1),acfunctions);
			if (dynContains(acfunctions,ds[dynlen(ds)]) > 0)		// falls vorhanden
				  ds[dynlen(ds)-1]=\"C\"+(this.selectedPos -1);		// OK
			else
				{
				 this.selectedPos = 1;													// nicht vorhanden -> automatik!!
				 ds[dynlen(ds)-1]=\"C?\";
				 ChildPanelOnCentralModalReturn(\"vision/MessageWarning\",	getCatStr(\"va\",\"headerPanelhost\"),
								makeDynString(getCatStr(\"ac\",\"noFunctionAvailable\"), getCatStr(\"va\",\"cancel\")), dsReturn, dfReturn);

				}
	  }
	dp = ds;
	strreplace(dp,\" | \",\".\");

	//
	//   Setzen der richtigen Funktionen
	//
	if (ds[dynlen(ds)-1]==\"C?\")			// alle Stufen und alle Funktionen
	{
	 	acGetCompressions(dpType,compression);
	  for (i= 1; i<=compression; i++)
			{
		  acGetFunctions(dpType, \"C\"+i,acfunctions);

      // DebugN(i, acfunctions);
	    dynAppend(acAllFunctions, acfunctions);
	  	}
	  	dynUnique(acAllFunctions);

	    for (i =1; i<= dynlen(acAllFunctions); i++)
	    	  acfunctionstring[i]=acGetFunctionName( acAllFunctions[i]);
	    compressFunction.items = acfunctionstring;
	    
	}
	else															// eine bestimmte Stufe
	{
	  compression = acGetCompression(dp);
	  if (compression > 0)
	  	compressState.selectedPos = compression+1;
	  else
 		  ds[dynlen(ds)-1]=\"C?\";
	  acGetFunctions(dpType, \"C\"+compression,acfunctions);
	  for (i =1; i<= dynlen(acfunctions); i++)
		  acfunctionstring[i]=acGetFunctionName( acfunctions[i]);
	  compressFunction.items = acfunctionstring;
	  
	}
	
	compressFunction.text	= acGetFunctionName(ds[dynlen(ds)]);			// Funktion setzen
	  dpSet($DP+\".refresh:_original.._value\",1);

}
else
{
  DebugN(\"FEHLER Daten nicht komprimiert!!\");
}


dp = ds;
strreplace(dp,\" | \",\".\");
gDP[gSelectedCurve] = dp;
DPSelectorText.text = dp;

}" 0

E
 0 0
22 46
"compressFunction"
""
1 680.6666666666666 727 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
47 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  188 168 352 195
0

E
"main()
{
string dpType,refType;
string dp = gDP[gSelectedCurve];
dyn_string ds = strsplit(dp,\".\"), acDpTypes, acfunctions, acAllFunctions, acfunctionstring;
int i, compression, pos;

dpType = dpTypeName(ds[1]);
acGetTypes(acDpTypes);
if (dynContains(acDpTypes,dpType) <= 0)		// ist keine direkter AC Type
{
  	acGetRefACType(dp, refType);
  	dpType = refType;
}
else
{
	refType = dpType;
}

if (refType!=\"\")				// falls komprimiert
{
	 	// Vorbereitung Tabellen aufbauen
	 	acGetCompressions(dpType,compression);
	  for (i= 1; i<=compression; i++)
			{
			  acGetFunctions(dpType, \"C\"+i,acfunctions);
		    dynAppend(acAllFunctions, acfunctions);
	  	}
	  dynUnique(acAllFunctions);
	  for (i =1; i<= dynlen(acAllFunctions); i++)
	   	  acfunctionstring[i]=acGetFunctionName( acAllFunctions[i]);
		
		pos = dynContains(acfunctionstring, this.text);		// finde dir richtige Position

    ds[dynlen(ds)] = acAllFunctions[pos];

    dp = ds;
    strreplace(dp,\" | \",\".\");
    gDP[gSelectedCurve] = dp;
    DPSelectorText.text = dp;
      dpSet($DP+\".refresh:_original.._value\",1);


}
else
{

  DebugN(\"FEHLER Daten nicht komprimiert!!\");

}


}" 0

E
 0 0
14 52
"DPAliasText"
""
1 300 702 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
53 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  88 281 352 308
2 "0s" 0 0 0 0 0 -1  E E E
14 53
"DPCommentText"
""
1 380 840 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
54 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  88 309 352 336
2 "0s" 0 0 0 0 0 -1  E E E
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
0
