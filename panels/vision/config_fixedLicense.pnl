V 14
4
LANG:10001 14 Fixed Licenses
LANG:10004 15 固定许可证
LANG:10000 13 Fixe Lizenzen
LANG:10027 43 Фиксированные лицензии
PANEL,-1 -1 545 340 N "_3DFace" 0
"main()
{
  int        i, iPos;
  string     sShield,
             sCode, sUi, sPara, sCounter;
  dyn_string dsShield, ds, dsCode, dsPara, dsUi;

  ignoreChange = false;
  bCounterNullWarningDisplayed = false;

  if ( !globalExists(\"gParams\") )
    addGlobal(\"gParams\", DYN_ANYTYPE_VAR);

  gParams[1]  = myModuleName();
  gParams[2]  = \"\";
  gParams[3]  = myPanelName();
  gParams[4]  = \"\";
  gParams[5]  = 50;
  gParams[6]  = 50;
  gParams[7]  = 1.0;
  gParams[8]  = true;
  gParams[9]  = makeDynString();
  gParams[10] = true;

  tabLicense.deleteAllLines();
  tabLicense.tableMode(TABLE_SELECT_BROWSE);
  tabLicense.selectByClick(TABLE_SELECT_LINE);
  tabLicense.selectColors(\"darkgrey\", \"white\");
  tabLicense.sortOnClick(false);

  if (isCodeMeterUsed())
  {
    txtCounter.visible = false;

    string hw;
    dpGet(\"_Event.License.HW:_online.._value\", hw);

    dsShield = strsplit(hw, \"\\n\"); // use existing parsing code below
    dyn_string shieldCopy;

    for (int i = 1; i <= dynlen(dsShield); ++i)
    {
      if (strpos(dsShield[i], \"mobile_uifix\") == 0)
      {
        mobileuiLines.append(dsShield[i]);
      }
      else
      {
        shieldCopy.append(dsShield[i]);
      }
    }
    dsShield = shieldCopy;
  }
  else
  {
    // ramain shield compatible
    dpConnect(\"licenseCheckCounter\", \"_Event.License.FixedShield:_online.._value\");
    dpGet(\"_Event.License.FixedShield:_online.._value\", sShield);
    dsShield = strsplit(sShield, \"\\n\");
  }

  for ( i = 1; i <= dynlen(dsShield); i++ )
  {
    dsShield[i] = strrtrim(strltrim(dsShield[i]));
    if ( strpos(dsShield[i], \"uifix_\" ) == 0 )
    {
      ds = strsplit(dsShield[i], \"=\");
      if ( dynlen(ds) > 1 )
      {
        sCode = strrtrim(strltrim(ds[1]));
        strreplace(sCode, \"uifix_\", \"\");
        sUi = strrtrim(strltrim(ds[2]));
        strreplace(sUi, \"\\\"\", \"\");
        iPos = dynContains(dsCode, sCode);
        if ( iPos > 0 )
        {
          dsUi[iPos] = sUi;
        }
        else
        {
          dynAppend(dsCode, sCode);
          dynAppend(dsUi,   sUi);
          dynAppend(dsPara, \"0\");
        }
      }
    }
    else
    if ( strpos(dsShield[i], \"parafix_\" ) == 0 )
    {
      ds = strsplit(dsShield[i], \"=\");
      if ( dynlen(ds) > 1 )
      {
        sCode = strrtrim(strltrim(ds[1]));
        strreplace(sCode, \"parafix_\", \"\");
        sPara = strrtrim(strltrim(ds[2]));
        strreplace(sPara, \"\\\"\", \"\");
        iPos = dynContains(dsCode, sCode);
        if ( iPos > 0 )
        {
          dsPara[iPos] = sPara;
        }
        else
        {
          dynAppend(dsCode, sCode);
          dynAppend(dsUi,   \"0\");
          dynAppend(dsPara, sPara);
        }
      }
    }
  }

  tabLicense.appendLines(dynlen(dsCode), \"code\", dsCode,
                                         \"para\", dsPara,
                                         \"ui\"  , dsUi);

  gddaSettings = hw_getSettingsFromTable();
}

licenseCheckCounter(string dp, string sShield)
{
  int        i, iCounter, iTmc;
  bool       bCounter = false;
  string     sCounter, sTmc;
  dyn_string dsShield = strsplit(sShield, \"\\n\"), ds;

  for ( i = 1; i <= dynlen(dsShield); i++ )
  {
    dsShield[i] = strrtrim(strltrim(dsShield[i]));
    if ( strpos(dsShield[i], \"counter\" ) == 0 )
    {
      ds = strsplit(dsShield[i], \"=\");
      if ( dynlen(ds) > 1 )
      {
        bCounter = true;
        sCounter = strrtrim(strltrim(ds[2]));
        strreplace(sCounter, \"\\\"\", \"\");
        sscanf(sCounter, \"%d\", iCounter);
        txtCounter.visible = bCounter;
        txtCounter.text = txtCounter2.text + \" \" + sCounter + \" )\";
        cmdApply.enabled = (iCounter > 0);
      }
    }
    if ( strpos(dsShield[i], \"tmc\" ) == 0 )
    {
      ds = strsplit(dsShield[i], \"=\");
      if ( dynlen(ds) > 1 )
      {
        sTmc = strrtrim(strltrim(ds[2]));
        strreplace(sTmc, \"\\\"\", \"\");
        sscanf(sTmc, \"%d\", iTmc);
        iTmc++; sTmc = iTmc;
      }
    }
  }

  if ( !bCounterNullWarningDisplayed && iCounter < 1 && bCounter )
  {
    bCounterNullWarningDisplayed = true;
    licenseWarningOut(\"pmon\", \"errFixedCounterNull\", \"%d\", sTmc);
  }
}
" 0
 E E E E 1 -1 -1 0  10 280
""0  1
E "#uses \"pmon.ctl\"
#uses \"panel.ctl\"

bool            bCounterNullWarningDisplayed;
dyn_dyn_anytype gddaSettings;
bool            ignoreChange;
dyn_string      mobileuiLines;

bool isCodeMeterUsed()
{
  mapping details;
  checkLicenseOption(\"ui\", details);

  return details[\"used\"] >= 0;
}

cmdClose()
{
  dyn_anytype da, daa;

  da[1] = myModuleName();
  da[2] = myPanelName();
  daa[1] = 0;
  da[3] = daa;
  panelOff(da);
}


bool isUuidAllowedCharacter(char c)
{
  if (( c >= '0' && c <= '9' )
      || ( c >= 'A' && c <= 'Z' )
      || ( c >= 'a' && c <= 'z' ))
  {
    return true;
  }

  return false;
}

bool isUuid(string sCode)
{
  const int UUID_PART_COUNT = 5;
  dyn_string parts = strsplit(sCode, \"-\");
  if (dynlen(parts) != UUID_PART_COUNT)
  {
    return false;
  }

  for ( int partId = 1; partId <= UUID_PART_COUNT; ++partId )
  {
    string part = parts[partId];
    for ( int charId = 0; charId < strlen(part); ++charId )
    {
      if ( !isUuidAllowedCharacter(part[charId]) )
      {
        return false;
      }
    }
  }

  return true;
}

bool licenseCheckNew(string &sCode)
{
  bool   bOk = true;
  int    iPara = inPara.text,
         iUi   = inUi.text;

  sCode = inCode.text;
  sCode = strrtrim(strltrim(sCode));

  if ( sCode == \"\" )
  {
    licenseWarningOut(\"pmon\", \"errEmptyLicense\");
    bOk = false;
  }
  else
  {
    int i;

    if ( !isUuid(sCode) )
    {
      for ( i = 0; i < strlen(sCode); i++ )
      {
        if ( sCode[i] < \"0\" || sCode[i] > \"9\" )
        {
          licenseWarningOut(\"pmon\", \"errNumericOnly\");
          sCode = \"\";
          bOk = false;
          break;
        }
      }
    }
  }

  return(bOk);
}

licenseWarningOut(string sCat, string sKey, string sWild = \"\", string sValue = \"\")
{
  int         x, y;
  string      sMessage = getCatStr(sCat, sKey);
  dyn_anytype daResult;

  if ( sWild != \"\" )
  {
    strreplace(sMessage, sWild, sValue);
  }
  getChildPanelCentralPosition(\"vision/MessageWarning\", x, y);
  ChildPanelOn(\"vision/MessageWarning\", \"\", makeDynString(sMessage), x, y);
}

dyn_dyn_anytype hw_getSettingsFromTable()
{
  int             i;
  dyn_dyn_anytype dda;

  for ( i = 0; i < tabLicense.lineCount(); i++ )
  {
    dda[i+1] = tabLicense.getLineN(i);
  }
  return(dda);
}

void calcAndSetInParaAndInUi(int Para, int Ui)
{
  // read max. values from license
  int shieldUi = isCodeMeterUsed() ? 255 : getLicenseOption(\"uifix\");
  int shieldPara = isCodeMeterUsed() ? 255 : getLicenseOption(\"parafix\");

  int calcUi=0;
  int calcPara=0;

  dyn_anytype line;

  // add all Para- and Ui-Values from Table (without the selected entry)
  for ( int i=0; i<tabLicense.lineCount; i++ )
  {
    getValue(\"tabLicense\", \"getLineN\", i,line);

    if ( line[1] != inCode.text )
    {
      calcPara += (int)line[2];
      calcUi += (int)line[3];
    }
  }

  // the maximum is shield - configurated
  int actMaxUi = shieldUi - calcUi;
  int actMaxPara = shieldPara - calcPara;

  // if necessary change the Para- and Ui- Value
  int setUi = Ui;
  int setPara = Para;

  if ( setUi > actMaxUi )
    setUi = actMaxUi;

  if ( actMaxPara > setUi )
    actMaxPara = setUi;

  if ( setPara > actMaxPara )
    setPara = actMaxPara;

  // write maximums and Values into Spinboxes
  inPara.text=0;
  inPara.sbMaximum(actMaxPara);
  inPara.text = setPara;

  inUi.text = 0;
  inUi.sbMaximum(actMaxUi);
  inUi.text = setUi;
}
" 0
 3
"CBRef" "1"
"EClose" "main()
{
  cmdClose();
}" 0

"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
30 10
"Frame1"
""
1 10 280 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E 1.053169734151329 0 1 4.468302658486708 0 0 E 10 10 500 280
4
LANG:10001 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,75,0,0,0,0,0
0 4
LANG:10001 30 Configuration Of Fixed Clients
LANG:10004 24 固定客户端的配置
LANG:10000 34 Konfiguration fixer Arbeitsplätze
LANG:10027 94 Конфигурация клиентов с фиксированными лицензиями
2 9
"txtCounter"
""
1 453 8 E E E 1 E 0 E N "_WindowText" E N "_3DFace" E E
 E E
9 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  1 E 253 10 455 25
0 2 0 "0s" 0 0 0 194 0 0  455 10 1
4
LANG:10001 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,75,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,75,0,0,0,0,0
0 4
LANG:10001 28 (Number of possible changes:
LANG:10004 23 (可能的变化数量:
LANG:10000 31 (Anzahl möglicher Änderungen:
LANG:10027 52 (Кол-во возможных изменений):
2 23
"txtCounter2"
""
1 118 308 E E E 1 E 0 E N "_WindowText" E N "_3DFace" E E
 E E
12 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  1 E 120 310 314 325
0 2 0 "0s" 0 0 0 192 0 0  120 310 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 30 ( Number of possible changes: 
LANG:10004 23 (可能的变化数量:
LANG:10000 34  ( Anzahl möglicher Änderungen: 
LANG:10027 63  ( Количество возможных изменений: 
13 11
"cmdHelp"
""
1 15 305 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
10 0 0 0 112 0
E E E
0
4
LANG:10001 16 Open online help
LANG:10004 18 打开在线帮助
LANG:10000 20 Online Hilfe öffnen
LANG:10027 14 Справка

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  13 303 101 331

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main()
{
  std_help(\"para_license\");
}" 0
 E E E
14 19
"inCode"
""
1 25 245 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"layoutAlignment" "AlignCenter"
"textChangedCB" "main(string newText)
{
  if (isCodeMeterUsed())
    return;

  if ( ignoreChange == true )
  {
    ignoreChange = false;
    return;
  }

  int para = inPara.text;
  int ui   = inUi.text;

  calcAndSetInParaAndInUi(para>0 ? para : 0, ui>0 ? ui : 0);
}"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  23 243 267 270
3 "0s" 0 0 0 0 0 -1  E "main()
{

}" 0
 E
21 25
"inPara"
""
1 265 245 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
2 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  263 243 377 270
0

"main()
{
  int maxPara = isCodeMeterUsed() ? 255 : getLicenseOption(\"parafix\");
  this.sbMaximum(maxPara > 0 ? maxPara : 0);
}" 0

E
E

N 0 0 1 0 1 1
21 26
"inUi"
""
1 375 245 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
3 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  373 243 487 270
0

"main()
{
  if (isCodeMeterUsed())
    return;

  int maxUi = getLicenseOption(\"uifix\");
  this.sbMaximum( maxUi>0 ? maxUi : 0);
}" 0

"main()
{
  int para = inPara.text;
  int ui   = inUi.text;

  calcAndSetInParaAndInUi(
      para >0 ? para : 0,
      ui > 0 ? ui : 0);
}" 0

E

N 0 255 1 0 1 1
13 15
"addManager"
""
1 490 211 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
4 0 0 0 0 0
E E E
0
4
LANG:10001 25 Write line into the table
LANG:10004 25 Write line into the table
LANG:10000 32 Eingabe in die Tabelle schreiben
LANG:10027 43 Внести запись в таблицу

2
"hoverbclr" "N \"STD_hover\""
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  493 209 521 237

P 
12632256
"pictures/StandardIcons/apply_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  string sCode;
  
  if ( licenseCheckNew(sCode) )
  {
    tabLicense.updateLine(1, \"code\", sCode,
                             \"para\", inPara.text,
                             \"ui\"  , inUi.text);
  }
}" 0
 E E E
25 14
"tabLicense"
""
1 25 30.00000000000002 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  23 28 489 237
E"main(int row, string column, string value)
{
  ignoreChange = true;
  inCode.text = tabLicense.cellValueRC(row, \"code\");

  int para = tabLicense.cellValueRC(row, \"para\");
  int ui   = tabLicense.cellValueRC(row, \"ui\");
  
  calcAndSetInParaAndInUi(para>0 ? para : 0, ui>0 ? ui : 0);  
}" 0
 1 0 1 3 9 "code" 21 1 0 "s" 4
LANG:10001 13 Hardware code
LANG:10004 12 硬件代码
LANG:10000 12 Hardwarecode
LANG:10027 27 Аппаратный код
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

239 "para" 9 1 0 "s" 4
LANG:10001 12 No. of PARAs
LANG:10004 10 PARA数量
LANG:10000 14 Anz. der PARAs
LANG:10027 16 Кол-во PARA
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

110 "ui" 9 1 0 "s" 4
LANG:10001 10 No. of UIs
LANG:10004 8 UI数量
LANG:10000 12 Anz. der UIs
LANG:10027 14 Кол-во UI
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

110 
20 20 "" 1 4
LANG:10001 2 #1
LANG:10004 2 #1
LANG:10000 2 #1
LANG:10027 2 #1
"" 1 4
LANG:10001 2 #8
LANG:10004 2 #8
LANG:10000 2 #8
LANG:10027 2 #8
"" 1 4
LANG:10001 2 #9
LANG:10004 2 #9
LANG:10000 2 #9
LANG:10027 2 #9
"" 1 4
LANG:10001 2 #2
LANG:10004 2 #2
LANG:10000 2 #2
LANG:10027 2 #2
"" 1 4
LANG:10001 2 #3
LANG:10004 2 #3
LANG:10000 2 #3
LANG:10027 2 #3
"" 1 4
LANG:10001 2 #4
LANG:10004 2 #4
LANG:10000 2 #4
LANG:10027 2 #4
"" 1 4
LANG:10001 2 #5
LANG:10004 2 #5
LANG:10000 2 #5
LANG:10027 2 #5
"" 1 4
LANG:10001 2 #6
LANG:10004 2 #6
LANG:10000 2 #6
LANG:10027 2 #6
"" 1 4
LANG:10001 2 #7
LANG:10004 2 #7
LANG:10000 2 #7
LANG:10027 2 #7
8 30
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 0 1 0 1 7
1 0
13 17
"removeLicense"
""
1 490 245 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
6 1 0 0 88 0
E E E
0
4
LANG:10001 20 Remove selected line
LANG:10004 18 删除选定的行
LANG:10000 31 Ausgewählten Eintrag entfernen
LANG:10027 46 Удалить выбранную запись

2
"hoverbclr" "N \"STD_hover\""
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  493 243 521 271

P 
12303291
"pictures/StandardIcons/delete_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  dyn_int di = tabLicense.getSelectedLines();

  if ( dynlen(di) < 1 )
  {
    licenseWarningOut(\"para\", \"nolineselected\");
  }
  else
  {
    dyn_anytype line;
    getValue(\"tabLicense\", \"getLineN\", di[1], line);
    ignoreChange = true;
    inCode.text = line[1];
    tabLicense.deleteLineN(di[1]);    
    calcAndSetInParaAndInUi(line[2], line[3]);
  }
}
" 0
 E E E
13 13
"cmdApply"
""
1 355 305 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
7 0 0 0 16777221 0
E E E
0
4
LANG:10001 30 Accept changes and close panel
LANG:10004 15 保存并关闭
LANG:10000 38 Änderungen übernehmen und schließen
LANG:10027 64 Принять изменения и закрыть панель

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  353 303 441 331

T 
4
LANG:10001 2 OK
LANG:10004 6 确定
LANG:10000 2 OK
LANG:10027 2 OK
"main()
{
  int             i;
  string          sCode = \"\";
  dyn_anytype     daT, da, daa;
  dyn_dyn_anytype ddaSettings;

  ddaSettings = hw_getSettingsFromTable();

  if ( gddaSettings != ddaSettings )
  {
    for ( i = 0; i < tabLicense.lineCount; i++ )
    {
      daT = tabLicense.getLineN(i);
      sCode += \"parafix_\" + daT[1] + \" = \" + daT[2] + \"\\n\" +
               \"uifix_\"   + daT[1] + \" = \" + daT[3] + \"\\n\";
    }

    for (int i = 1; i <= dynlen(mobileuiLines); ++i)
    {
      sCode += mobileuiLines[i] + \"\\n\";
    }
    dpSet(\"_Event.License.HW:_original.._value\", sCode);
    dpSet(\"_Event_2.License.HW:_original.._value\", sCode);
  }

  da[1] = myModuleName();
  da[2] = myPanelName();
  daa[1] = 0;
  da[3] = daa;
  panelOff(da);
}
" 0
 E E E
13 12
"cmdExit"
""
1 445 305 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
8 0 0 0 27 0
E E E
0
4
LANG:10001 31 Discard changes and close panel
LANG:10004 27 放弃更改并关闭面板
LANG:10000 42 Änderungen verwerfen und Panel schließen
LANG:10027 66 Отменить изменения и закрыть панель

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  443 303 531 331

T 
4
LANG:10001 6 Cancel
LANG:10004 6 取消
LANG:10000 9 Abbrechen
LANG:10027 16 Отменить
"main()
{
  cmdClose();
}" 0
 E E E
1 27 0 "" 0
0
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
3 0 "PANEL_REF0" -1
"layoutAlignment" "AlignCenter"
"" ""
"objects_parts/STD_OBJECTS/ButtonBarBackground.pnl" 0 330 T 13 1.090180360721443 0 1 0 -35
0
0
