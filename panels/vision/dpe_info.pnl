V 13
4
LANG:10001 14 Datapoint Info
LANG:10004 17 数据点DP信息
LANG:10000 19 Datenpunkt Auskunft
LANG:10027 66 Информация об элементе точки данных
PANEL,-1 -1 488 334 N "STD_panel_back" 2
"$b_editable"
"$dpe"
"main()
{
}" 0
 E E E E 1 -1 -1 0  11 211
""0  1
E E 2
"CBRef" "0"
"EClose" E
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
2 10
"last_dpe"
""
1 352 16 E E E 0 E 0 E N {0,0,0} E N "_Transparent" E E
 E E
11 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 354 18 405 33
1 2 0 "0s" 0 0 0 192 0 0  354 18 1
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 8 last_dpe
LANG:10004 8 last_dpe
LANG:10000 8 last_dpe
LANG:10027 8 last_dpe
22 2
"dpe_comboBox"
""
1 15 15 E E E 1 E 1 E N "STD_inputfield_text" E N "STD_inputfield_back" E E
 E E
3 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  13 13 437 39
0

"string g_old_dpe, g_dpe;
int    g_iaction=1;
int    dpeValueType; 
bool   boCurveVisible=0,g_editable;
dyn_string g_asdpeRecent;
main()
{
  
  g_dpe=(isDollarDefined(\"$dpe\")?$dpe:\"\");
  g_editable=(isDollarDefined(\"$b_editable\")?$b_editable:true);
  if(!getUserPermission(3))
    setValue(\"newDPE\" ,\"enabled\",0);
  
  if(g_dpe!=\"\")
  {
    if((!dpExists(g_dpe+\":_online.._value\") || dpElementType(g_dpe)==1))
    {
      string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\");
      ChildPanelOnModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText),50,50);
      return;    
    }
    this.enabled=0;
    dpsel.enabled=0;
  } 
  addGlobal(\"gSelectedDPE\",STRING_VAR);
  //init panel
  newDPE.text=\"\";
  onlineValueBox.text=\"\";
  commentBox.text=\"\";
  unitBox.text=\"\";
  valueTypeBox.text=\"\";
  last_dpe.text=g_dpe; 
  
  if (g_editable == true)
    setMultiValue(\"newDPE\",\"visible\",true,
    			  \"newDPEEnter\",\"visible\",true,
    			  \"newDPEText\",\"visible\",true);
 
  dpGet(myUiDpName()+\".DpeInfo.RecentDpe.LastDpes:_online.._value\",g_asdpeRecent);
  
  this.items = g_asdpeRecent;
  this.text = g_dpe;
  gSelectedDPE = this.text;
  
  
  dpSet(myUiDpName()+\".DpeInfo.CurrentDpe.Name:_original.._value\",g_dpe);
  dpConnect(\"workCurrentDpe\",myUiDpName()+\".DpeInfo.CurrentDpe.Name:_online.._value\");
}

workCurrentDpe(string dp1,string dpe_string)
{
  int imaxComboList = 20, iUser, iManager;
  string sManName, sUnit;
  anytype value,min,max;
    
  if(!dpExists(dpe_string+\":_online.._value\"))
  {
    string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\");
    this.text = last_dpe.text;
    ChildPanelOnModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText),50,50);
    return;    
  }
  
  if(dpe_string==\"\")
  {
    this.text = last_dpe.text;
    return; 
  }
    
  this.text = dpe_string;
  
  if(g_iaction>1 && g_old_dpe != dpe_string)
  {
    dpDisconnect(\"display\",g_old_dpe+\":_online.._value\",
                           g_old_dpe+\":_online.._active\",
                           g_old_dpe+\":_online.._invalid\",
                           g_old_dpe+\":_online.._out_prange\",
                           g_old_dpe+\":_online.._default\");
    if(boCurveVisible)
      setMultiValue(\"Trend1\",\"disconnectDirectly\",\"curve_1\",
                    \"Trend1\",\"curveRemoveData\",\"curve_1\",getCurrentTime());
  }
  else
     g_iaction=2;
    
 
  gSelectedDPE = this.text;
  gSelectedDPE = this.text;
  newDPE.text  = \"\";

  
  //get dpe-comment
  commentBox.text = dpGetComment(dpe_string);
  
  //get dpe-unit
  sUnit=dpGetUnit(dpe_string);
  if(sUnit!=\"\")
    unitBox.text=\"[\"+dpGetUnit(dpe_string)+\"]\";
  else
    unitBox.text=\"\";
  
  //get dpe-valuetype
  dpeValueType=dpAttributeType(dpe_string+\":_original.._value\");
  valueTypeBox.text=_const2str(dpeValueType);
  
  if(dpeValueType   != FLOAT_VAR && 
     dpeValueType   != UINT_VAR  &&
     dpeValueType   != INT_VAR   && 
     dpeValueType   != BOOL_VAR)
  {       
    setMultiValue(\"TabPage\",\"registerVisible\",3,0,
                  \"newDPE\" ,\"enabled\",0);
    boCurveVisible=0;
  }
  else
  {           
    setMultiValue(\"TabPage\",\"registerVisible\",3,1,
                  \"newDPE\" ,\"enabled\",1);
    boCurveVisible=1;
  }
 
  if(!getUserPermission(3))
    setValue(\"newDPE\" ,\"enabled\",0);
  
  //get datapointtype
  dataTypeValueBox.text=dpTypeName( dpe_string );
  
  //Defaultvalue for dpe
  dpGet(dpe_string +\":_default.._type\",value);
  if(value==0)
    defaultValueBox.text=getCatStr(\"misc\",\"not_defined\");
  else
  {
    string sValue;
    anytype Defaultvalue;
    dpGet(dpe_string +\":_default.._value\",Defaultvalue);
    sValue = dpValToString(dpe_string,Defaultvalue);
    defaultValueBox.text = sValue;
  } 
  
  //get dpe-valuerange
  dpGet(dpe_string +\":_pv_range.._type\",value);
  if(value==0)
    dpeValueRangeBox.text=getCatStr(\"misc\",\"not_defined\");
  else
  {
    dpGet(dpe_string +\":_pv_range.._max\",max,
          dpe_string +\":_pv_range.._min\",min);
    dpeValueRangeBox.text = \"[ \"+min+ \" .. \" +max+\" ]\";
  } 
  
  //get user
  dpGet(dpe_string + \":_online.._user\",    iUser,
        dpe_string + \":_online.._manager\", iManager);

  convManIntToName(iManager, sManName);
  txtUser.text(getUserName(iUser));
  if (strlen(sManName) > 0)
    txtUser.toolTipText(\"Manager: \" + sManName);
  else
    txtUser.toolTipText(\"\");
  
  // ComboxList not System1:_mp_ANALOG1.value:_pv_range.._typelanger then imaxComboList // NoCheckWarning 
  if(dynContains(g_asdpeRecent,dpe_string)<0)
    dynInsertAt(g_asdpeRecent,dpe_string,1);
  else
  {
    dynRemove(g_asdpeRecent,dynContains(g_asdpeRecent,dpe_string));
    dynInsertAt(g_asdpeRecent,dpe_string,1);
  }
  if(dynlen(g_asdpeRecent)>imaxComboList)
    dynRemove(g_asdpeRecent,imaxComboList+1);
  this.items = g_asdpeRecent;  
  dpSet(myUiDpName()+\".DpeInfo.RecentDpe.LastDpes:_original.._value\",g_asdpeRecent);

  dpConnect(\"display\",1,dpe_string+\":_online.._value\",
                        dpe_string+\":_online.._active\",
                        dpe_string+\":_online.._invalid\",
                        dpe_string+\":_online.._out_prange\",
                        dpe_string+\":_online.._default\");
  if(boCurveVisible)
    setMultiValue(\"Trend1\",\"curveRemoveData\",\"curve_1\",getCurrentTime(),
                  \"Trend1\",\"connectDirectly\",\"curve_1\",dpe_string+\":_online.._value\",
                  \"Trend1\",\"curveAutoscale\", \"curve_1\", 1);

  g_old_dpe=dpe_string;
  last_dpe.text=g_old_dpe;
  
  //show the Address
  dpGet(dpe_string + \":_address.._type\", value); 
  if (value==0)        						// if archive does not exists
  {
    setValue(\"TabPage\",\"registerVisible\",4,0);
  }  
  else  //address exists 
  { 
    getAddressDetails(dpe_string);
    setValue(\"TabPage\",\"registerVisible\",4,1);
  } 
  
  //show the archiveValues
  dpGet(dpe_string + \":_archive.._type\", value);    

  if (value==0)        						// if archive does not exists
  {
    setValue(\"TabPage\",\"registerVisible\",2,0);
  }  
  else  //archiv exists 
  {
    int iLauf;
    string sArchivConfig,sArchivName;
       
    // archive name
    dpGet(dpe_string + \":_archive.1._class\", sArchivConfig);
    if (!useRDBArchive())    
    {
      dpGet(sArchivConfig+ \".general.arName:_online.._value\", sArchivName);
    }
    else
    {
      dpGet(sArchivConfig+ \".groupName\", sArchivName);      
    }
    ArchiveValue.text = sArchivName;

    if(dpeValueType == FLOAT_VAR || 
       dpeValueType == UINT_VAR  ||
       dpeValueType == INT_VAR   || 
       dpeValueType == BOOL_VAR)
    {
       valueText.visible = 1;
       numberOfValueText.visible = 1;
       timeRangeText.visible = 1;
       minText.visible = 1;
       maxText.visible = 1;
       StatisticsTime.visible = 1;
       minValue.visible = 1;
       maxValue.visible = 1;
       AvgValue.visible = 1;
       NumberOfValues.visible = 1;

       //init StatisticsTime-combobox
       StatisticsTime.text = getCatStr(\"misc\", \"StatisticTimePeriod\");
       StatisticsTime.enabled = 1;
       NumberOfValues.text = \"\";
       minValue.text = \"\";
       maxValue.text = \"\";
       AvgValue.text = \"\"; 
    }
    else
    {
       valueText.visible = 0;
       numberOfValueText.visible = 0;
       timeRangeText.visible = 0;
       minText.visible = 0;
       maxText.visible = 0;
       StatisticsTime.visible = 0;
       minValue.visible = 0;
       maxValue.visible = 0;
       AvgValue.visible = 0;
       NumberOfValues.visible = 0;
    }      

    setValue(\"TabPage\",\"registerVisible\",2,1);
    
  }   
}

display(string dp1, anytype value,
        string dp2, bool boActive,
        string dp3, bool boInvalid,
        string dp4, bool boOutRange,
        string dp5, bool boDefault)
{
  time    sourceTime;
  string  sValue,sAlertText,sLastValue,
          sManName;
  int     i,
          iManager,iUser;
  anytype lastValue;

  dp1 = dpSubStr(dp1,DPSUB_SYS_DP_EL);
  
  dpGet(dp1+\":_online.._stime\",sourceTime,
        dp1+\":_online.._text\",sAlertText);
        
  i= dpGetAsynch( sourceTime-0.001, dp1+\":_offline.._value\", lastValue);
  
  sValue = dpValToString(dp1,value);
  sLastValue = dpValToString(dp1,lastValue); 
  
  if(dpeValueType != FLOAT_VAR && 
     dpeValueType != UINT_VAR  &&
     dpeValueType != INT_VAR   && 
     dpeValueType != BOOL_VAR)
  {   
    valueTypeBox.text=_const2str(dpeValueType) + \" [ \" + dynlen(value) +\" ]\";
  }
  
  onlineValueBox.text = sValue;
  onlineDetailsValueBox.text = sValue;
  onlineArchiveValueBox.text = sValue;
  lastValueBox.text=sLastValue;  
  
  //get user
  dp1 = dpSubStr(dp1, DPSUB_SYS_DP_EL);//IM105295
  
  dpGet(dp1 + \":_online.._user\",    iUser,
        dp1 + \":_online.._manager\", iManager);

  convManIntToName(iManager, sManName);
  txtUser.text(getUserName(iUser));
  if (strlen(sManName) > 0)
    txtUser.toolTipText(\"Manager: \" + sManName);
  else
    txtUser.toolTipText(\"\");
        
  //dpe-text
  currentTextValueBox.text = sAlertText;
  //dpe-sourcetime
  timeStampBox.text = formatTime(\"%c\",sourceTime,\"  (%03d)\");
  
  //detail-Checkbutton
//  setMultiValue(\"CheckButton\",\"state\",0,boInvalid,
//                \"CheckButton\",\"state\",1,boOutRange,
//                \"CheckButton\",\"state\",2,boDefault,
//                \"CheckButton\",\"state\",3,boActive);
}  

getAddressDetails(string dpe_string)
{
  string sReference,sDriver,sDataType;
  int iDirection,iDataType,idriverNumbre;
  bool boActive;
  dyn_anytype dpc;
     
  dpGet(dpe_string + \":_address.._reference\", sReference,
        dpe_string + \":_address.._drv_ident\", sDriver,
        dpe_string + \":_address.._direction\", iDirection,
        dpe_string + \":_address.._datatype\" , iDataType,
        dpe_string + \":_address.._active\"   , boActive,
        dpe_string+\":_distrib.._driver\",idriverNumbre);
     
   
    
  if   (iDirection == 1 || iDirection == 5) iDirection=1; //output
  else iDirection=0  ; //input
    
  if(idriverNumbre<1) 
    idriverNumbre=1;
    
  setMultiValue(\"addressReferenceBox\",\"text\",sReference,
                \"addressDriverBox\",\"text\",sDriver,
                //\"addressDataTypeBox\",\"text\",sDataType,
                \"directionBox\",\"number\",iDirection,
                \"driverNumberBox\",\"text\",idriverNumbre,
                \"activeBox\",\"number\",boActive,
                \"TabPage\",\"registerVisible\",4,1);
}
" 0

"main()
{
  string dpe,dpe_string = this.text;
  
  if(strtok(dpe_string,\"*;?\") > -1)
  {
    dyn_float  resultFloat; 
    dyn_string resultText;
    if(strpos(dpe_string,\"*.*\")>=0 && !getUserPermission(4))
    {
      int istrPos;
      string dpWildcarts;
      istrPos=strpos(dpe_string,\":\");
      
      dpWildcarts=dpe_string;
      if(istrPos>=0 && istrPos < strpos(dpWildcarts,\"*.*\"))
        dpWildcarts=substr(dpWildcarts,istrPos+1);
      
      istrPos=strpos(dpWildcarts,\":\");
      if(istrPos>=0 && istrPos > strpos(dpWildcarts,\"*.*\"))
        dpWildcarts=substr(dpWildcarts,0,istrPos);
     
      strreplace(dpWildcarts,\"*\",\"\");
      strreplace(dpWildcarts,\".\",\"\");
     
      if(strlen(dpWildcarts)==0)
      {
        string sMessageText=getCatStr(\"misc\",\"userNotAllowed\");    
        ChildPanelOnModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText),50,50);
        return;
      }
    }   
    ChildPanelOnCentralModalReturn(\"vision/dpe_info_selection.pnl\",\"DPE\",
                                   makeDynString(\"$s_wildcards:\"+dpe_string), resultFloat, resultText);
    dpe_comboBox.text = resultText;
    dpe_string= resultText;
  }
 
  if(dpe_string!=\"\")
  {
    if(dpExists(dpe_string+\":_original.._value\") && dpElementType(dpe_string)!=1)
    {
      dpSet(myUiDpName()+\".DpeInfo.CurrentDpe.Name:_original.._value\",dpe_string);
    }
    else
    {
      //dpe not exist
      string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\");    
      this.text=last_dpe.text;
      ChildPanelOnModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText),50,50);
      return;    
    } 
  }
  else
  {
    //dpe not exist
    string sMessageText=getCatStr(\"misc\",\"DpeNotExisting\");    
    this.text=last_dpe.text;
    ChildPanelOnModal(\"vision/MessageWarning\",getCatStr(\"para\",\"warning\"),makeDynString(sMessageText),50,50);
    return;    
  } 
  
}" 0

E
 1 0
28 3
"TabPage"
""
1 64 221.6824644549763 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
4 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  13 48 474 277
E5 "common" 4
LANG:10001 6 Common
LANG:10004 6 常规
LANG:10000 9 Allgemein
LANG:10027 10 Общее
1 "vision\\dpe_info_common.pnl" 3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0

"details" 4
LANG:10001 7 Details
LANG:10004 6 详细
LANG:10000 7 Details
LANG:10027 12 Детали
1 "vision\\dpe_info_detail.pnl" 3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0

"archiv" 4
LANG:10001 7 Archive
LANG:10004 6 归档
LANG:10000 6 Archiv
LANG:10027 10 Архив
1 "vision\\dpe_info_archive.pnl" 3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0

"trace" 4
LANG:10001 5 Trend
LANG:10004 6 趋势
LANG:10000 5 Trend
LANG:10027 10 Тренд
1 "vision\\dpe_info_trend.pnl" 3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0

"Adresse" 4
LANG:10001 7 Address
LANG:10004 6 地址
LANG:10000 7 Adresse
LANG:10027 10 Адрес
1 "vision\\dpe_info_adress.pnl" 3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0


13 4
"dpsel"
""
1 445 15 E E E 1 E 1 E N "STD_button_text" E N "STD_pushbutton_back" E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  443 13 471 41

P 
4294967295
"pictures/StandardIcons/dpeMon_tree_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  string dp;

  dpSelector(dp);
  dpSet(myUiDpName()+\".DpeInfo.CurrentDpe.Name:_original.._value\",dpSubStr(dp,DPSUB_SYS_DP_EL));//IM105295
}
" 0
 E E E
13 5
"cmdCancel"
""
1 383 298 E E E 1 E 1 E N "STD_button_text" E N "STD_pushbutton_back" E E
 E E
6 0 0 0 0 0
E E E
0
4
LANG:10001 26 Close panel without action
LANG:10004 12 关闭面板
LANG:10000 41 Panel schließen, ohne Aktion auszulösen
LANG:10027 52 Закрыть без выполн. операции

0
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  383 298 471 326

T 
4
LANG:10001 5 Close
LANG:10004 6 关闭
LANG:10000 10 Schließen
LANG:10027 14 Закрыть
"main() 
{ 
  PanelOff(); //PanelOffReturn(makeDynFloat(-1),makeDynString());
} 
" 0
 E E E
13 11
"cmdHelp"
""
1 13 298 E E E 1 E 1 E N "STD_button_text" E N "STD_pushbutton_back" E E
 E E
11 0 0 0 112 0
E E E
0
4
LANG:10001 16 Open online help
LANG:10004 18 打开在线帮助
LANG:10000 20 Online Hilfe öffnen
LANG:10027 14 Справка

0
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  13 298 101 326

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main() 
{ 
  std_help(\"dpe_info\");
} 
" 0
 E E E
1 12 0 "" 0
0
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
3 0 "PANEL_REF0" -1
"" ""
"objects_parts/STD_OBJECTS/ButtonBarBackground.pnl" 15 260 T 12 1 0 1 -15 30
0
0
