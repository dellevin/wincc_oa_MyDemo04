V 14
4
LANG:10001 8 (NoName)
LANG:10004 11 (未命名)
LANG:10000 8 (NoName)
LANG:10027 18 (БезИмени)
PANEL,-1 -1 478 679 N "_3DFace" 1
"$System"
"main()
{

//int giSystemRedundancy;
//mapping mNum, mWeight, mBLink0, mBLink1, mBAlert, mSAlertClass, mDsLinkInformation, mState, mName;

  addGlobal( \"giSystemRedundancy\", BOOL_VAR);
  addGlobal( \"mNum\", MAPPING_VAR);
  addGlobal( \"mWeight\", MAPPING_VAR);
  addGlobal( \"mBLink0\", MAPPING_VAR);
  addGlobal( \"mBLink1\", MAPPING_VAR);
  addGlobal( \"mBAlert\", MAPPING_VAR);
  addGlobal( \"mSAlertClass\", MAPPING_VAR);
  addGlobal( \"mDsLinkInformation\", MAPPING_VAR);
  addGlobal( \"mState\", MAPPING_VAR);
  addGlobal( \"mName\", MAPPING_VAR);

  // DistConnections
  addGlobal( \"cNum\", MAPPING_VAR);
  addGlobal( \"cWeight\", MAPPING_VAR);
  addGlobal( \"cBLink0\", MAPPING_VAR);
  addGlobal( \"cBLink1\", MAPPING_VAR);
  addGlobal( \"cBAlert\", MAPPING_VAR);
  addGlobal( \"cSAlertClass\", MAPPING_VAR);
  addGlobal( \"cDsLinkInformation\", MAPPING_VAR);
  addGlobal( \"cState\", MAPPING_VAR);
  addGlobal( \"cName\", MAPPING_VAR);



  Tab2.registerVisible(2,isDistributed());    // if single system -> do not display 3rd sheet
  
  delay(5);
  buOK.enabled	= TRUE;
    
}" 0
 "main()
{
removeGlobals();
}" 0
 E E E 1 -1 -1 0  10 320
""0  1
E "#uses \"sysOverview.ctl\"

removeGlobals()
{
  removeGlobal( \"giSystemRedundancy\");
  removeGlobal( \"mNum\");
  removeGlobal( \"mWeight\");
  removeGlobal( \"mBLink0\");
  removeGlobal( \"mBLink1\");
  removeGlobal( \"mBAlert\");
  removeGlobal( \"mSAlertClass\");
  removeGlobal( \"mDsLinkInformation\");
  removeGlobal( \"mState\");
  removeGlobal( \"mName\");

  removeGlobal( \"cNum\");
  removeGlobal( \"cWeight\");
  removeGlobal( \"cBLink0\");
  removeGlobal( \"cBLink1\");
  removeGlobal( \"cBAlert\");
  removeGlobal( \"cSAlertClass\");
  removeGlobal( \"cDsLinkInformation\");
  removeGlobal( \"cState\");
  removeGlobal( \"cName\");
}" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
13 18
"buOK"
""
1 288 645 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
19 0 0 0 16777221 0
E E E
0
4
LANG:10001 30 Accept changes and close panel
LANG:10004 15 保存并关闭
LANG:10000 38 Änderungen übernehmen und schließen
LANG:10027 64 Принять изменения и закрыть панель

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,12,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,12,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,12,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,12,5,40,0,0,0,0,0
0  286 643 374 671

T 
4
LANG:10001 2 OK
LANG:10004 6 确定
LANG:10000 2 OK
LANG:10027 2 OK
"int iRedundant;

main()
{
  isRemoteSystemRedundant(iRedundant, $System);

  saveDPE();
  saveManagers();
  saveConnections();

  removeGlobals();
  dpSet($System+\"_MonitoredManagers.updateParametrization:_original.._value\", TRUE);
  PanelOff();
}


saveDPE()
{
  int max = tabDPE.lineCount;
  anytype at;
  int i;

  string assignment, limit, weight, dpe,  sDpReplica1, sDpReplica2;
  dyn_string dsdpe, dslimit;
  dyn_int dsweight;

  for ( i= 0; i<max; i++)
  {
    at = tabDPE.getLineN(i);
    assignment = at[2];
    limit = at[3];
    weight = at[4];
    dpe = at[5];
    if ( strpos (dpe, \":\") > 0 )
      dpe = dpSubStr (dpe, DPSUB_DP_EL);

    if ( !dynContains(dsdpe, dpe) )
    {
      dynAppend( dsdpe, dpe);
      dynAppend( dsweight, weight);
      dynAppend( dslimit, \"bool main(anytype a){return !(a\"+assignment+limit+\");}\");
    }

    if ( iRedundant == 1)
    {
      bool hasNoSystem = (strpos(dpe, \":\") < 0);

      if (hasNoSystem)
        dpe = $System + dpe;

      getReduDp(dpe, sDpReplica1, sDpReplica2);

      if (hasNoSystem)
        sDpReplica2 = dpSubStr(sDpReplica2, DPSUB_DP_EL);

      if (  sDpReplica2 != \"\")
      {
        assignment = at[2];
        limit = at[3];
        weight = at[4];
        dpe = sDpReplica2;

        if ( !dynContains(dsdpe, dpe) )
        {
          dynAppend( dsdpe, dpe);
          dynAppend( dsweight, weight);
          dynAppend( dslimit, \"bool main(anytype a){return !(a\"+assignment+limit+\");}\");
        }
      }
    }
  }

  dpSet($System+ \"_MonitoredManagers.ImportanceDp.Dpe:_original.._value\", dsdpe,
        $System+ \"_MonitoredManagers.ImportanceDp.Importance:_original.._value\", dsweight,
        $System+ \"_MonitoredManagers.ImportanceDp.Limit:_original.._value\", dslimit);
}

/* e.g. m:
[mapping 5 items
   \"redu_2_2_to_redu_2_1\" : \"0\"
   \"data_hdb_6\" : \"6\"
   \"data_hdb_5\" : \"5\"
   \"data_0_1_to_report_1_1\" : \"0\"
   \"redu_2_1_to_redu_2_2\" : \"0\"
] */
int getManagerNumberFromMapping(mapping m, int index)
{
  int managerNumber = -1;
  if (strpos((string)mappingGetKey(m, index), \"data_hdb\") >= 0)
  {
    // TFS 74442: No -1 any more ...
    managerNumber = (int)mappingGetValue(m, index);
  }
  return managerNumber;
}

saveManagers()
{
  dyn_anytype mKey;
  string linkdpe;
  int i;
  dyn_int di;
  dyn_string ds;
  int j, k, pos;
  bool bExistsMonitoredManagers, bOK;
  int iType, weight;
  dyn_string dsdpe, dslimit;
  dyn_int dsweight;

  mKey=  mappingKeys( mNum );

  dpGet($System+ \"_MonitoredManagers.ImportanceSystemDp.Dpe:_original.._value\", dsdpe,
        $System+ \"_MonitoredManagers.ImportanceSystemDp.Importance:_original.._value\", dsweight,
        $System+ \"_MonitoredManagers.ImportanceSystemDp.Limit:_original.._value\", dslimit);

  for ( i= 1; i<=dynlen( mKey); i++)
  {
    bool bDisabled;
    linkdpe = mKey[i];

//    DebugN(i,linkdpe,  mNum[linkdpe], mWeight[linkdpe],mBLink0[linkdpe],mBLink1[linkdpe] ,
//            mBAlert[linkdpe],mSAlertClass[linkdpe],mDsLinkInformation[linkdpe],  mState[linkdpe], mName[linkdpe]);

    ds = mDsLinkInformation[linkdpe];

//    DebugN(linkdpe, ds[1], ds[2], mWeight[linkdpe]);
//    DebugN(linkdpe, ds[3], \"Link0\",  mSAlertClass[linkdpe], mBLink0[linkdpe]);
//    DebugN(linkdpe, ds[3], \"Link1\",  mSAlertClass[linkdpe], mBLink1[linkdpe]);
//    DebugN(linkdpe, ds[4], \"Link0_2\",  mSAlertClass[linkdpe], mBLink0[linkdpe]);
//    DebugN(linkdpe, ds[4], \"Link1_2\",  mSAlertClass[linkdpe], mBLink1[linkdpe]);

    weight = mWeight[linkdpe];
    bDisabled = (weight < 0);

//    DebugN(linkdpe,   mState[linkdpe],  ds[1], mDsLinkInformation[linkdpe]);

    if (   mState[linkdpe] == \"INSERT\" ||   mState[linkdpe]== \"SHOW\")
    {
      if ( ds[1] != \"\")
      {
        //[\"_MonitoredManagers.ImportanceManager.Ui\"][\"9\"][\"999\"]
        dpGet( ds[1] +\":_online.._value\", di);   //_MonitoredManagers.ImportanceManager.Ui
        pos =  ds[2];                            // #8 -> \"9\"
        if (pos < 1 || pos > DIST_MAX)                // safety check
          return;
        di[pos] =  mWeight[linkdpe];             // = 999
        dpSet( ds[1] +\":_original.._value\", di);   //_MonitoredManagers.ImportanceManager.Ui


        bExistsMonitoredManagers = TRUE;
      }
      else
        bExistsMonitoredManagers = FALSE;


      if (ds[3]!= \"\" && !dpExists($System+ds[3]))
      {
        if (getSystemName() != $System)
          continue;

        dpCreate(ds[3], \"_ManagerConnections\");  // System missing !!!!!
      }
      if (ds[4]!= \"\" && !dpExists($System+ds[4]))
      {
        if (getSystemName() != $System)
          continue;

        dpCreate(ds[4], \"_ManagerConnections\");  // System missing !!!!!
      }
      if (dynlen( ds) >= 7 && ds[7]!= \"\" && !dpExists($System+ds[7]))
      {
        if (getSystemName() != $System)
          continue;

        dpCreate(ds[7], \"_ManagerConnections\");  // System missing !!!!!
      }
      if (dynlen( ds) >= 8 && ds[8]!= \"\" && !dpExists($System+ds[8]))
      {
        if (getSystemName() != $System)
          continue;

        dpCreate(ds[8], \"_ManagerConnections\");  // System missing !!!!!
      }

      // TFS 4558: only change implementation of alarm configuration for archives
      if (strpos(linkdpe, \"data_hdb\") >= 0)
      {
        int managerNumber = getManagerNumberFromMapping(mNum, i);
        bDisabled = !mBAlert[linkdpe];

        setAlertOnArchiveState(sov_getFullqualifiedArchiveStateDpe(managerNumber), mSAlertClass[linkdpe], bDisabled);

        if (ds[4] != \"\") // REDU
          setAlertOnArchiveState(sov_getFullqualifiedArchiveStateDpe(managerNumber, true), mSAlertClass[linkdpe], bDisabled);
      }
      else
      {
        // unchanged original implementation
        checkAndSetAlert( mBLink0[linkdpe], $System+ds[3]+\".Link0\", mSAlertClass[linkdpe], bDisabled, \"\");
        checkAndSetAlert( mBLink1[linkdpe], $System+ds[3]+\".Link1\", mSAlertClass[linkdpe], bDisabled, \"\");

        if ( ds[4] != \"\")
        {
          checkAndSetAlert( mBLink0[linkdpe], $System+ds[4]+\".Link0\", mSAlertClass[linkdpe], bDisabled, \"\");
          checkAndSetAlert( mBLink1[linkdpe], $System+ds[4]+\".Link1\", mSAlertClass[linkdpe], bDisabled, \"\");
        }

        if ( dynlen( ds) >= 7 && ds[7] != \"\")
        {
          checkAndSetAlert( mBLink0[linkdpe], $System+ds[7]+\".Link0\", mSAlertClass[linkdpe], bDisabled, \"\");
          checkAndSetAlert( mBLink1[linkdpe], $System+ds[7]+\".Link1\", mSAlertClass[linkdpe], bDisabled, \"\");
        }

        if ( dynlen( ds) >= 8 && ds[8] != \"\")
        {
          checkAndSetAlert( mBLink0[linkdpe], $System+ds[8]+\".Link0\", mSAlertClass[linkdpe], bDisabled, \"\");
          checkAndSetAlert( mBLink1[linkdpe], $System+ds[8]+\".Link1\", mSAlertClass[linkdpe], bDisabled, \"\");
        }
      }

      if (!bExistsMonitoredManagers)        // just _managerConnections
      {
        int pos;
        string dpe ;

        dpe = $System+ds[3]+\".Link0\";
        pos = dynContains (  dsdpe, dpe);


        if ( mBLink0[linkdpe] || weight>0)       // active -> add or replace
        {
          if ( pos <= 0)
            pos = dynlen( dsdpe) +1;

          dsweight[pos] = weight;
          dsdpe[pos] = dpe;
          dslimit[pos]=\"bool main(bool a){return a;}\";
        }
        else if (pos > 0)            // delete if necessary
        {
          dynRemove(  dsweight, pos);
          dynRemove(  dsdpe, pos);
          dynRemove(  dslimit, pos);
        }

        dpe = $System+ds[4]+\".Link1\";
        pos = dynContains (  dsdpe, dpe);
        if ( mBLink1[linkdpe])
        {
          if ( pos <= 0)
            pos = dynlen( dsdpe) +1;

          dsweight[pos] = weight;
          dsdpe[pos] = dpe;
          dslimit[pos]=\"bool main(bool a){return a;}\";
        }
        else if (pos > 0)
        {
          dynRemove(  dsweight, pos);
          dynRemove(  dsdpe, pos);
          dynRemove(  dslimit, pos);
        }
      }
    }


    setTrace(0);

    // if delete:
    //
    // remove from _monitoredManagers
    // disable alert on linkdpe
    // do not delete likdpe because manager ist connected
    if (   mState[linkdpe] == \"DELETE\")
    {
      if ( ds[1] != \"\")
      {
        //[\"_MonitoredManagers.ImportanceManager.Ui\"][\"9\"][\"999\"]
        dpGet( ds[1] +\":_online.._value\", di);   //_MonitoredManagers.ImportanceManager.Ui
        pos =  ds[2];                            // #8 -> \"9\"
        if (pos < 0 || pos > DIST_MAX)                // safety check
          return;
        di[pos] =  0;             // = 999

        for (int j=dynlen(di); j>1; j--)    // remove or skip
        {
          if ( di[j] == 0)
            dynRemove(di, j);
          else
            j = 0;
        }
        dpSet(ds[1] +\":_original.._value\", di);   //_MonitoredManagers.ImportanceManager.Ui

        bExistsMonitoredManagers = TRUE;
      }
      else
        bExistsMonitoredManagers = FALSE;

      if (ds[3]!= \"\" && dpExists($System+ds[3]))
      {
        string dpe = $System+ds[3];
        dpGet(dpe+\".Link0:_alert_hdl.._type\",iType);
        if ( iType != 0)
          dpDeactivateAlert(dpe+\".Link0\", bOK);
        dpGet(dpe+\".Link1:_alert_hdl.._type\",iType);
        if ( iType != 0)
          dpDeactivateAlert(dpe+\".Link1\", bOK);
      }
      if (ds[4]!= \"\" && dpExists($System+ds[4]))         // redundant partner
      {
        string dpe = $System+ds[4];
        dpGet(dpe+\".Link0:_alert_hdl.._type\",iType);
        if ( iType != 0)
          dpDeactivateAlert(dpe+\".Link0\", bOK);
        dpGet(dpe+\".Link1:_alert_hdl.._type\",iType);
        if ( iType != 0)
          dpDeactivateAlert(dpe+\".Link1\", bOK);
      }
      if (dynlen( ds) >= 7 &&ds[7]!= \"\" && dpExists($System+ds[7]))         // redundant partner
      {
        string dpe = $System+ds[7];
        dpGet(dpe+\".Link0:_alert_hdl.._type\",iType);
        if ( iType != 0)
          dpDeactivateAlert(dpe+\".Link0\", bOK);
        dpGet(dpe+\".Link1:_alert_hdl.._type\",iType);
        if ( iType != 0)
          dpDeactivateAlert(dpe+\".Link1\", bOK);
      }
      if (dynlen( ds) >= 8 && ds[8]!= \"\" && dpExists($System+ds[8]))         // redundant partner
      {
        string dpe = $System+ds[8];
        dpGet(dpe+\".Link0:_alert_hdl.._type\",iType);
        if ( iType != 0)
          dpDeactivateAlert(dpe+\".Link0\", bOK);
        dpGet(dpe+\".Link1:_alert_hdl.._type\",iType);
        if ( iType != 0)
          dpDeactivateAlert(dpe+\".Link1\", bOK);
      }

       if (!bExistsMonitoredManagers)        // just _managerConnections
       {
         int pos;
         string dpe ;

         dpe = $System+ds[3]+\".Link0\";
         pos = dynContains (  dsdpe, dpe);

         if (pos > 0)
         {
           dynRemove(  dsweight, pos);
           dynRemove(  dsdpe, pos);
           dynRemove(  dslimit, pos);
         }

         dpe = $System+ds[4]+\".Link1\";
         pos = dynContains (  dsdpe, dpe);
         if (pos > 0)
         {
           dynRemove(  dsweight, pos);
           dynRemove(  dsdpe, pos);
           dynRemove(  dslimit, pos);
         }
       }
    }
  } //for

 dpSet($System+ \"_MonitoredManagers.ImportanceSystemDp.Dpe:_original.._value\", dsdpe,
     $System+ \"_MonitoredManagers.ImportanceSystemDp.Importance:_original.._value\", dsweight,
     $System+ \"_MonitoredManagers.ImportanceSystemDp.Limit:_original.._value\", dslimit);


}

checkAndSetAlert( bool bLink, string dpe, string sAlertClass, bool bDisabled, langString sAlertText = \"\")
{
   int iType;
   bool bOK;

   if ( sAlertText  == \"\")
   {
     dyn_string ds;
     int i;
     for ( i=1; i<= getNoOfLangs(); i++)
     {
        ds[i] = getCatStr(\"_errors\", \"00039\", i-1);
     }
     sAlertText = ds;
   }

   if (dpExists(dpe))     // wenn Alarm aktiv _1.Link0!!
   {
     dpGet(dpe+\":_alert_hdl.._type\",iType);
      if ( iType != 0)
         dpDeactivateAlert(dpe, bOK);

     if ( bLink )
     {
       if ( iType != 12)
           dpSetWait(dpe+\":_alert_hdl.._type\",12);
       dpSetWait(dpe+\":_alert_hdl.._class\",sAlertClass,
                 dpe+\":_alert_hdl.._text0\",sAlertText,
                 dpe+\":_alert_hdl.._text1\",\"\",
                 dpe+\":_alert_hdl.._ok_range\",1,
                 dpe+\":_alert_hdl.._orig_hdl\",FALSE);
       dpSetWait(dpe+\":_alert_hdl.._active\",!bDisabled);
      }
      else
         dpSetWait(dpe+\":_alert_hdl.._type\",0);

   }
}

langString getConnectionLostErrorTexts(bool empty)
{
  dyn_string dsText;
  langString lsText;

  for (int i = 1; i <= getNoOfLangs(); i++)
  {
    dsText[i] = empty ? \"\" : getCatStr(\"_errors\", \"00039\", i - 1);
  }

  lsText = dsText;
  return lsText;
}

void setAlertOnArchiveState(string dpe, string alertClass, bool disabled)
{
  if (!dpExists(dpe))
    return;

  string alertHandlerCameTextDpe = dpe + \":_alert_hdl.1._text\";
  langString emptyText = getConnectionLostErrorTexts(true);
  langString connectionLostText = getConnectionLostErrorTexts(false);

  if (dpExists(alertHandlerCameTextDpe))
  {
    // if alarm already exists, use existing error text
    dpGet(alertHandlerCameTextDpe, connectionLostText);
  }

  // ensure alarm type is DPCONFIG_ALERT_NONBINARYSIGNAL
  int alertType;
  dpGet(dpe + \":_alert_hdl.._type\", alertType);

  if (alertType != 0)
  {
    bool deactivated; // ignore result
    dpDeactivateAlert(dpe, deactivated);
  }

  if (alertType != DPCONFIG_ALERT_NONBINARYSIGNAL)
  {
    dpSetWait(dpe + \":_alert_hdl.._type\", DPCONFIG_ALERT_NONBINARYSIGNAL);
  }

  // configure alarm
  dpSetWait(
      dpe + \":_alert_hdl.._min_prio\", \"\\0\",
      dpe + \":_alert_hdl.._active\", !disabled,
      dpe + \":_alert_hdl.._orig_hdl\", false,
      dpe + \":_alert_hdl.._multi_instance\", false,
      dpe + \":_alert_hdl.._impulse\", false,
      dpe + \":_alert_hdl.1._type\", DPDETAIL_RANGETYPE_MINMAX,
      dpe + \":_alert_hdl.1._l_limit\", minINT(),
      dpe + \":_alert_hdl.1._u_limit\", 0,
      dpe + \":_alert_hdl.1._l_incl\", 1,
      dpe + \":_alert_hdl.1._u_incl\", 1,
      dpe + \":_alert_hdl.1._class\", alertClass,
      alertHandlerCameTextDpe, connectionLostText,
      dpe + \":_alert_hdl.1._hyst_type\", 0,
      dpe + \":_alert_hdl.1._l_hyst_limit\", minINT(),
      dpe + \":_alert_hdl.1._u_hyst_limit\", 0,
      dpe + \":_alert_hdl.1._went_text\", emptyText,
      dpe + \":_alert_hdl.1._status64_pattern\", 0x0,
      dpe + \":_alert_hdl.2._type\", DPDETAIL_RANGETYPE_MINMAX,
      dpe + \":_alert_hdl.2._l_limit\", 0,
      dpe + \":_alert_hdl.2._u_limit\", maxINT(),
      dpe + \":_alert_hdl.2._l_incl\", 0,
      dpe + \":_alert_hdl.2._u_incl\", 1,
      dpe + \":_alert_hdl.2._text\", emptyText,
      dpe + \":_alert_hdl.2._hyst_type\", 0,
      dpe + \":_alert_hdl.2._l_hyst_limit\", 0,
      dpe + \":_alert_hdl.2._u_hyst_limit\", maxINT(),
      dpe + \":_alert_hdl.2._went_text\", emptyText,
      dpe + \":_alert_hdl.2._status64_pattern\", 0x0);
}


saveConnections()
{
  dyn_anytype mKey;
  string linkdpe;
  int i;
  dyn_int di;
  dyn_string ds;
  int j, k, pos;
  bool bExistsMonitoredManagers, bOK;
  int iType, weight;
  dyn_string dsdpe, dslimit;
  dyn_int dsweight;

  mKey=  mappingKeys( cNum );

  dpGet($System+ \"_MonitoredManagers.ImportanceSystemDp.Dpe:_original.._value\", dsdpe,
        $System+ \"_MonitoredManagers.ImportanceSystemDp.Importance:_original.._value\", dsweight,
        $System+ \"_MonitoredManagers.ImportanceSystemDp.Limit:_original.._value\", dslimit);

//  DebugN(mKey);
//  dpGet(\"_MonitoredManagers.ImportanceManager.Dist\", ds);
//  for (int i=1; i<= 15 && i < dynlen(ds);i++)
//    DebugN(\"Monitored Managers 0\", i, ds[i]);
//  setTrace(1);


  for ( i= 1; i<=dynlen( mKey); i++)
  {
    bool bDisabled;
    linkdpe = mKey[i];

//    DebugN(i,linkdpe,  cNum[linkdpe], cWeight[linkdpe],cBLink0[linkdpe],cBLink1[linkdpe] ,
//            cBAlert[linkdpe],cSAlertClass[linkdpe],cDsLinkInformation[linkdpe],  cState[linkdpe], cName[linkdpe]);

    ds = cDsLinkInformation[linkdpe];

//    DebugN(linkdpe, ds[1], ds[2], cWeight[linkdpe]);
//    DebugN(linkdpe, ds[3], \"Link0\",  cSAlertClass[linkdpe], cBLink0[linkdpe]);
//    DebugN(linkdpe, ds[3], \"Link1\",  cSAlertClass[linkdpe], cBLink1[linkdpe]);
//    DebugN(linkdpe, ds[4], \"Link0_2\",  cSAlertClass[linkdpe], cBLink0[linkdpe]);
//    DebugN(linkdpe, ds[4], \"Link1_2\",  cSAlertClass[linkdpe], cBLink1[linkdpe]);
//    DebugN(\"Weight\", weight, cWeight);

    weight = cWeight[linkdpe];
    bDisabled = (weight < 0);

    if (   cState[linkdpe] == \"INSERT\" ||   cState[linkdpe]== \"SHOW\")
    {
      if ( ds[1] != \"\")
      {
          //[\"_MonitoredManagers.ImportanceManager.Ui\"][\"9\"][\"999\"]
          dpGet( $System+ds[1] +\":_online.._value\", di);   //_MonitoredManagers.ImportanceManager.Dist
          pos =  (int)ds[2] ;                            // #8 -> \"9\"
          if (pos < 1 || pos > DIST_MAX)                // safety check
            return;
          di[pos] =  cWeight[linkdpe];             // = 999

          //DebugN(\"dpSet!\", $System+ds[1], pos, di);
          dpSet( $System+ds[1] +\":_original.._value\", di);   //_MonitoredManagers.ImportanceManager.Dist

          bExistsMonitoredManagers = TRUE;
        }
        else
           bExistsMonitoredManagers = FALSE;

        if (ds[3]!= \"\" && !dpExists($System+ds[3]))
          dpCreate(ds[3], \"_ManagerConnections\", getSystemId($System));
        if (ds[4]!= \"\" && !dpExists($System+ds[4]))
          dpCreate(ds[4], \"_ManagerConnections\", getSystemId($System));
        if (dynlen(ds)>=7 && ds[7]!= \"\" && !dpExists($System+ds[7]))
          dpCreate(ds[7], \"_ManagerConnections\", getSystemId($System));
        if (dynlen(ds)>=8 && ds[8]!= \"\" && !dpExists($System+ds[8]))
          dpCreate(ds[8], \"_ManagerConnections\", getSystemId($System));

       if (ds[3] != \"\" )     // wenn Alarm aktiv _1.Link0!!
       {
          checkAndSetAlert( cBLink0[linkdpe], $System+ds[3]+\".Link0\", cSAlertClass[linkdpe],FALSE, \"\");
          checkAndSetAlert( cBLink1[linkdpe], $System+ds[3]+\".Link1\", cSAlertClass[linkdpe],FALSE, \"\");

       }

       if (ds[4] != \"\" )     // wenn Alarm aktiv _1.Link0!!
       {
          checkAndSetAlert( cBLink0[linkdpe], $System+ds[4]+\".Link0\", cSAlertClass[linkdpe],FALSE, \"\");
          checkAndSetAlert( cBLink1[linkdpe], $System+ds[4]+\".Link1\", cSAlertClass[linkdpe],FALSE, \"\");
       }

       if (dynlen( ds) >= 7 && ds[7] != \"\" )     // wenn Alarm aktiv _1.Link0!!
       {
          checkAndSetAlert( cBLink0[linkdpe], $System+ds[7]+\".Link0\", cSAlertClass[linkdpe],FALSE, \"\");
          checkAndSetAlert( cBLink1[linkdpe], $System+ds[7]+\".Link1\", cSAlertClass[linkdpe],FALSE, \"\");
       }

       if (dynlen( ds) >= 8 && ds[8] != \"\" )     // wenn Alarm aktiv _1.Link0!!
       {
          checkAndSetAlert( cBLink0[linkdpe], $System+ds[8]+\".Link0\", cSAlertClass[linkdpe],FALSE, \"\");
          checkAndSetAlert( cBLink1[linkdpe], $System+ds[8]+\".Link1\", cSAlertClass[linkdpe],FALSE, \"\");
       }


       if (!bExistsMonitoredManagers)        // just _managerConnections
       {
           int pos;
           string dpe ;


           dpe = $System+ds[3]+\".Link0\";
           pos = dynContains (  dsdpe, dpe);

           if ( cBLink0[linkdpe])       // active -> add or replace
           {
             if ( pos <= 0)
                pos = dynlen( dsdpe) +1;

             dsweight[pos] = weight;
             dsdpe[pos] = dpe;
             dslimit[pos]=\"bool main(bool a){return a;}\";
           }
           else if (pos > 0)            // delete if necessary
           {
             dynRemove(  dsweight, pos);
             dynRemove(  dsdpe, pos);
             dynRemove(  dslimit, pos);
           }

           dpe = $System+ds[4]+\".Link1\";
           pos = dynContains (  dsdpe, dpe);
           if ( cBLink1[linkdpe])
           {
             if ( pos <= 0)
                pos = dynlen( dsdpe) +1;

             dsweight[pos] = weight;
             dsdpe[pos] = dpe;
             dslimit[pos]=\"bool main(bool a){return a;}\";
            }
            else if (pos > 0)
            {
             dynRemove(  dsweight, pos);
             dynRemove(  dsdpe, pos);
             dynRemove(  dslimit, pos);
            }
       }
    }



    // if delete:
    //
    // remove from _monitoredManagers
    // disable alert on linkdpe
    // do not delete likdpe because manager ist connected

    if (   cState[linkdpe] == \"DELETE\")
    {
      if ( ds[1] != \"\")
      {
          //[\"_MonitoredManagers.ImportanceManager.Ui\"][\"9\"][\"999\"]
          dpGet( $System+ds[1] +\":_online.._value\", di);   //_MonitoredManagers.ImportanceManager.Ui
          pos =  (int)ds[2];
          if (pos < 0 || pos > DIST_MAX)                // safety check
            return;
          di[pos] =  0;             // = 999

          for (int j=dynlen(di); j>1; j--)    // remove or skip
          {
             if ( di[j] == 0)
               dynRemove(di, j);
             else
               j = 0;
          }
          dpSet( $System+ds[1] +\":_original.._value\", di);   //_MonitoredManagers.ImportanceManager.Ui

          bExistsMonitoredManagers = TRUE;
        }
        else
           bExistsMonitoredManagers = FALSE;

        if (ds[3]!= \"\" && dpExists($System+ds[3]))
        {
         string dpe = $System+ds[3];
         dpGet(dpe+\".Link0:_alert_hdl.._type\",iType);
         if ( iType != 0)
             dpDeactivateAlert(dpe+\".Link0\", bOK);
         dpGet(dpe+\".Link1:_alert_hdl.._type\",iType);
         if ( iType != 0)
            dpDeactivateAlert(dpe+\".Link1\", bOK);
        }
        if (ds[4]!= \"\" && dpExists($System+ds[4]))         // redundant partner
        {
          string dpe = $System+ds[4];
          dpGet(dpe+\".Link0:_alert_hdl.._type\",iType);
          if ( iType != 0)
             dpDeactivateAlert(dpe+\".Link0\", bOK);
          dpGet(dpe+\".Link1:_alert_hdl.._type\",iType);
          if ( iType != 0)
             dpDeactivateAlert(dpe+\".Link1\", bOK);
       }

        if (dynlen( ds) >= 7 && ds[7]!= \"\" && dpExists($System+ds[7]))
        {
          string dpe = $System+ds[7];
          dpGet(dpe+\".Link0:_alert_hdl.._type\",iType);
          if ( iType != 0)
             dpDeactivateAlert(dpe+\".Link0\", bOK);
          dpGet(dpe+\".Link1:_alert_hdl.._type\",iType);
          if ( iType != 0)
             dpDeactivateAlert(dpe+\".Link1\", bOK);
       }
        if (dynlen( ds) >= 8 && ds[8]!= \"\" && dpExists($System+ds[8]))         // redundant partner
        {
          string dpe = $System+ds[8];
          dpGet(dpe+\".Link0:_alert_hdl.._type\",iType);
          if ( iType != 0)
             dpDeactivateAlert(dpe+\".Link0\", bOK);
          dpGet(dpe+\".Link1:_alert_hdl.._type\",iType);
          if ( iType != 0)
             dpDeactivateAlert(dpe+\".Link1\", bOK);
       }



       if (!bExistsMonitoredManagers)        // just _managerConnections
       {
           int pos;
           string dpe ;


           dpe = $System+ds[3]+\".Link0\";
           pos = dynContains (  dsdpe, dpe);

           if (pos > 0)
           {
             dynRemove(  dsweight, pos);
             dynRemove(  dsdpe, pos);
             dynRemove(  dslimit, pos);
           }

           dpe = $System+ds[4]+\".Link1\";
           pos = dynContains (  dsdpe, dpe);
            if (pos > 0)
           {
             dynRemove(  dsweight, pos);
             dynRemove(  dsdpe, pos);
             dynRemove(  dslimit, pos);
           }

       }
    }
  }

//  setTrace(0);
//  dpGet(\"_MonitoredManagers.ImportanceManager.Dist\", ds);
//  for (int i=1; i<= 15 && i < dynlen(ds);i++)
//    DebugN(\"Monitored Managers 3\", i, ds[i]);

//  DebugN( dsdpe, dsweight, dslimit);

 dpSet($System+ \"_MonitoredManagers.ImportanceSystemDp.Dpe:_original.._value\", dsdpe,
     $System+ \"_MonitoredManagers.ImportanceSystemDp.Importance:_original.._value\", dsweight,
     $System+ \"_MonitoredManagers.ImportanceSystemDp.Limit:_original.._value\", dslimit);


}
















" 0
 E E E
13 27
"buCancle"
""
1 380 645 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
27 0 0 0 27 0
E E E
0
4
LANG:10001 31 Discard changes and close panel
LANG:10004 27 放弃更改并关闭面板
LANG:10000 42 Änderungen verwerfen und Panel schließen
LANG:10027 66 Отменить изменения и закрыть панель

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  378 643 466 671

T 
4
LANG:10001 6 Cancel
LANG:10004 6 取消
LANG:10000 9 Abbrechen
LANG:10027 16 Отменить
"main()
{
removeGlobals();
  PanelOff();
}" 0
 E E E
28 67
"Tab2"
""
1 52.81181619256017 28 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
38 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  8 8 467 622
E3 "#A" 4
LANG:10001 7 Manager
LANG:10004 9 管理器
LANG:10000 7 Manager
LANG:10027 16 Менеджер
1 "vision\\MonitoredManagers_Managers.pnl" 3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
1
"$System""$System"

"#B" 4
LANG:10001 10 Datapoints
LANG:10004 2 DP
LANG:10000 11 Datenpunkte
LANG:10027 28 Точки данных (DP)
1 "vision\\MonitoredManagers_DPE.pnl" 3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
1
"$System""$System"

"DistConnections" 4
LANG:10001 23 Distributed Connections
LANG:10004 15 分布式连接
LANG:10000 17 Dist Verbindungen
LANG:10027 49 Распределенные соединения
1 "vision\\MonitoredManagers_MonitoredConnections.pnl" 3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
1
"$System""$System"


13 68
"cmdHelp"
""
1 10 645 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
39 0 0 0 112 0
E E E
0
4
LANG:10001 16 Open online help
LANG:10004 18 打开在线帮助
LANG:10000 20 Online Hilfe öffnen
LANG:10027 14 Справка

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  8 643 96 671

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main()
{
 std_help(\"MonitoredManagers\", TRUE);
}
" 0
 E E E
1 69 0 "" 0
0
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
3 0 "PANEL_REF0" -1
"layoutAlignment" "AlignCenter"
"" ""
"objects_parts/STD_OBJECTS/ButtonBarBackground.pnl" 5 640 T 40 1.020040080160321 0 1 -15.10020040080162 -5
0
0
