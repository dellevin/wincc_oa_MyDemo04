V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 729 316 N "_3DFace" 1
"$msg"
E E E E E 1 -1 -1 0  24.27093968121653 18.91666666666671
""0  1
E "#uses \"classes/nodeRED/NodeRed\"
#uses \"classes/nodeRED/NodeRedWizard\"
#uses \"pmon\"
#uses \"classes/userManagement/UserManagementHooks\"

bool mouseOver = FALSE;
string errMsg;
enum passwordState
{
  OK = 0,
  NOT_OK = 1,
  MISMATCH = 2,
  UNDEFINED = 99
};
passwordState theState = passwordState::UNDEFINED;

//--------------------------------------------------------------------------------
/**
  * @brief Function which returns if the mouse cursore is above the given rectangle
  * @param x1 is the upper left X coordinate
  * @param y1 is the upper left Y coordinate
  * @param x2 is the buttom right X coordinate
  * @param y2 is the buttom right Y coordinate
*/
bool mouseNotOver(const int &x1, const int &y1, const int &x2, const int &y2)
{
  int mouseX, mouseY;
  mouseOver = TRUE;

  while (1)
  {
    delay(0, 100);
    getCursorPosition(mouseX, mouseY);

    if ( !inRange(mouseX, x1, x2) && !inRange(mouseY, y1, y2) )
    {
      return mouseOver = FALSE;
    }
  }

  return TRUE;
}

//--------------------------------------------------------------------------------
/**
  * @brief Function which returns if the given value is in the range of the given limits
  * @param val is the given value
  * @param min is minimum limit
  * @param max is maximum limit
  * @param delta is delta which is used for comparison
*/
bool inRange(const int &val, const int &min, const int &max, float delta = 0.0)
{
  return ( (val > min - min * delta) && (val < max + max * delta) );
}

passwordState passwordCheck(const string &password, bool mismatchOnly = FALSE)
{
  if ( password.isEmpty() )
    return passwordState::UNDEFINED;

  if ( mismatchOnly || !isDollarDefined(\"$new\") || !getDollarValue(\"$new\") )
  {
    if ( password != rePwd.text )
    {
      errMsg = getCatStr(\"general\", \"pass_differ\");
      return passwordState::MISMATCH;
    }

    errMsg = \"\";
    return passwordState::OK;
  }

  if ( !UserManagementHooks::checkPasswordQuality(password, errMsg) )
    return passwordState::NOT_OK;

  if ( password != rePwd.text )
  {
    errMsg = getCatStr(\"general\", \"pass_differ\");
    return passwordState::MISMATCH;
  }

  errMsg = \"\";
  return passwordState::OK;
}
" 0
 4
"CBRef" "1"
"EClose" "main()
{
  PanelOffReturn(makeDynFloat(), makeDynString());
}
" 0

"type" "WF"
"dpi" "96"
2 1 0 0 0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
1 35 3 "" 1
0
14 1
"name"
""
1 171 102.9655172413795 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
0 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignNone"
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
0  169 96 682.9999999999903 124.0000000000011
3 "0s" 0 0 0 0 0 -1  E "main()
{
  if ( $msg == \"proxy\" )
    this.text(getCatStr(\"nodeRed\", \"proxyExample\"));  // indicate a proxy format to be set
}
" 0
 E
14 2
"pwd"
""
1 171 144.9655172413795 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
1 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  if ( $msg != \"nodeRedUser\" )
    return;

  theState = passwordCheck(newText);
  switch ( theState )
  {
    case passwordState::NOT_OK:
    {
      setMultiValue(this, \"toolTipText\", errMsg,
                    this, \"backCol\", \"WF_Error\",
                    \"rePwd\", \"backCol\", \"WF_Error\",
                    \"rePwd_state\", \"fill\", \"[solid]\");
      break;
    }

    case passwordState::MISMATCH:
    {
      setMultiValue(this, \"toolTipText\", \"\",
                    this, \"backCol\", \"WF_Info\",
                    \"rePwd\", \"backCol\", \"WF_Error\",
                    \"rePwd_state\", \"fill\", \"[pattern,[tile,any,nodeRed/icon/not_ok.png]]\");
      break;
    }

    case passwordState::OK:
    {
      setMultiValue(this, \"toolTipText\", errMsg,
                    this, \"backCol\", \"WF_Info\",
                    \"rePwd\", \"backCol\", \"WF_Info\",
                    \"rePwd_state\", \"fill\", \"[pattern,[tile,any,nodeRed/icon/ok.png]]\");
      break;
    }

    case passwordState::UNDEFINED:
    default:
    {
      setMultiValue(this, \"toolTipText\", \"\",
                    this, \"backCol\", \"\",
                    \"rePwd\", \"backCol\", \"\",
                    \"rePwd_state\", \"fill\", \"[solid]\");
    }
  }

  Create.enabled(theState == passwordState::OK ? TRUE : FALSE);
  setMultiValue(\"rePwd\", \"toolTipText\", (theState == passwordState::MISMATCH ? errMsg : \"\"),
                \"rePwd_state\", \"toolTipText\", (theState != passwordState::MISMATCH ? errMsg : \"\"));
}"
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
0  169 138 683.0000000000206 166.0000000000012
3 "0S" 0 0 0 0 0 -1  E "main()
{
  if ( $msg == \"proxy\" )
    this.visible(FALSE);
  else if ( $msg == \"hostCert\" )
    this.format(\"[0s,,,AlignLeft]\");
}" 0
 E
13 6
"Create"
"WF"
1 416.9457364341098 339.41379310345 E E E 1 E 1 E N "WF_Text" E N "_Button" E E
 E E
5 0 0 0 16777220 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"minimumSize" "80 32"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
"focusPolicy" "NoFocus"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  546 269 628.9999999999992 304.0000000000008

T 
4
LANG:10001 6 Create
LANG:10004 6 创建
LANG:10000 9 Erstellen
LANG:10027 6 Create
"main(mapping event)
{
  switch ($msg)
  {
    case \"webSocket\":
    {
      if ( checkPassword(getUserId(name.text), pwd.text) )
      {
        PanelOffReturn(makeDynFloat(1), makeDynString(name.text));
        break;
      }
      else
      {
        NodeRed::showErrMsg(getCatStr(\"nodeRed\", \"wrongUser\"));
        return;
      }
    }

    case \"nodeRedUser\":
    {
      if ( (name.text == \"\") || (pwd.text == \"\") )
      {
        NodeRed::showErrMsg(getCatStr(\"nodeRed\", \"emptyUserInfo\"));
        return;
      }

      if ( pwd.text != rePwd.text )
      {
        NodeRed::showErrMsg(getCatStr(\"general\", \"pass_differ\"));
        return;
      }

      PanelOffReturn(makeDynFloat(1), makeDynString(name.text, pwd.text, admin.state(0)));
      break;
    }

    case \"proxy\":
    {
      if ( name.text == \"\" )
      {
        NodeRed::showErrMsg(getCatStr(\"nodeRed\", \"proxyNotSet\"));
        return;
      }

      PanelOffReturn(makeDynFloat(1), makeDynString(name.text));
      break;
    }

    case \"pmonUser\":
    {
      if ( (name.text == \"\") || (pwd.text == \"\") )
      {
        NodeRed::showErrMsg(getCatStr(\"nodeRed\", \"emptyUserInfo\"));
        return;
      }

      int iErr;
      paVerifyPassword(PROJ, name.text, pwd.text, iErr);
      if ( iErr )
        NodeRed::showErrMsg(getCatStr(\"nodeRed\", \"wrongUser\"));
      else
        PanelOffReturn(makeDynFloat(1), makeDynString(name.text, pwd.text));

      break;
    }

    case \"hostCert\":
    {
      if ( !isfile(name.text) || !isfile(pwd.text) )
      {
        NodeRed::showErrMsg(getCatStr(\"nodeRed\", \"hostCerNotSet\"));
        return;
      }

      PanelOffReturn(makeDynFloat(1), makeDynString(\"file:\" + name.text, \"file:\" + pwd.text));
      break;
    }

    default:
    {
      PanelOffReturn(makeDynFloat(), makeDynString());
    }
  }
}
" 0
 E E "main()
{
  if ( $msg == \"proxy\" )
  {
    this.toolTipText(getCatStr(\"nodeRed\", \"addProxy\"));
    this.text(getCatStr(\"nodeRed\", \"add\"));
  }
  else if ( $msg == \"pmonUser\" )
  {
    this.toolTipText(\"OK\");
    this.text(\"OK\");
  }
  else if ( $msg == \"hostCert\" )
  {
    this.text(getCatStr(\"nodeRed\", \"add\"));
    this.toolTipText(getCatStr(\"nodeRed\", \"add\"));
  }
  else if ( $msg == \"nodeRedUser\" )
  {
    this.enabled(FALSE);
  }
  else
  {
    this.toolTipText(getCatStr(\"nodeRed\", this.name + $msg));
  }
}
" 0

29 7
"label_name"
""
1 22.1572052401747 -96.99999999999997 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
6 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

6
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string user directory"
"minimumSize" "150 26"
"maximumSize" "150 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  15 98 163.9999999999995 123
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));
  if ( $msg == \"proxy\" )
    this.text(getCatStr(\"nodeRed\", \"label_proxy\"));
  else if ( $msg == \"hostCert\" )
    this.text(getCatStr(\"nodeRed\", \"label_hostCert\"));
}
" 0
29 8
"label_pwd"
""
1 22.1572052401747 -54.99999999999997 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
7 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

6
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string user directory"
"minimumSize" "150 26"
"maximumSize" "150 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  15 140 163.9999999999997 165
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name()));
  if ( $msg == \"proxy\" )
    this.visible(FALSE);
  else if ( $msg == \"hostCert\" )
    this.text(getCatStr(\"nodeRed\", \"label_hostKey\"));
}
" 0
32 11
"SPACER1"
""
1 0 271 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
10 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 0 271 541.0000000000184 315.0000000000005 1
32 12
"SPACER2"
""
1 0 245.9999999999999 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
11 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Ignored Expanding"
"layoutAlignment" "AlignNone"
 0 245.9999999999999 728.0000000000265 248.9999999999999 2
13 13
"CancelClose"
"WF"
1 502.9457364341098 339.41379310345 E E E 1 E 1 E N "WF_Text" E N "_Button" E E
 E E
12 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"minimumSize" "80 32"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
"focusPolicy" "NoFocus"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  632 269 714.9999999999992 304.0000000000008

T 
4
LANG:10001 6 Cancel
LANG:10004 6 取消
LANG:10000 9 Abbrechen
LANG:10027 16 Отменить
"main(mapping event)
{
  PanelOffReturn(makeDynFloat(), makeDynString());
}
" 0
 E E "main()
{
  this.toolTipText(getCatStr(\"nodeRed\", this.name));
}" 0

29 17
"configEditorTitle"
""
1 727.9999999999691 1 E E E 1 E 1 E N "_3DText" E N "white" E E
 E E
15 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

11
"text" "string WebSocket"
"wordWrap" "bool TRUE"
"margin" "int 0"
"styleSheet" "string margin-left: 15px;"
"frameShape" "enum 0"
"contextMenuPolicy" "enum 0"
"frameShadow" "enum 16"
"layoutDirection" "enum 0"
"minimumSize" "500 80"
"sizePolicy" "Expanding Minimum"
"layoutAlignment" "AlignNone"
4
LANG:10001 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
0  0 1 727.9999999999691 80.00000000000293
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", $msg));
  if ( isDollarDefined(\"$new\") && (getDollarValue(\"$new\") == \"true\") )
    this.text(getCatStr(\"nodeRed\", \"firstUser\"));
  else if ( isDollarDefined(\"$nga\") && (getDollarValue(\"$nga\") == \"true\") )
    this.text(getCatStr(\"NGA\", $msg));

  this.styleSheet(\"margin-top: 5px; margin-left: 15px; margin-right: 15px; margin-bottom: 5px; border-bottom: 1px black;\");
}
" 0
4 18
"LINE2"
""
1 727.9999999999691 81 E E E 1 E 1 E N "WF_RefDiffLineDark" E N {255,255,255} E E
 E E
16 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E  727.9999999999691 81 0 81
4 19
"LINE3"
""
1 727.9999999999716 0 E E E 1 E 1 E N "black" E N {255,255,255} E E
 E E
17 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E  727.9999999999716 0 0 0
14 21
"rePwd"
""
1 171 181.9655172413795 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
18 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  if ( theState == passwordState::NOT_OK )
    return;

  theState = passwordCheck(pwd.text, TRUE);
  switch ( theState )
  {
    case passwordState::MISMATCH:
    {
      setMultiValue(this, \"backCol\", \"WF_Error\",
                    \"rePwd_state\", \"fill\", \"[pattern,[tile,any,nodeRed/icon/not_ok.png]]\");
      break;
    }

    case passwordState::OK:
    {
      setMultiValue(this, \"backCol\", \"WF_Info\",
                    \"rePwd_state\", \"fill\", \"[pattern,[tile,any,nodeRed/icon/ok.png]]\");
      break;
    }

    case passwordState::UNDEFINED:
    default:
    {
      setMultiValue(this, \"backCol\", \"\",
                    \"rePwd_state\", \"fill\", \"[solid]\");
    }
  }

  setMultiValue(this, \"toolTipText\", errMsg,
                \"rePwd_state\", \"toolTipText\", errMsg);

  Create.enabled( theState == passwordState::OK ? TRUE : FALSE);
}"
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
0  169 175 682.9999999999886 203.0000000000012
3 "0S" 0 0 0 0 0 -1  E "main()
{
  if ( $msg == \"proxy\" || $msg == \"pmonUser\" || $msg == \"hostCert\" )
    this.visible(FALSE);
}
" 0
 E
29 22
"label_rePwd"
""
1 22.15720524017472 -17.99999999999997 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
19 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

6
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string user directory"
"minimumSize" "150 26"
"maximumSize" "150 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  15 177 164 202
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name()));
  if ( $msg == \"proxy\" || $msg == \"pmonUser\" || $msg == \"hostCert\" )
    this.visible(FALSE);
}
" 0
13 23
"fileSelector_name"
"WF"
1 688 100.1739130434782 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
20 0 0 0 0 0
E E E
8
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"minimumSize" "26 26"
"maximumSize" "26 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0  686 96 715 124.9999999999992

P 
4294967295
"pictures/wf/buttons/openfile_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main(mapping event)
{
  string name = this.name();
  strreplace(name, \"fileSelector_\", \"\");
  string path;
  getValue(name, \"text\", path);

  if ( path != \"\" )
    path = NodeRedWizard::definePath(path);
  else
    path = NodeRedWizard::definePath();

  if ( path != \"\" )
    setValue(name, \"text\", path);
}" 0
 E E "main()
{
  if ( $msg != \"hostCert\" )
    this.visible(FALSE);
}" 0

6 28
"rePwd_state"
""
1 530 122 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
25 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
  if ( $msg == \"proxy\" || $msg == \"pmonUser\" || $msg == \"hostCert\" )
    this.visible(FALSE);
}
" 0
 E -1 1 3 2 1 E 0.8333333333333334 0 0.8928571428571431 246.3333333333333 68.07142857142853 1 E 530 122 560 150
20 30
"admin"
"WF"
1 -169.8947368420975 174.526315789475 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
27 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"minimumSize" "26 26"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
"focusPolicy" "NoFocus"
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0  686 212 715 240.9999999999993
1
T 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
0
"main()
{
  if ( $msg == \"proxy\" || $msg == \"pmonUser\" || $msg == \"hostCert\" )
  {
    this.visible(FALSE);
  }
  else if ( isDollarDefined(\"$new\") &&  (getDollarValue(\"$new\") == \"true\") )
  {
    this.enabled(FALSE);
    this.state(0, TRUE);
  }
}
" 0
E29 31
"admin_user"
""
1 579.139737991266 18.99999999999841 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
28 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string Advanced Settings"
"styleSheet" "string "
"minimumSize" "-1 26"
"maximumSize" "-1 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  574 214 681.000000000001 239.0000000000001
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));
  if ( $msg == \"proxy\" || $msg == \"pmonUser\" || $msg == \"hostCert\" )
    this.visible(FALSE);
}
" 0
32 32
"SPACER3"
""
1 271 214 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
29 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 271 214 567.0000000000048 238.9999999999998 1
2 34
"use_cert_help"
""
1 250 20 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
30 0 0 0 0 0
E E "main(bool enter)
{
  this.color(\"blue\");

  int x, y, w, h;
  getValue(this, \"position\", x, y);
  getValue(this, \"size\", w, h);

  if ( !mouseOver && !mouseNotOver(x, y, w, h) )
    this.color(\"\");
}" 0

0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

6
"maximumSize" "250 -1"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
"main()
{
  if ( $msg != \"hostCert\" )
    this.visible(FALSE);

  this.text(getCatStr(\"nodeRed\", this.name));
}" 0
 "main(mapping event)
{
  int xThis, yThis;
  getValue(this, \"position\", xThis, yThis);
  ModuleOnWithPanel(\"SSL\", xThis, yThis, 0, 0, 1, 1, \"None\", \"para/CreateClientCertificate.pnl\", \"SSL Certificate\", makeDynString());
}" 0
 0 1 3 2 1 E 1.113718087418633 0 1.049999999999992 -261.438511470713 195.0000000000002 0 E 250 20 470 40
0 2 2 "0s" 0 0 0 72 0 0  250 20 1
4
LANG:10001 35 Arial,-1,13,5,50,0,1,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,1,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,1,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,1,0,0,0,Standard
0 4
LANG:10001 26 Open SSl certificate panel
LANG:10004 23 打开 SSl 证书面板
LANG:10000 29 SSL-Zertifikats-Panel öffnen
LANG:10027 54 Открыть панель SSL сертификата
13 36
"fileSelector_pwd"
"WF"
1 688 142.1739130434782 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
31 0 0 0 0 0
E E E
8
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"minimumSize" "26 26"
"maximumSize" "26 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0  686 138 715 166.9999999999992

P 
4294967295
"pictures/wf/buttons/openfile_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main(mapping event)
{
  string name = this.name();
  strreplace(name, \"fileSelector_\", \"\");
  string path;
  getValue(name, \"text\", path);

  if ( path != \"\" )
    path = NodeRedWizard::definePath(path);
  else
    path = NodeRedWizard::definePath();

  if ( path != \"\" )
    setValue(name, \"text\", path);
}" 0
 E E "main()
{
  if ( $msg != \"hostCert\" )
    this.visible(FALSE);
}" 0

0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
3 3 "PANEL_REF1" 5
"sizePolicy" "Ignored Preferred"
"layoutAlignment" "AlignNone"
"" ""
"vision/hsp/objects/background.pnl" 3 223.1182266009838 T 13 1.041057206170998 0 0.9983606557377001 -3.123171618512996 33.24754098360928
0
4 4 "LAYOUT_GROUP34" 5
3 0 
11 6 13 

"S 11" "0 0 1 1"
"S 6" "1 0 1 1"
"S 13" "2 0 1 1"
"" ""
0 1 1 0 15 15 0 0
4 5 "LAYOUT_GROUP35" 13
0 2 

4 3 
"G 4" "0 0 1 1"
"G 3" "0 0 1 2"
"" ""
0 3 0 0
4 6 "LAYOUT_GROUP9" 13
3 0 
17 18 19 

"S 17" "1 0 1 1"
"S 18" "2 0 1 1"
"S 19" "0 0 1 1"
"" ""
0 2 0 1 0
4 8 "LAYOUT_GROUP37" 13
3 0 
7 1 23 

"S 7" "0 0 1 1"
"S 1" "1 0 1 1"
"S 23" "2 0 1 1"
"" ""
0 1 1 15 15 10 0 0
4 10 "LAYOUT_GROUP39" 13
3 0 
22 21 28 

"S 22" "0 0 1 1"
"S 21" "1 0 1 1"
"S 28" "2 0 1 1"
"" ""
0 1 1 15 15 5 0 0
4 11 "LAYOUT_GROUP40" 13
4 0 
34 32 31 30 

"S 34" "0 0 1 1"
"S 32" "1 0 1 1"
"S 31" "2 0 1 1"
"S 30" "3 0 1 1"
"" ""
0 1 1 15 15 5 0 0
4 12 "LAYOUT_GROUP41" 13
3 0 
36 2 8 

"S 36" "2 0 1 1"
"S 2" "1 0 1 1"
"S 8" "0 0 1 1"
"" ""
0 1 1 15 15 10 0 0
4 13 "LAYOUT_GROUP42" -1
1 6 
12 
6 5 8 10 11 12 
"S 12" "5 0 1 1"
"G 6" "0 0 1 1"
"G 5" "6 0 1 1"
"G 8" "1 0 1 1"
"G 10" "3 0 1 1"
"G 11" "4 0 1 1"
"G 12" "2 0 1 1"
"" ""
0 2 0 0
0
