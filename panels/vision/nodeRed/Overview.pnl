V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 1284 645 N "_3DFace" 0
"main()
{
  if ( !semAvailable(NodeRed::SEMAPHORE) )
    semRelease(NodeRed::SEMAPHORE);
}" 0
 "main()
{
  if ( semAvailable(NodeRed::SEMAPHORE) )
    semAcquire(NodeRed::SEMAPHORE);
}" 0
 E E E 1 -1 -1 0  60 150
""0  1
E "#uses \"classes/nodeRED/NodeRedWizard\"
#uses \"classes/nodeRED/NodeRed\"
#uses \"classes/nodeRED/NodeRedConfig\"

bool inAction = FALSE;
bool toggleReady = FALSE;
NodeRedConfig myConfig;
public int gTcpFileDescriptor2;  // needed for pmon functionality
public string gTcpFifo;  // needed for pmon functionality
public dyn_string gParams;  // needed for pmon functionality

/**
 * @brief Function which defines text color depending of the cpu value
 * @param cpuVal is the given CPU value
 * @return text color as a string
 */
string getTextColor(int cpuVal)
{
  if ( cpuVal < 25 )
    return \"SiemensNaturalGreenLight\";

  if ( cpuVal < 75 )
    return \"SiemensNaturalYellowLight\";

  return \"SiemensNaturalRedLight\";
}

/**
 * @brief Function which sets flow data into the table OR writes error messages into the log in case of any errors
 */
void updateFlowTable()
{
  dyn_string ds;
  dyn_float df;

  if ( NodeRed::isUserAuthorized() && NodeRed::isAuthValid() )
    ds = makeDynString(\"\", \"\");
  else
    ChildPanelOnCentralReturn(\"vision/nodeRed/objects/NodeRedUserInterface.pnl\",
                              getCatStr(\"general\", \"loginToolTipLogin\") + \" Node-RED\", makeDynString(\"$msg:\" + \"loginNodeRed\"), df, ds);

  if ( dynlen(ds) < 2 )
    return;

  dyn_mapping flows = NodeRed::flowsData(ds[1], ds[2]);
  string state = \"Enabled\";
  flowTabel.deleteAllLines();

  for (int i = 1; i <= dynlen(flows); i++)
  {
    if ( mappingHasKey(flows[i], \"Authorization\") && !flows[i][\"Authorization\"] )
    {
      logGlobal.append(\"<b>nodeRed</b> : \" + getCatStr(\"nodeRed\", \"noAuth\"));
      return;
    }
    else if ( mappinglen(flows[i]) == 0 )
    {
      logGlobal.append(\"<b>WebSocket</b> : \" + getCatStr(\"console\", \"3804\"));
      return;
    }
    else if ( mappingHasKey(flows[i], \"AuthExpired\") && flows[i][\"AuthExpired\"] )
    {
      logGlobal.append(\"<b>nodeRed</b> : \" + getCatStr(\"nodeRed\", \"authExpired\"));
      return;
    }

    if ( flows[i][\"disabled\"] )  //\"<img src='pictures:nodeRed/icon/square.svg'></img>\"
      state = \"<img src='pictures:nodeRed/icon/square.svg' width='18' height='18'></img> Disabled\";
    else
      state = \"<img src='pictures:nodeRed/icon/check-square.svg' width='18' height='18'></img> Enabled\";

    flowTabel.appendLine(\"name\", flows[i][\"label\"], \"id\", flows[i][\"id\"], \"state\", state);
  }

  return;
}

/**
 * @brief Function which retrieve state for the given process and update shape of this process
 * @param p  key is the process key
 * @param shapeName is the name of the main shape associated with the process
 */
void updateState(const string &key, const string &shapeName)
{
  int cpuUsage = NodeRed::serviceData(key, \"monit cpu\");
  int pid = NodeRed::serviceData(key, \"pid\");

  // show CPU
  if ( cpuUsage < 0 )
  {
    setValue(shapeName, \"text\", \"- \");
  }
  else
  {
    setValue(shapeName, \"text\", cpuUsage + \" %\");
    setValue(shapeName, \"foreCol\", getTextColor(cpuUsage));
  }

  setValue(\"wait_\" + shapeName, \"visible\", FALSE);

  // show state
  if ( pid <= 0 )
  {
    setValue(\"state_\" + shapeName, \"toolTipText\", getCatStr(\"Console\", \"4013\"));
    setValue(\"state_\" + shapeName, \"fill\", \"[pattern,[tile,any,nodeRed/icon/not_ok.png]]\");
  }
  else
  {
    setValue(\"state_\" + shapeName, \"toolTipText\", getCatStr(\"Console\", \"4010\"));
    setValue(\"state_\" + shapeName, \"fill\", \"[pattern,[tile,any,nodeRed/icon/ok.png]]\");
  }

  return;
}
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
2 1 0 0 0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
29 51
"logGlobal"
""
1 0 685.5555555555468 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
51 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

9
"frameShadow" "enum 16"
"placeholderText" "string "
"textInteractionFlags" "enum 1"
"textFormat" "enum 0"
"wordWrap" "enum 0"
"inputMethodHints" "enum 1024"
"minimumSize" "-1 100"
"sizePolicy" "Expanding MinimumExpanding"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  0 402.0000000000001 1283.000000000031 643.9999999999916
15 PVSS.TextEdit.1
0
"main()
{
  NodeRed::logNode = this;

  if ( this.text != \"\" )
    return;

  // take previous logs logs
  for (int i = 1; i <= dynlen(NodeRed::oldLogs); ++i)
    this.append(NodeRed::oldLogs[i]);

  this.scrollBy(0, dynlen(NodeRed::oldLogs));
}" 0
30 52
"frame_nodeRedState"
"WF"
1 20 9 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
52 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));
}" 0
 E 0 1 3 2 1 E 1.562068965517299 0 1.297297297297352 -31.24137931034598 207.3243243243238 0 E 20 9 311 121
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0 4
LANG:10001 21 Node-RED Server State
LANG:10004 22 Node-RED Server 状态
LANG:10000 21 Node-RED Server State
LANG:10027 21 Node-RED Server State
6 53
"state_nodeRedServer"
""
1 40 50 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
53 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"minimumSize" "26 26"
"maximumSize" "26 26"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E -1 1 3 2 1 E 1.000000000000004 0 1 289.9999999999998 203 2  0 0  "pictures/nodeRed/icon/ok.png" 4294967295 E 40 50 65 75
29 54
"label_nodeRedServer"
""
1 23.96069868995612 58.00000000000011 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
54 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string Address"
"minimumSize" "225 26"
"maximumSize" "250 26"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  12 253 235.9999999999919 278
5 Label
0
"main()
{
  string prefix = \"https://\";

  this.text(prefix + NodeRedWizard::getNodeValue(\"uiHost\") + \":\" + NodeRedWizard::getNodeValue(\"uiPort\"));
}" 0
29 55
"nodeRedOverview"
""
1 0 0 E E E 1 E 1 E N "_3DText" E N "white" E E
 E E
55 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"frameShape" "enum 0"
"text" "string Node-RED status"
"minimumSize" "-1 80"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  0 0 1283.000000000057 78.99999999999623
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));
  this.styleSheet(\"margin-top: 5px; margin-left: 15px; margin-right: 15px; margin-bottom: 5px; border-bottom: 1px black;\");
}
" 0
4 56
"LINE2"
""
1 1282.999999999938 81 E E E 1 E 1 E N "WF_RefDiffLineDark" E N {255,255,255} E E
 E E
56 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E  1282.999999999938 81 0 81
29 63
"label_nodeRedCPU"
""
1 23.96069868995612 90.00000000000011 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
63 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string CPU Load"
"minimumSize" "225 26"
"maximumSize" "250 26"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  12 285 235.9999999999919 310
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", \"cpuLoad\"));
}
" 0
29 64
"nodeRedServer"
""
1 324.8733624454146 89.99999999999923 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
64 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string "
"alignment" "enum 132"
"minimumSize" "40 26"
"maximumSize" "40 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  323 285 361.9999999999981 310
5 Label
0
"main()
{
  setValue(\"state_\" + this.name, \"fill\", \"[solid]\");

  while (1)
  {
    updateState(\"node-red\", this.name);
    delay (30);  //update each 30 secons
  }
}
" 0
30 74
"frame_webSocketState"
""
1 20 9 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
74 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));
}" 0
 E 0 1 3 2 1 E 1.562068965517313 0 1.117117117117082 -31.24137931034626 77.94594594594626 0 E 20 9 311 121
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0 4
LANG:10001 15 WebSocket State
LANG:10004 16 WebSocket 状态
LANG:10000 15 WebSocket State
LANG:10027 15 WebSocket State
6 75
"state_webSocketServer"
""
1 40 50 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
75 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"minimumSize" "26 26"
"maximumSize" "26 26"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E -1 1 3 2 1 E 1.000000000000004 0 1 289.9999999999998 72 2  1 0  "pictures/trendBusy.gif" 4294967295 E 40 50 65 75
29 76
"label_webSocketServer"
""
1 38.96069868995609 -72.99999999999997 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
76 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string Address"
"minimumSize" "225 26"
"maximumSize" "250 26"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  27 122 250.9999999999919 147
5 Label
0
"main()
{
  this.text(NodeRedWizard::wssLink());
}
" 0
30 77
"FRAME8"
""
1 420 99 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
77 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
  this.text(\"Node-RED \" + getCatStr(\"nodeRed\", \"flowsList\"));
}" 0
 E 0 1 3 2 1 E 0.9682352941176438 0 0.7617728531855867 53.3411764705896 12.58448753462692 0 E 420 99 1271 461
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0 4
LANG:10001 14 Node-RED Flows
LANG:10004 14 Node-RED Flows
LANG:10000 19 Node-RED Flows List
LANG:10027 19 Node-RED Flows List
29 78
"label_webSocketCPU"
""
1 38.96069868995609 -29.99999999999989 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
78 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string CPU Load"
"minimumSize" "225 26"
"maximumSize" "250 26"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  27 165 250.9999999999919 190
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", \"cpuLoad\"));
}
" 0
29 79
"webSocketCPU"
""
1 409.0197128346337 -24.93750000000176 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
79 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string "
"alignment" "enum 132"
"minimumSize" "40 26"
"maximumSize" "40 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  323 165 362.0000000000014 190
5 Label
0
"main()
{
  while (1)
  {
    int cpuUsage = NodeRed::webSokcketCpuUsage;
    while ( cpuUsage == NodeRed::CPU_NOT_DEFINED )  // cpu not defined yet
    {
      delay(0, 20);
      cpuUsage = NodeRed::webSokcketCpuUsage;
    }

    if ( cpuUsage < 0 )
    {
      this.text(\"- \");
      state_webSocketServer.toolTipText(getCatStr(\"Console\", \"4013\"));
      state_webSocketServer.fill(\"[pattern,[tile,any,nodeRed/icon/not_ok.png]]\");
    }
    else
    {
      this.text(cpuUsage + \" %\");
      this.foreCol(getTextColor(cpuUsage));
      state_webSocketServer.toolTipText(getCatStr(\"Console\", \"4010\"));
      state_webSocketServer.fill(\"[pattern,[tile,any,nodeRed/icon/ok.png]]\");
    }

    delay (30);  //update each 30 secons
  }
}" 0
25 80
"flowTabel"
"WF"
1 472 122 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
80 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"minimumSize" "800 -1"
"sizePolicy" "MinimumExpanding MinimumExpanding"
"layoutAlignment" "AlignNone"
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0  470 120 1272.999999999973 314.9999999999966
"main()
{
  this.selectByClick(TABLE_SELECT_NOTHING);
  this.columnStretchable(0,1);
  this.deleteAllLines();

  if ( NodeRed::isUserAuthorized() && NodeRed::isAuthValid() )
    updateFlowTable();
}" 0
"main(int row, string column, string value)
{
  int x, y;
  getCursorPosition(x, y);
  dyn_string value = strsplit(this.cellValueRC(row, \"state\"), \" \");
  if ( menu(x, y + 10, value[dynlen(value)]) )
  {
    upload.enabled(TRUE);

    if ( value[dynlen(value)] == \"Enabled\" )
      this.cellValueRC(row, \"state\", \"<img src='pictures:nodeRed/icon/square.svg' width='18' height='18'></img> Disabled\");
    else
      this.cellValueRC(row, \"state\", \"<img src='pictures:nodeRed/icon/check-square.svg' width='18' height='18'></img> Enabled\");
  }
}


bool menu(const int &x, const int &y, const string &value)
{
  string panelName = \"vision/nodeRed/objects/popupMenu.pnl\";

  dyn_anytype da = makeDynAnytype(myModuleName(),
                                  panelName,
                                  myPanelName(),
                                  \"info\",
                                  x,
                                  y,
                                  1.0,
                                  true,
                                  makeDynString(\"$value:\" + value),
                                  false,
                                  makeMapping(\"windowFlags\", \"Popup\"));

  dyn_float df;
  dyn_string ds;
  dyn_anytype result;
  childPanel(da, result);

  return ( dynlen(result) > 0 );
}" 0
 1 0 1 3 0 "name" 16 1 0 "s" 4
LANG:10001 4 Name
LANG:10004 4 Name
LANG:10000 4 Name
LANG:10027 6 Имя
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

250 "id" 16 1 0 "s" 4
LANG:10001 2 Id
LANG:10004 2 Id
LANG:10000 2 Id
LANG:10027 2 Id
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

250 "state" 16 1 0 "[h,,,AlignLeft|AlignBottom]" 4
LANG:10001 5 State
LANG:10004 6 状态
LANG:10000 6 Status
LANG:10027 18 Состояние
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

250 
30 30 10 0
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
13 81
"getFlowInfo"
"WF"
1 1528.942117117128 323.0800000000001 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
81 0 0 0 0 0
E E E
8
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"minimumSize" "80 32"
"layoutAlignment" "AlignNone"
4
LANG:10001 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10027 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
0  1190 318 1273.000000000002 353.0000000000009

T 
4
LANG:10001 6 Update
LANG:10004 6 更新
LANG:10000 13 Aktualisieren
LANG:10027 6 Update
"main(mapping event)
{
  this.enabled(FALSE);
  updateFlowTable();
  this.enabled(TRUE);
}" 0
 E E "main()
{
  string tooltip = getCatStr(\"nodeRed\", this.name);
  strreplace(tooltip, \":\", \".\");
  this.toolTipText(tooltip);

  // check if Node-RED server can be started
  if ( NodeRed::canStartNodeRed() )
    this.enabled(TRUE);
  else
    this.enabled(FALSE);
}
" 0

32 82
"SPACER1"
""
1 669 320 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
82 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 669 320 846.000000000007 351 1
32 83
"SPACER2"
""
1 334 370 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
83 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 334 370 1268.000000000041 395 1
29 84
"label_updateState"
""
1 29.98689956331899 175 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
84 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

6
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string <b>The state and logs are updated every 30 seconds.</b>"
"minimumSize" "300 26"
"maximumSize" "-1 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  15 370 327.0000000000036 394.9999999999999
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));
}
" 0
32 85
"SPACER3"
""
1 362 253 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
85 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 362 253 441.0000000000008 278.0000000000011 1
32 86
"SPACER4"
""
1 369 285 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
86 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 369 285 440.9999999999989 310.0000000000001 1
32 87
"SPACER5"
""
1 243 253 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
87 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 243 253 322.9999999999989 278.0000000000011 1
32 88
"SPACER6"
""
1 243 285 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
88 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"transparentForMouse" ""
"minimumSize" "17 -1"
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 243 285 315.9999999999981 310.0000000000001 1
32 89
"SPACER7"
""
1 362 122 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
89 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 362 122 425.9999999999981 157.9999999999999 1
32 90
"SPACER8"
""
1 369 165 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
90 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 369 165 425.9999999999987 200.0000000000001 1
32 91
"SPACER9"
""
1 258 122 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
91 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 258 122 322.9999999999993 157.9999999999999 1
32 92
"SPACER10"
""
1 258 165 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
92 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"transparentForMouse" ""
"minimumSize" "17 -1"
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 258 165 316 200.0000000000001 1
29 99
"update_label"
""
1 1082.475982532751 124.9999999999984 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
99 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string Advanced Settings"
"styleSheet" "string padding-top: 5px"
"minimumSize" "-1 26"
"maximumSize" "-1 26"
"layoutAlignment" "AlignRight|AlignTrailing"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  1077 320 1190.999999999995 345.0000000000001
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", \"getFlowInfo\"));
}" 0
29 109
"nodeRedStartLabel"
""
1 17.47598253275112 121.9999999999984 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
109 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string Advanced Settings"
"styleSheet" "string padding-top: 5px"
"minimumSize" "-1 26"
"maximumSize" "-1 26"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  12 317 125.999999999999 342.0000000000001
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));
}" 0
32 110
"SPACER15"
""
1 133 317 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
110 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"transparentForMouse" ""
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 133 317 320.0000000000018 351.0000000000015 1
29 111
"startNodeRed"
"WF"
1 327 317 E E E 1 E 1 E N "WF_HeadText" E N "_Transparent" E E
 E E
111 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

9
"layoutDirection" "enum 1"
"skin" "enum 3"
"backgroundBrushOn" "fill [gradient,[linear,pad,0.0241,1,1.08,0.988,0.0268,{31,126,31},0.993,{80,90,100}]]"
"backgroundBrushOff" "fill [gradient,[linear,pad,0.0361,1,0.988,1,0.0336,{212,217,221},0.748,{80,90,100}]]"
"textOff" "string OFF"
"textOn" "string ON"
"maximumSize" "115 35"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignNone"
4
LANG:10001 35 Noto Sans,-1,19,5,75,0,0,0,0,0,Bold
LANG:10004 35 Noto Sans,-1,19,5,75,0,0,0,0,0,Bold
LANG:10000 35 Noto Sans,-1,19,5,75,0,0,0,0,0,Bold
LANG:10027 35 Noto Sans,-1,19,5,75,0,0,0,0,0,Bold
0  327 317 440.9999999999959 351.0000000000002
16 ToggleSwitch.ewo
1
0 "toggled" "(bool on)"
"  if ( !toggleReady )
    return;

  inAction = TRUE;
  this.enabled(FALSE);

  if ( NodeRedWizard::getNodeValue(\"https\") && on )
  {
    this.foreCol(\"white\");

    dyn_float resultFloat;
    dyn_string resultString;

    wf_dialogs_open(WF_DIALOGS_PANEL_TYPE_OK, getCatStr(\"general\",\"information\"),
                    getCatStr(\"nodeRed\", \"defCert\"), resultString, resultFloat);
  }

  waitStart.start();
  waitStart.visible(TRUE);
  getFlowInfo.enabled(FALSE);
  sync.enabled(FALSE);

  myConfig.getValue(\"cert\");
  myConfig.getValue(\"key\");

  if ( NodeRed::startNodeRed(on) < 0 )
  {
    this.checked(FALSE);
    getFlowInfo.enabled(TRUE);
    sync.enabled(TRUE);
    waitStart.visible(FALSE);
    waitStart.stop();
    this.enabled(TRUE);
    return;
  }

  // start WebSocket manager only on server-side
  if ( !NodeRedWizard::isRemoteUI() && on )
  {
    if ( !NodeRed::webSocketManagerExists() ) // Create WebSocket manager if it doesn not exist
    {
      dyn_string adminUsers = myConfig.getNodeRedUsers(TRUE);
      if ( dynlen(adminUsers) > 0 )
        NodeRed::createWebSocketManager(false, adminUsers[1]);
    }
    else
    {
      NodeRed::startWebSocket();
    }
  }

  getFlowInfo.enabled(TRUE);
  sync.enabled(TRUE);
  waitStart.visible(FALSE);
  waitStart.stop();
  this.enabled(TRUE);

  if ( NodeRed::nodeRedState() > 0 )
    this.checked(TRUE);
  else
    this.checked(FALSE);"
"main()
{
  waitStart.start();
  waitStart.visible(true);
  this.toolTipText(getCatStr(\"nodeRed\", \"startStop\") + \" Node-RED\");
  NodeRedWizard::startShape = this;

  // check if Node-RED server can be started
  if ( NodeRed::canStartNodeRed() )
    this.enabled(TRUE);
  else
    this.enabled(FALSE);

  toggleReady = FALSE;
  // check if Node-RED server is already running
  if ( NodeRed::nodeRedState() > 0  && !inAction )
    this.checked(TRUE);
  else if ( !inAction )
    this.checked(FALSE);

  if ( inAction )
      return;

  delay(1);  // ~1 second needed for toggle button animation
  toggleReady = TRUE;
  waitStart.stop();
  waitStart.visible(false);
}
" 0
29 115
"upload_label"
""
1 854.475982532751 124.9999999999984 E E E 1 E 1 E N "WF_Text" E N "_Transparent" E E
 E E
115 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string Advanced Settings"
"styleSheet" "string padding-top: 5px"
"minimumSize" "-1 26"
"maximumSize" "-1 26"
"layoutAlignment" "AlignRight|AlignTrailing"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  849 320 962.9999999999972 345.0000000000001
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));
}" 0
13 116
"upload"
"WF"
1 964 327.7500000000001 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
116 0 0 0 0 0
E E E
8
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"minimumSize" "80 32"
"layoutAlignment" "AlignNone"
4
LANG:10001 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10027 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
0  962 318 1045 353

T 
4
LANG:10001 6 Upload
LANG:10004 6 上载
LANG:10000 9 Hochladen
LANG:10027 18 Загрузить
"main(mapping event)
{
  mapping stateFlows;
  for (int i = 0; i < flowTabel.lineCount(); ++i)
  {
    dyn_string value = strsplit(flowTabel.cellValueRC(i, \"state\"), \" \");
    stateFlows[flowTabel.cellValueRC(i, \"id\")] = value[dynlen(value)];
  }

  NodeRed::uploadFlows(stateFlows);
  this.enabled(FALSE);
}" 0
 E E "main()
{
  this.toolTipText(getCatStr(\"nodeRed\", this.name));
}" 0

32 117
"SPACER16"
""
1 1045 320 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
117 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"transparentForMouse" ""
"maximumSize" "30 -1"
"sizePolicy" "Expanding Ignored"
"layoutAlignment" "AlignNone"
 1045 320 1074 351 1
29 118
"wait_nodeRedServer"
""
1 323 246 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
118 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"effectType" "enum 2"
"color1" "color {0,100,135}"
"layoutAlignment" "AlignNone"
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0  323 246 355 278
19 AttentionEffect.ewo
0
"main()
{
  this.start();
  this.visible(true);
}" 0
29 119
"waitStart"
""
1 296.9999999999986 297.625 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
119 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"effectType" "enum 2"
"color1" "color {0,100,135}"
"layoutAlignment" "AlignNone"
4
LANG:10001 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10004 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10000 30 Noto Sans,-1,16,5,50,0,0,0,0,0
LANG:10027 30 Noto Sans,-1,16,5,50,0,0,0,0,0
0  296.9999999999986 297.625 426.9999999999977 367.6250000000002
19 AttentionEffect.ewo
0
E13 121
"sync"
"WF"
1 924.942117117128 323.0800000000001 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
121 0 0 0 0 0
E E E
8
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"minimumSize" "80 32"
"layoutAlignment" "AlignNone"
4
LANG:10001 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
LANG:10027 38 Noto Sans,-1,13,5,50,0,0,0,0,0,Regular
0  586 318 669.000000000002 353.0000000000009

T 
4
LANG:10001 6 Update
LANG:10004 6 更新
LANG:10000 13 Aktualisieren
LANG:10027 6 Update
"main(mapping event)
{
  if ( !myConfig.isUiActive() )  // synchronization can be done only from active system
  {
    dyn_float resultFloat;
    dyn_string resultString;

    wf_dialogs_open(WF_DIALOGS_PANEL_TYPE_OK, getCatStr(\"general\",\"information\"),
                    getCatStr(\"nodeRed\", \"syncFromPassive\"), resultString, resultFloat);
    return;
  }

  this.enabled(FALSE);
  myConfig.synchronizeFlow();
  this.enabled(TRUE);

  //synchronization is completed
  logGlobal.append(\"<b>nodeRed</b> : \" + getCatStr(\"nodeRed\", \"syncDone\"));
}" 0
 E E "main()
{
  this.toolTipText(getCatStr(\"nodeRed\", this.name + \"_toolTip\"));
  this.text(getCatStr(\"nodeRed\", this.name));

  // available only for redundant systems
  if ( isRedundant() )
    this.visible(TRUE);
}
" 0

29 122
"sync_label"
""
1 478.4759825327511 124.9999999999984 E E E 1 E 0 E N "WF_Text" E N "_Transparent" E E
 E E
122 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

7
"contextMenuPolicy" "enum 1"
"frameShape" "enum 0"
"text" "string Advanced Settings"
"styleSheet" "string padding-top: 5px"
"minimumSize" "-1 26"
"maximumSize" "-1 26"
"layoutAlignment" "AlignRight|AlignTrailing"
4
LANG:10001 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,13,5,50,0,0,0,0,0,Standard
0  473 320 586.9999999999972 345.0000000000001
5 Label
0
"main()
{
  this.text(getCatStr(\"nodeRed\", this.name));

  // available only for redundant systems
  if ( isRedundant() )
    this.visible(TRUE);
}" 0
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
4 2 "LAYOUT_GROUP31" 53
2 0 
56 55 

"S 56" "1 0 1 1"
"S 55" "0 0 1 1"
"" ""
0 2 0 1 1
4 15 "LAYOUT_GROUP48" 53
2 0 
84 83 

"S 84" "0 0 1 1"
"S 83" "1 0 1 1"
"" ""
0 1 1 15 15 0 0 0
4 31 "LAYOUT_GROUP72" 48
4 0 
54 87 53 85 

"S 54" "0 0 1 1"
"S 87" "1 0 1 1"
"S 53" "2 0 1 1"
"S 85" "3 0 1 1"
"" ""
0 1 0 0
4 32 "LAYOUT_GROUP73" 48
4 0 
63 88 64 86 

"S 63" "0 0 1 1"
"S 88" "1 0 1 1"
"S 64" "2 0 1 1"
"S 86" "3 0 1 1"
"" ""
0 1 0 0
4 35 "LAYOUT_GROUP76" 37
4 0 
76 91 75 89 

"S 76" "0 0 1 1"
"S 91" "1 0 1 1"
"S 75" "2 0 1 1"
"S 89" "3 0 1 1"
"" ""
0 1 0 0
4 36 "LAYOUT_GROUP78" 37
4 0 
78 92 79 90 

"S 78" "0 0 1 1"
"S 92" "1 0 1 1"
"S 79" "2 0 1 1"
"S 90" "3 0 1 1"
"" ""
0 1 0 0
4 37 "LAYOUT_GROUP79" 38
0 2 

35 36 
"G 35" "0 0 1 1"
"G 36" "1 0 1 1"
"" ""
0 2 1 15 15 0 0 0
4 38 "LAYOUT_GROUP80" 49
1 1 
74 
37 
"G 37" "0 0 1 1"
"" ""
1 2 0 0
4 47 "LAYOUT_GROUP89" 48
3 0 
109 110 111 

"S 109" "0 0 1 1"
"S 110" "1 0 1 1"
"S 111" "2 0 1 1"
"" ""
0 1 0 0
4 48 "LAYOUT_GROUP90" 49
1 3 
52 
31 32 47 
"G 31" "0 0 1 1"
"G 32" "1 0 1 1"
"G 47" "2 0 1 1"
"" ""
1 2 0 0
4 49 "LAYOUT_GROUP91" 52
0 2 

48 38 
"G 48" "1 0 1 1"
"G 38" "0 0 1 1"
"" ""
0 2 0 0
4 50 "LAYOUT_GROUP92" 51
8 0 
122 121 82 115 116 117 99 81 

"S 122" "0 0 1 1"
"S 121" "1 0 1 1"
"S 82" "2 0 1 1"
"S 115" "3 0 1 1"
"S 116" "4 0 1 1"
"S 117" "5 0 1 1"
"S 99" "6 0 1 1"
"S 81" "7 0 1 1"
"" ""
0 1 0 1 1
4 51 "LAYOUT_GROUP93" 52
2 1 
77 80 
50 
"S 80" "0 0 1 1"
"G 50" "1 0 1 1"
"" ""
1 2 0 0
4 52 "LAYOUT_GROUP94" 53
0 2 

51 49 
"G 51" "1 0 1 1"
"G 49" "0 0 1 1"
"" ""
0 1 0 0
4 53 "LAYOUT_GROUP95" -1
1 3 
51 
2 52 15 
"S 51" "3 0 1 1"
"G 2" "0 0 1 1"
"G 52" "1 0 1 1"
"G 15" "2 0 1 1"
"" ""
0 2 0 0
0
