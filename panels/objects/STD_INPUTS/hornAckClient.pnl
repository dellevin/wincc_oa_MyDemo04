V 13
4
LANG:10001 8 (NoName)
LANG:10004 11 (未命名)
LANG:10000 8 (NoName)
LANG:10027 18 (БезИмени)
PANEL,-1 -1 129 102 N "_3DFace" 0
E E E E E 1 -1 -1 0  40 30
""0  1
E E 2
"CBRef" "0"
"EClose" E
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
13 0
"HornAckButton"
""
1 40 30 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
1 0 0 0 119 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  38 28 92 72

P 
4294967295
"pictures/hornAckClient.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  dpSet(\"AlertHorn.HornAcknowledge:_original.._value\",1);
  //commonConfirm(\"panel\");
}" 0
 E E "bool 	g_contOrCycl;
int		g_wavThreadId, g_beeperThreadId;

main()
{
  dpConnect(\"manageAccess\",myUiDpName()+\".UserName:_online.._value\");
  dpConnect(\"alertHornLowPrio\",\"AlertHorn.LowPrioHornActive:_online.._value\");
  dpConnect(\"alertHornLowPrio\",\"AlertHorn.HighPrioHornActive:_online.._value\");
}

manageAccess(string dp1, string UserName)
{
 if (getUserPermission(2))
   setValue(\"\",\"fill\",\"[pattern,[tile,bmp,horn_ack_enabled.bmp]]\",
   			   \"enabled\", true);
 else
   setValue(\"\",\"fill\",\"[pattern,[tile,bmp,horn_ack_disabled.bmp]]\",
               \"enabled\", false);
}

alertHornLowPrio(string dpe, bool active)
{
  string sLowerSnd;
  bool   wavActive, beepActive, continous;
  int    wavLoop, pause_time, frequency, beepDuration;

  if (active == 1)
  {
    dpGet(\"AlertHorn.WavProps.Enabled:_online.._value\", 	wavActive,
    	  \"AlertHorn.BeeperProps.Enabled:_online.._value\",  beepActive);
    	  
    if (wavActive == 1)			// case: WAV
    {
      dpGet(\"AlertHorn.WavProps.LowPrioWavFile:_online.._value\",  	  sLowerSnd,
            \"AlertHorn.WavProps.LowPrioCycleInterval:_online.._value\",wavLoop,
            \"AlertHorn.WavProps.LowPrioContinous:_original.._value\",  continous);
      
      if (continous == 1)
      {
        startSound(sLowerSnd,1);
      }
      else
      {
        g_contOrCycl = 1;
        g_wavThreadId = startThread(\"StartCyclicSound\", sLowerSnd, wavLoop); 
      }
      if (beepActive == 1)		// case: BEEPER
      {
        dpGet(\"AlertHorn.BeeperProps.LowPrioIntervalTime:_online.._value\",pause_time,
    	      \"AlertHorn.BeeperProps.LowPrioFrequency:_online.._value\",   frequency,
    	      \"AlertHorn.BeeperProps.LowPrioBeepTime:_online.._value\", 	beepDuration);
    	  
        g_beeperThreadId = startThread(\"BeeperSound\",beepDuration, frequency, pause_time);
      }
    }
  }
  else soundStop();
}

alertHornHighPrio(string dpe, bool active)
{
  string sLowerSnd;
  bool   wavActive, beepActive, continous;
  int    wavLoop, pause_time, frequency, beepDuration;

  if (active == 1)
  {
    dpGet(\"AlertHorn.WavProps.Enabled:_online.._value\", 	wavActive,
    	  \"AlertHorn.BeeperProps.Enabled:_online.._value\",  beepActive);
    	  
    if (wavActive == 1)			// case: WAV
    {
      dpGet(\"AlertHorn.WavProps.HighPrioWavFile:_online.._value\",  	   sLowerSnd,
            \"AlertHorn.WavProps.HighPrioCycleInterval:_online.._value\",wavLoop,
            \"AlertHorn.WavProps.HighPrioContinous:_original.._value\",  continous);
      
      if (continous == 1)
      {
        startSound(sLowerSnd,1);
      }
      else
      {
        g_contOrCycl = 1;
        g_wavThreadId = startThread(\"StartCyclicSound\", sLowerSnd, wavLoop); 
      }
      if (beepActive == 1)		// case: BEEPER
      {
        dpGet(\"AlertHorn.BeeperProps.HighPrioIntervalTime:_online.._value\",pause_time,
    	      \"AlertHorn.BeeperProps.HighPrioFrequency:_online.._value\",   frequency,
    	      \"AlertHorn.BeeperProps.HighPrioBeepTime:_online.._value\", 	beepDuration);
    	  
        g_beeperThreadId = startThread(\"BeeperSound\",beepDuration, frequency, pause_time);
      }
    }
  }
  else soundStop();
}

soundStop()
{
  bool		beeperStatus, wavStatus;
            
  dpGet(\"AlertHorn.BeeperProps.Enabled:_online.._value\", 	beeperStatus,
  		\"AlertHorn.WavProps.Enabled:_online.._value\",		wavStatus);		  
  		
  // BEEPER STOP //
  if (beeperStatus == 1)
  {
    if (g_beeperThreadId > 0) 
    {
      g_checkThreadStop = stopThread(g_beeperThreadId);
      while (g_checkThreadStop != 0)
      {
        g_checkThreadStop = stopThread(g_beeperThreadId);
        delay(5);
      }
      g_checkThreadStop = 0;
    }
  }
    
  // WAV STOP //
  if (wavStatus == 1)
  { 
  if (g_contOrCycl != 1) stopSound();
  if (g_contOrCycl == 1 && g_wavThreadId != 0)
  {
    g_checkThreadStop = stopThread(g_wavThreadId);
    while (g_checkThreadStop != 0)
    {
      g_checkThreadStop = stopThread(g_wavThreadId);
	  delay (5);
    }
      g_checkThreadStop = 0;
      stopSound();
    }
  }
}



/// THREADS //////

// Beeper //
void BeeperSound(int beepDuration, int frequency, int pause_time)
{
  while(true)
  {
    beep(frequency,beepDuration);
    delay(0, pause_time);
  }
}

// Wav //
void StartCyclicSound(string wavFile, int wavLoop)
{
  while(true)
  {
    startSound(wavFile,0);
    delay(wavLoop);
  }
}" 0

0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
0
