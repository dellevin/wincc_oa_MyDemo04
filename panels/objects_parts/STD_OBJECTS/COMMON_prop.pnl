V 14
4
LANG:10001 8 (NoName)
LANG:10004 11 (未命名)
LANG:10000 8 (NoName)
LANG:10027 18 (БезИмени)
PANEL,-1 -1 830 510 N "_3DFace" 2
"$dp"
"$dpe"
"main()
{
  dyn_string dpes_dpe, tempds;
  dyn_string dynamicAttributes;
  dyn_string dynamicText;
  dyn_string dynamicAttributesText;
  dyn_string ds;
  int i, j, pos, count;
  string addString;
  dyn_dyn_string dds;
  string dp = $dp;
  dyn_string retS;
  dyn_int retI;
  
  addGlobal(\"gDpeAndConfigs\",DYN_DYN_STRING_VAR);
  addGlobal(\"gDpeAndConfigsDA\",DYN_DYN_STRING_VAR);
  addGlobal(\"gDpeAllredyShown\",DYN_STRING_VAR);

  dynClear(gDpeAllredyShown);
  dynClear(gDpeAndConfigs);
 
   ds = dpTypes();
  if (dynContains(ds, \"_DynamicDatapoints\") < 1)
    ChildPanelOnCentralModalReturn(\"objects_parts/STD_OBJECTS/COMMON_prop_definition.pnl\",getCatStr(\"STD_Symbols\",\"newPanelDynamicAttribute\"),makeDynString(), retI, retS);
   else 
    daCheckPowerConfigs();
  

 
  if (isDollarDefined(\"$dp\") && dpExists(\"_dt_\" + dpTypeName($dp)))
  {
    
    
    dpGet(\"_dt_\" + dpTypeName($dp)+\".Leaf:_online.._value\",dpes_dpe);
    dpGet(\"_dt_\" + dpTypeName($dp)+\".DynamicAttribute:_original.._value\",dynamicAttributes);
    
    for (i= dynlen(dpes_dpe);i>0; i--)        
    {
       if ( dynamicAttributes[i] == \"_da_none\")
       {
         dynRemove(dpes_dpe,i);
         dynRemove(dynamicAttributes,i);
       
       }
    }

    for (i= 1; i<= dynlen(dpes_dpe); i++)        
    {
      tempds = strsplit(dpes_dpe[i],\":\");        // remove config
      strreplace(tempds[1],\"_mp_\" + dpTypeName($dp),\"\");              // remove dp

     
      if (i==1)                                 // special if 1st Element because dynlen(empty  dyn_dyn) is wrong
      { 
        dds[1][1]=tempds[1];                    // [1] = dp
        dds[2][1]=1;                             // count of configs
        dds[3][1]=tempds[2];                     // real config 
        pos = 1;
        gDpeAndConfigsDA[3][pos]= dynamicAttributes[i];  // DA (virtual) config
  
      }
      else                                      // more than one element in list
      {
        pos = dynContains(dds[1],tempds[1]);    // find position
        if (pos <= 0)                            // new dpe
        {
          dds[1][dynlen(dds[1])+1] = makeDynString(tempds[1]);  // append dp
          pos = dynlen(dds[1]);                  // get position = last position
           dds[2][pos]=1;                         // count of configs
          dds[3][pos]=tempds[2];                 // real config
          gDpeAndConfigsDA[3][pos]= dynamicAttributes[i];  // virtual DAconfig
        }
        else                                     //same dpe, new config
        {
          count =  dds[2][pos];                  // get actual coung
          count ++;                              // add 1
           dds[2][pos]=count;                     // put count back 
          dds[count+2][pos]=tempds[2];           // append real config
          gDpeAndConfigsDA[count+2][pos]= dynamicAttributes[i];  // append virtual config
        }
      }
    }
    
    listDpe.items = dds[1];                      // show all dpe's in list
    gDpeAndConfigs= dds;                        // remember 
  }
  else
  {
    listDpe.enabled  = FALSE;
    cmdApply.enabled  = FALSE;
    cmdOK.enabled  = FALSE;
  }
}" 0
 E E E E 1 -1 -1 0  21 641
""0  1
E E 3
"CBRef" "0"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
6 8
"fraLight"
""
1 19 597 E E E 1 E 1 E N "STD_frame_light" E N "_Transparent" E E
 E E
7 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 11 11 821 501
6 7
"fraDark"
""
1 10 587 E E E 1 E 1 E N "STD_frame_dark" E N "_Transparent" E E
 E E
6 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 10 10 820 500
1 23 0 "" 0
0
10 17
"Polyline1"
""
1 189 460 E E E 1 E 0 E N "_Window" E N "_Transparent" E E
 E E
9 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 3 189 460
189 489
36 489
 0
10 18
"Polyline2"
""
1 37 488 E E E 1 E 0 E N "_ButtonShadow" E N "_Transparent" E E
 E E
10 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 2 1 0 1 E U  0 E 3 37 488
37 461
187 461
 0
6 19
"busySize"
""
1 41 454 E E E 1 E 0 E N "_3DFace" E N "_Transparent" E E
 E E
11 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 41 454 183 471
6 20
"busyFlag"
""
1 43 465 E E E 1 E 0 E N {0,0,153} E N {0,0,153} E E
 E E
13 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  1 E 43 465 79 484
2 21
"Text1"
""
1 280 209 E E E 1 E 1 E N "STD_text" E N "_Transparent" E E
 E E
12 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 282 211 670 229
0 2 0 "0s" 0 0 0 192 0 0  282 211 1
4
LANG:10001 26 Arial,-1,17,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,17,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,17,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,17,5,50,0,0,0,0,0
0 4
LANG:10001 45 Please select an element for parametrization.
LANG:10004 34 请选择一个参数配置条目.
LANG:10000 52 Bitte wählen Sie ein Element zum Parametrieren aus.
LANG:10027 72 Выберите элемент для параметрирования.
17 1
"listDpe"
""
1 20 50 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  18 48 202 452
0

E
"bool DEBUG;
int g_counter;                                                      // used for debugging Libfunction

int g_busyThread;


main()
{
  int i, j, pos, maxPos ;
  string sSelectedSheetContent;
  string dpe;
  string Shape;
  string sPanelName;

  g_busyThread = -1;
  DEBUG = FALSE;


  if (!globalExists(\"gDaConfigs\") || dynlen(gDaConfigs) == 0)
	{
	  Polyline1.visible  = TRUE;
	  Polyline2.visible  = TRUE;
	  busyFlag.visible  = TRUE;
 	  std_startBusy();
		daReadFileHeader();
    std_stopBusy();
	  Polyline1.visible  = FALSE;
	  Polyline2.visible  = FALSE;
	  busyFlag.visible  = FALSE;
 }


  pos=this.selectedPos;                                          // which # of config is selected
  maxPos = gDpeAndConfigs[2][pos];                              // find the number of parametrisation of this config
  dpe = this.selectedText;                                      // use this pde

  if (dynContains(gDpeAllredyShown, dpe) <= 0)                  // remember all shown Elements for setting, append only if !shown
  {
    dynAppend(gDpeAllredyShown, dpe);
    Shape = \"sheetPara_\"+dynContains(gDpeAllredyShown, dpe);    // generate shapename of sheetobject
                                                                 // add correct invisible Panel
    addSymbol(myModuleName(), myPanelName(), \"objects_parts/STD_OBJECTS/COMMON_prop_sheet.pnl\", Shape, makeDynString(\"$name:\"+Shape), 210, 30, 0,1,1);
    delay(0,1);                                                    // nessesary for breaking thread
    for (j=0; j< 14; j++)                                        // show all
    {
      setValue(Shape + \".sheetPara\",\"registerVisible\", j,(j<maxPos) );         // set visibility of sheet
      if (j< maxPos)                                            // for all existing elements
      {                                                          // set header of sheet

        if (DEBUG) DebugN(\"config:\", gDpeAndConfigs[j+3][pos], gDpeAndConfigsDA[j+3][pos]);
        if (gDpeAndConfigsDA[j+3][pos] == \"_da_none\" || gDpeAndConfigsDA[j+3][pos] == \"_da_notself\")
        {
          setValue(Shape + \".sheetPara\",\"registerVisible\", j,0 );               // not visible !!
        }
        else
        {
          sSelectedSheetContent = getPath(PANELS_REL_PATH, \"objects_parampanels/STD_OBJECTS/\"+gDpeAndConfigsDA[j+3][pos]+\".pnl\");
          if (sSelectedSheetContent == \"\")
                   sSelectedSheetContent = \"objects_parts/STD_OBJECTS/COMMON_prop_sheet_content.pnl\";    // fill sheet wir correct object (use own object if nessesary !!)
          else
             sSelectedSheetContent = \"objects_parampanels/STD_OBJECTS/\"+gDpeAndConfigsDA[j+3][pos]+\".pnl\"; // SET RELATIVE PATH 11

          strreplace(sSelectedSheetContent, \"\\\\\",\"/\");


          sPanelName = getCatStr(\"da\",gDpeAndConfigsDA[j+3][pos]);

          if ( isMotif())						// check maximum lenght
          {
            if (strlen( sPanelName) > (80/maxPos))
            {
            	sPanelName = substr(sPanelName, 0, (80/maxPos))+\".\";
            }
          }

          setValue(Shape + \".sheetPara\", \"namedColumnHeader\",\"#\"+j,sPanelName,
                           \"registerPanel\", j,sSelectedSheetContent,makeDynString(\"$name:\"+Shape+gDpeAndConfigs[j+3][pos], \"$dpe:\"+$dp+dpe));

          startThread(\"daBuildScript\",                             // thread for filling one existing sheet with read thread
                $dp + gDpeAndConfigs[1][pos] ,                      // dpe
                gDpeAndConfigsDA[j+3][pos],                       // config
                Shape+gDpeAndConfigs[j+3][pos],                   // Shape
                TRUE);                                            // get from dpe
        }
      }
    }
  }
  delay(0);                                                      // break thread
  Shape = \"sheetPara_\"+dynContains(gDpeAllredyShown, dpe) + \".sheetPara\";      // generate shapename of sheetobject
  for ( i= 1; i<= dynlen(  gDpeAllredyShown); i++)              // set the selected Object visible, ans all others invisible
    setValue(\"sheetPara_\"+i + \".sheetPara\",\"visible\", (\"sheetPara_\"+i + \".sheetPara\" == Shape ));

  setInputFocus ( myModuleName(), myPanelName(), this.name );    // set input focus to own object

  for(j = 1; j<= maxPos;j++)
    if (DEBUG)     DebugN(gDpeAndConfigs[1][pos], gDpeAndConfigs[j+2][pos]);
}


" 0

E

0 0
13 6
"cmdApply"
""
1 1193 1346 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
2 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  378 458 482 488

T 
4
LANG:10001 2 OK
LANG:10004 6 确定
LANG:10000 2 OK
LANG:10027 2 OK
"bool DEBUG;
int g_counter;
int g_busyThread;

main()
{
  int i, j;
  string Shape;
  int pos;
  
  DEBUG = FALSE;

  g_busyThread = -1;

  Polyline1.visible  = TRUE;
  Polyline2.visible  = TRUE;
  busyFlag.visible  = TRUE;
  
  
  std_startBusy();
  
  for (i = 1; i<= dynlen(gDpeAllredyShown);i++)
  {
    Shape = \"sheetPara_\"+i;
    pos = dynContains(gDpeAndConfigs[1], gDpeAllredyShown[i]);
    for(j= 0; j< gDpeAndConfigs[2][pos]; j++)
      {  
        if (gDpeAndConfigsDA[j+3][pos] != \"_da_none\" && gDpeAndConfigsDA[j+3][pos] != \"_da_notself\")
           startThread(\"daBuildScript\",   
              $dp+gDpeAllredyShown[i] ,  // dpe
              gDpeAndConfigsDA[j+3][pos],       // config
              Shape+gDpeAndConfigs[j+3][pos], // Shape
              FALSE);                          // set to dpe

      }
  }
  while (g_counter > 0)
  {
    delay(0,100);
  }
  

  Polyline1.visible  = FALSE;
  Polyline2.visible  = FALSE;
  busyFlag.visible  = FALSE;

  std_stopBusy();
  
  
  removeGlobal(\"gDpeAndConfigs\");
  removeGlobal(\"gDpeAndConfigsDA\");
  removeGlobal(\"gDpeAllredyShown\");


 PanelOff();


}
" 0
 E E E
13 5
"cmdCancel"
""
1 876 900 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
3 0 0 0 27 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  488 458 592 488

T 
4
LANG:10001 6 Cancel
LANG:10004 6 取消
LANG:10000 9 Abbrechen
LANG:10027 16 Отменить
"main()
{
  removeGlobal(\"gDpeAndConfigs\");
  removeGlobal(\"gDpeAndConfigsDA\");
  removeGlobal(\"gDpeAllredyShown\");


 PanelOff();
}" 0
 E E E
13 22
"Button1"
""
1 1413 1346 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
4 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  598 458 702 488

T 
4
LANG:10001 5 Apply
LANG:10004 6 应用
LANG:10000 11 Übernehmen
LANG:10027 18 Применить
"bool DEBUG;
int g_counter;
int g_busyThread;

main()
{
  int i, j;
  string Shape;
  int pos;
  
  DEBUG = FALSE;

  g_busyThread = -1;

  Polyline1.visible  = TRUE;
  Polyline2.visible  = TRUE;
  busyFlag.visible  = TRUE;
  
  
  std_startBusy();
  
  for (i = 1; i<= dynlen(gDpeAllredyShown);i++)
  {
    Shape = \"sheetPara_\"+i;
    pos = dynContains(gDpeAndConfigs[1], gDpeAllredyShown[i]);
    for(j= 0; j< gDpeAndConfigs[2][pos]; j++)
      {  
        if (gDpeAndConfigsDA[j+3][pos] != \"_da_none\" && gDpeAndConfigsDA[j+3][pos] != \"_da_notself\")
           startThread(\"daBuildScript\",   
              $dp+gDpeAllredyShown[i] ,  // dpe
              gDpeAndConfigsDA[j+3][pos],       // config
              Shape+gDpeAndConfigs[j+3][pos], // Shape
              FALSE);                          // set to dpe

      }
  }
  while (g_counter > 0)
  {
    delay(0,100);
  }
  

Polyline1.visible  = FALSE;
Polyline2.visible  = FALSE;
busyFlag.visible  = FALSE;

  std_stopBusy();

}
" 0
 E E E
13 16
"cmdHelp"
""
1 1428 1228 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
5 0 0 0 112 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  708 458 812 488

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main()
{
  std_help(\"COMMON_prop.pnl\");
}
" 0
 E E E
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
3 0 "" -1
"layoutAlignment" "AlignCenter"
"" ""
"objects/STD_PARTS/PANEL_HEADER_DPCOMMENT.pnl" 117 28 T 8 1 0 1 -57 10
1
"$dpe""$dpe"
0
