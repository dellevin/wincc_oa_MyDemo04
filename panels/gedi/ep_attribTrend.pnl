V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 456 388 N "_3DFace" 0
E E E E E 1 -1 -1 0  0 0
""0  1
E E 3
"CBRef" "0"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer0
LANG:10004 6 Layer0
LANG:10000 6 Layer0
LANG:10027 6 Layer0
1 78 0 "" 0
0
2 36
"fehler"
""
1 23 230 E E E 1 E 0 E N {255,0,0} E N "_Transparent" E E
 E E
36 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"void main()
{
  int         i;
  dyn_float   df;
  dyn_string  ds, dsData;
  dyn_string  asKurve, asDpe, asName, asEinheit, asBereich;
  string      sInvalid, s1;


  // Initialisierung, nur beim ersten Aufschalten des panels durchführen
  i = addGlobal(\"bInit\", BOOL_VAR );

  if (i == 0)
  {
    addGlobal(\"sActivePanel\", STRING_VAR);
    addGlobal(\"ddsPanelData\", DYN_DYN_STRING_VAR);
    addGlobal(\"ddsGet\", DYN_DYN_STRING_VAR);
    addGlobal(\"sDefaultDp\", STRING_VAR);
    addGlobal(\"sDefaultConfig\", STRING_VAR);
    addGlobal(\"sDefaultTyp\", STRING_VAR);
    addGlobal(\"sShape\", STRING_VAR);
    addGlobal(\"bError\", BOOL_VAR);
    addGlobal(\"dsE\", DYN_STRING_VAR);
    addGlobal(\"dsF\", DYN_STRING_VAR);

    // Sprachkatalog
    dsE = makeDynString(\"bigger\", \"less\", \"equal\", \"notequal\", \"else\", \"lessequal\", \"biggerequal\");
    dsF = makeDynString(getCatStr(\"e_para\",\"bigger\"),
                        getCatStr(\"e_para\",\"less\"),
                        getCatStr(\"e_para\",\"equal\"),
                        getCatStr(\"e_para\",\"notequal\"),
                        getCatStr(\"e_para\",\"else\"),
                        getCatStr(\"e_para\",\"lessequal\"),
                        getCatStr(\"e_para\",\"biggerequal\"));

    dynClear( ddsPanelData );
    sDefaultDp = \"\";
    sDefaultConfig = \"\";
    sDefaultTyp = \"\";
    bError = false;
    ep_initMeldung();
  }

  bError = false;
  sActivePanel = \"gedi/ep_attribTrend_w.pnl\";

  //Buttons setzen
  setMultiValue(\"Help\", \"visible\", true,
                \"Back\", \"visible\", false,
                \"Fore\", \"visible\", false,
                \"OK\", \"visible\", true,
                \"Cancel\", \"visible\", true);

  ep_searchData(\"gedi/ep_attribTrend_w.pnl\", dsData);
  dynRemove(dsData, 1);

  // Daten in Paralisten eintragen
  for(i = 1; i <= dynlen(dsData); i = i + 5)
  {
    dynAppend(asDpe,     dsData[i]);
    dynAppend(asKurve,   dsData[i+1]);
    dynAppend(asName,    dsData[i+2]);
    dynAppend(asEinheit, dsData[i+3]);
    dynAppend(asBereich, dsData[i+4]);
  }

  // Werte in Listen schreiben
  setMultiValue(\"cl_dpe\",     \"items\", asDpe,
                \"cl_kurve\",   \"items\", asKurve,
                \"cl_name\",    \"items\", asName,
                \"cl_einheit\", \"items\", asEinheit,
                \"cl_bereich\", \"items\", asBereich);
  if(dynlen(asKurve) > 0)
  {
    ep_setTrendPanel(1);
  }
  else
  {
    // Hinweis beim ersten Aufruf geben !
    ChildPanelOnCentralModalReturn(\"vision/MessageInfo1\", \"\",
                                   makeDynString(getCatStr(\"e_para\",\"curveinfo\")),df,ds);
  }
}
" 0
 E 0 1 1 0 1 E U  0 E 20 202 54 217
1 2 2 "0s" 0 0 0 192 0 0  20 202 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 6 script
LANG:10004 6 脚本
LANG:10000 6 script
LANG:10027 6 script
2 51
"Text2"
""
1 21 3 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
51 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 31 15 108 30
0 2 2 "0s" 0 0 0 192 0 0  31 15 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 11 Curve name:
LANG:10004 13 曲线名称:
LANG:10000 11 Kurvenname:
LANG:10027 20 Имя кривой:
2 59
"Text1"
""
1 18 110 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
59 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 28 122 105 137
0 2 2 "0s" 0 0 0 192 0 0  28 122 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 11 Curve name:
LANG:10004 13 曲线名称:
LANG:10000 11 Kurvenname:
LANG:10027 20 Имя кривой:
2 61
"Text3"
""
1 17 136 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
61 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 28 148 135 163
0 2 2 "0s" 0 0 0 192 0 0  28 148 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 15 Name in legend:
LANG:10004 19 图例中的名称:
LANG:10000 16 Name in Legende:
LANG:10027 25 Имя в легенде:
2 63
"Text4"
""
1 18 162 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
63 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 28 174 74 189
0 2 2 "0s" 0 0 0 192 0 0  28 174 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 5 Unit:
LANG:10004 7 单位:
LANG:10000 8 Einheit:
LANG:10027 23 Единица изм.:
2 65
"Text5"
""
1 17 217 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
65 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 28 229 111 244
0 2 2 "0s" 0 0 0 192 0 0  28 229 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 6 Range:
LANG:10004 7 范围:
LANG:10000 13 Wertebereich:
LANG:10027 27 Диапазон знач.:
2 67
"Text6"
""
1 123 4 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
67 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 131 16 249 31
0 2 2 "0s" 0 0 0 192 0 0  131 16 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 18 Datapoint element:
LANG:10004 4 DPE:
LANG:10000 18 Datenpunktelement:
LANG:10027 39 Элемент точки данных:
2 69
"Text7"
""
1 125 195 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
69 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 135 207 194 222
0 2 2 "0s" 0 0 0 192 0 0  135 207 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 11 Min. value:
LANG:10004 9 最小值
LANG:10000 8 Minimum:
LANG:10027 15 Минимум:
2 70
"Text8"
""
1 198 195 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
70 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 208 207 271 222
0 2 2 "0s" 0 0 0 192 0 0  208 207 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 11 Max. value:
LANG:10004 10 最大值:
LANG:10000 8 Maximum:
LANG:10027 17 Максимум:
2 77
"Text9"
""
1 320 280 E E E 1 E 0 E N {255,0,0} E N "_3DFace" E E
 E E
77 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
string s, sTyp, sOldTyp;
dyn_string as;

// Erlaubte Typen angeben
as= makeDynString(\"\", \"undefined\", \"bool\", \"int\", \"unsigned\", \"float\");

while(1)
{
  getValue(\"1CB_Typ\", \"text\", sTyp);
  if(sTyp!=sOldTyp)
  {
    if(dynContains(as, sTyp)<1)
    {
      sprintf(s, getCatStr(\"e_para\", \"wrongtype\"), sTyp);
      ChildPanelOnCentralModal(\"vision/MessageInfo1\", \"\",
                               makeDynString(s) );
      DebugN(\"TYP:\",sTyp,\"nicht erlaubt!!\");
      setValue(\"1CB_Typ\", \"selectedPos\", 1);
    }
    sOldTyp= sTyp;
  }  
  delay(0,500);
}

}" 0
 E 0 1 1 0 1 E U  1 E 320 280 387 295
1 2 2 "0s" 0 0 0 192 0 0  320 280 1
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 9 CheckType
LANG:10004 12 检查类型
LANG:10000 9 CheckType
LANG:10027 9 CheckType
13 52
"pb_before"
""
1 387 40 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
52 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  387 40 427 68

P 
4294967295
"pictures/insertB_en.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
bool       bErr;
string     sErr;
int        iPos;
string     sKurve,  sDpe,  sName,  sEinheit,  sBereich;
dyn_string asKurve, asDpe, asName, asEinheit, asBereich;
string     sMin, sMax;
float      fMin, fMax;
int        iBereich;
bool       bName, bEinheit;
dyn_string ds;
dyn_float  df;


  // Werte aus Panel einlesen
  getMultiValue(\"cl_kurve\",   \"selectedPos\", iPos,
                \"tb_kurve\",   \"text\",  sKurve,
                \"cl_kurve\",   \"items\", asKurve,
                \"1TB_dp\",     \"text\",  sDpe,
                \"cl_dpe\",     \"items\", asDpe,
                \"tb_name\",    \"text\",  sName,
                \"cl_name\",    \"items\", asName,
                \"cb_name\",    \"state\", 0, bName,
                \"tb_einheit\", \"text\",  sEinheit,
                \"cl_einheit\", \"items\", asEinheit,
                \"cb_einheit\", \"state\", 0, bEinheit,
                \"tb_min\",     \"text\",  sMin,
                \"tb_max\",     \"text\",  sMax,
                \"cl_bereich\", \"items\", asBereich,
                \"rb_bereich\", \"number\",iBereich);
  // Prüfen ob Dp und Kurve angegeben wurden
  if(dynContains(asKurve, sKurve)>0) sErr= \"dblcurve\";
  if(sKurve==\"\") sErr= \"nocurve\";
  if(sDpe==\"\")   sErr= \"nodp\";
  if(sErr!=\"\")
  { 
    ChildPanelOnCentralModalReturn(\"vision/MessageWarning\", 
                                  getCatStr(\"e_para\",\"warning\"), 
                                  makeDynString(getCatStr(\"e_para\",sErr)),df,ds); 
    return; 
  } 

  // Bereichsstring zuweisen
  switch(iBereich)
  {
    case 0: 
      // Autoskalierung
      sBereich= \"autoscale\";
    break;
    case 1:
      // Fester Wertebereich
      ep_trendSyntaxCheck(bErr, sMin, sMax);
      if(bErr) return;
      sBereich= sMin+\"|\"+sMax;
    break;
    case 2:
      // Wertebereich vom DPE.
      sBereich= \"dpRange\";
    break;
  }  
  // Kommentar von DPE ?
  if(bName)    sName=    \"dpComment\";
  // Einheit von DPE ?
  if(bEinheit) sEinheit= \"dpUnit\";

  // Position ermitteln
  if(iPos<1) iPos=dynlen(asKurve);
  if(iPos<1) iPos=1;

  dynInsertAt(asKurve,   sKurve,   iPos);
  dynInsertAt(asDpe,     sDpe,     iPos);
  dynInsertAt(asName,    sName,    iPos);
  dynInsertAt(asEinheit, sEinheit, iPos);
  dynInsertAt(asBereich, sBereich, iPos);
  setMultiValue(\"cl_kurve\",   \"items\", asKurve,
                \"cl_dpe\",     \"items\", asDpe,
                \"cl_name\",    \"items\", asName,
                \"cl_einheit\", \"items\", asEinheit,
                \"cl_bereich\", \"items\", asBereich);
  setMultiValue(\"cl_kurve\",   \"selectedPos\", iPos,
                \"cl_dpe\",     \"selectedPos\", iPos);
}
" 0
 E E E
13 53
"pb_delete"
""
1 387 70 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
53 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  387 70 427 98

P 
4294967295
"pictures/dpeMon_del.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
int        iPos;
dyn_string asKurve, asDpe, asName, asEinheit, asBereich;


  // Werte aus Panel einlesen
  getMultiValue(\"cl_kurve\",   \"selectedPos\", iPos,
                \"cl_kurve\",   \"items\", asKurve,
                \"cl_dpe\",     \"items\", asDpe,
                \"cl_name\",    \"items\", asName,
                \"cl_einheit\", \"items\", asEinheit,
                \"cl_bereich\", \"items\", asBereich);

  // Position ermitteln
  if(iPos<1) return;

  dynRemove(asKurve,   iPos);
  dynRemove(asDpe,     iPos);
  dynRemove(asName,    iPos);
  dynRemove(asEinheit, iPos);
  dynRemove(asBereich, iPos);

  if(dynlen(asKurve)<iPos)  iPos= dynlen(asKurve);
  setMultiValue(\"cl_kurve\",   \"items\", asKurve,
                \"cl_dpe\",     \"items\", asDpe,
                \"cl_name\",    \"items\", asName,
                \"cl_einheit\", \"items\", asEinheit,
                \"cl_bereich\", \"items\", asBereich);
  setMultiValue(\"cl_kurve\",   \"selectedPos\", iPos,
                \"cl_dpe\",     \"selectedPos\", iPos);
  ep_setTrendPanel(iPos);
}
" 0
 E E E
13 54
"pb_after"
""
1 346 40 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
54 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  346 40 386 68

P 
4294967295
"pictures/insertA_en.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
bool       bErr;
string     sErr;
int        iPos;
string     sKurve,  sDpe,  sName,  sEinheit,  sBereich;
dyn_string asKurve, asDpe, asName, asEinheit, asBereich;
string     sMin, sMax;
float      fMin, fMax;
int        iBereich;
bool       bName, bEinheit;
dyn_string ds;
dyn_float  df;


  // Werte aus Panel einlesen
  getMultiValue(\"cl_kurve\",   \"selectedPos\", iPos,
                \"tb_kurve\",   \"text\",  sKurve,
                \"cl_kurve\",   \"items\", asKurve,
                \"1TB_dp\",     \"text\",  sDpe,
                \"cl_dpe\",     \"items\", asDpe,
                \"tb_name\",    \"text\",  sName,
                \"cl_name\",    \"items\", asName,
                \"cb_name\",    \"state\", 0, bName,
                \"tb_einheit\", \"text\",  sEinheit,
                \"cl_einheit\", \"items\", asEinheit,
                \"cb_einheit\", \"state\", 0, bEinheit,
                \"tb_min\",     \"text\",  sMin,
                \"tb_max\",     \"text\",  sMax,
                \"cl_bereich\", \"items\", asBereich,
                \"rb_bereich\", \"number\",iBereich);
  // Prüfen ob Dp und Kurve angegeben wurden
  if(dynContains(asKurve, sKurve)>0) sErr= \"dblcurve\";
  if(sKurve==\"\") sErr= \"nocurve\";
  if(sDpe==\"\")   sErr= \"nodp\";
  if(sErr!=\"\")
  { 
    ChildPanelOnCentralModalReturn(\"vision/MessageWarning\", 
                                  getCatStr(\"e_para\",\"warning\"), 
                                  makeDynString(getCatStr(\"e_para\",sErr)),df,ds); 
    return; 
  } 

  // Bereichsstring zuweisen
  switch(iBereich)
  {
    case 0: 
      // Autoskalierung
      sBereich= \"autoscale\";
    break;
    case 1:
      // Fester Wertebereich
      ep_trendSyntaxCheck(bErr, sMin, sMax);
      if(bErr) return;
      sBereich= sMin+\"|\"+sMax;
    break;
    case 2:
      // Wertebereich vom DPE.
      sBereich= \"dpRange\";
    break;
  }  
  // Kommentar von DPE ?
  if(bName)    sName=    \"dpComment\";
  // Einheit von DPE ?
  if(bEinheit) sEinheit= \"dpUnit\";

  // Position ermitteln
  if(iPos<1) iPos=dynlen(asKurve);
  iPos++;

  dynInsertAt(asKurve,   sKurve,   iPos);
  dynInsertAt(asDpe,     sDpe,     iPos);
  dynInsertAt(asName,    sName,    iPos);
  dynInsertAt(asEinheit, sEinheit, iPos);
  dynInsertAt(asBereich, sBereich, iPos);
  setMultiValue(\"cl_kurve\",   \"items\", asKurve,
                \"cl_dpe\",     \"items\", asDpe,
                \"cl_name\",    \"items\", asName,
                \"cl_einheit\", \"items\", asEinheit,
                \"cl_bereich\", \"items\", asBereich);
  setMultiValue(\"cl_kurve\",   \"selectedPos\", iPos,
                \"cl_dpe\",     \"selectedPos\", iPos);
}
" 0
 E E E
13 55
"pb_modify"
""
1 347 70 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
55 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  347 70 387 98

P 
4294967295
"pictures/apply_en.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
bool       bErr;
string     sErr;
int        iPos;
string     sKurve,  sDpe,  sName,  sEinheit,  sBereich;
dyn_string asKurve, asDpe, asName, asEinheit, asBereich;
string     sMin, sMax;
float      fMin, fMax;
int        iBereich;
bool       bName, bEinheit;
dyn_string ds;
dyn_float  df;


  // Werte aus Panel einlesen
  getMultiValue(\"cl_kurve\",   \"selectedPos\", iPos,
                \"tb_kurve\",   \"text\",  sKurve,
                \"cl_kurve\",   \"items\", asKurve,
                \"1TB_dp\",     \"text\",  sDpe,
                \"cl_dpe\",     \"items\", asDpe,
                \"tb_name\",    \"text\",  sName,
                \"cl_name\",    \"items\", asName,
                \"cb_name\",    \"state\", 0, bName,
                \"tb_einheit\", \"text\",  sEinheit,
                \"cl_einheit\", \"items\", asEinheit,
                \"cb_einheit\", \"state\", 0, bEinheit,
                \"tb_min\",     \"text\",  sMin,
                \"tb_max\",     \"text\",  sMax,
                \"cl_bereich\", \"items\", asBereich,
                \"rb_bereich\", \"number\",iBereich);
  // Prüfen ob Dp und Kurve angegeben wurden
  if(dynContains(asKurve, sKurve)>0 &&
     dynContains(asKurve, sKurve)!=iPos) sErr= \"dblcurve\";
  if(sKurve==\"\") sErr= \"nocurve\";
  if(sDpe==\"\")   sErr= \"nodp\";
  if(sErr!=\"\")
  { 
    ChildPanelOnCentralModalReturn(\"vision/MessageWarning\", 
                                  getCatStr(\"e_para\",\"warning\"), 
                                  makeDynString(getCatStr(\"e_para\",sErr)),df,ds); 
    return; 
  } 

  // Bereichsstring zuweisen
  switch(iBereich)
  {
    case 0: 
      // Autoskalierung
      sBereich= \"autoscale\";
    break;
    case 1:
      // Fester Wertebereich
      ep_trendSyntaxCheck(bErr, sMin, sMax);
      if(bErr) return;
      sBereich= sMin+\"|\"+sMax;
    break;
    case 2:
      // Wertebereich vom DPE.
      sBereich= \"dpRange\";
    break;
  }  
  // Kommentar von DPE ?
  if(bName)    sName=    \"dpComment\";
  // Einheit von DPE ?
  if(bEinheit) sEinheit= \"dpUnit\";

  // Position ermitteln
  if(iPos<1) iPos=dynlen(asKurve);
  if(iPos<1) iPos= 1;

  asKurve[iPos]=   sKurve;
  asDpe[iPos]=     sDpe;
  asName[iPos]=    sName;
  asEinheit[iPos]= sEinheit;
  asBereich[iPos]= sBereich;
  setMultiValue(\"cl_kurve\",   \"items\", asKurve,
                \"cl_dpe\",     \"items\", asDpe,
                \"cl_name\",    \"items\", asName,
                \"cl_einheit\", \"items\", asEinheit,
                \"cl_bereich\", \"items\", asBereich);
  setMultiValue(\"cl_kurve\",   \"selectedPos\", iPos,
                \"cl_dpe\",     \"selectedPos\", iPos);
}
" 0
 E E E
17 56
"cl_dpe"
""
1 126 31 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
56 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  126 31 336 110
0

E
"main()
{
int  iPos;
bool b;

  ep_checkTrendChange(b);
  if(b)
  {
    getValue(\"cl_dpe\",   \"selectedPos\", iPos);
    ep_setTrendPanel(iPos);
  }
  else
  {
    getValue(\"cl_kurve\", \"selectedPos\", iPos);
    setValue(\"cl_dpe\",   \"selectedPos\", iPos);
  }
}
" 0

E

0 0
17 58
"cl_kurve"
""
1 26 31 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
58 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  26 31 126 110
0

E
"main()
{
int  iPos;
bool b;

  ep_checkTrendChange(b);
  if(b)
  {
    getValue(\"cl_kurve\", \"selectedPos\", iPos);
    ep_setTrendPanel(iPos);
  }
  else
  {
    getValue(\"cl_dpe\",   \"selectedPos\", iPos);
    setValue(\"cl_kurve\", \"selectedPos\", iPos);
  }
}
" 0

E

0 0
14 60
"tb_kurve"
""
1 130.1025641025641 115 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
60 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  130 115 282 144
3 "0s" 0 0 0 0 0 -1  E E E
14 62
"tb_name"
""
1 130.1025641025641 141 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
62 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  130 141 282 170
3 "0s" 0 0 0 0 0 -1  E "main()
{
bool bState, bStateNew;

  while(1)
  {
     getValue(\"cb_name\",\"state\",0,bStateNew);
     if(bStateNew!=bState)
     {
       bState= bStateNew;
       setValue(\"\", \"editable\", !bState,
                    \"enabled\",  !bState);
     }
     delay(0,500);
   }
}
" 0
 E
14 64
"tb_einheit"
""
1 130.1025641025641 167 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
64 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  130 167 282 196
3 "0s" 0 0 0 0 0 -1  E "main()
{
bool bState, bStateNew;

  while(1)
  {
     getValue(\"cb_einheit\",\"state\",0,bStateNew);
     if(bStateNew!=bState)
     {
       bState= bStateNew;
       setValue(\"\", \"editable\", !bState,
                    \"enabled\",  !bState);
     }
     delay(0,500);
   }
}
" 0
 E
14 66
"tb_min"
""
1 130.0845070422535 222 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
66 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  130 222 202 251
3 "0s" 0 0 0 0 0 -1  E E E
14 68
"tb_max"
""
1 203.169014084507 222 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
68 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  203 222 272 251
3 "0s" 0 0 0 0 0 -1  E E E
20 71
"cb_name"
""
1 283 143 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
71 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  283 143 434 171
1
T 
4
LANG:10001 15 DPE description
LANG:10004 9 DPE描述
LANG:10000 16 DPE-Beschreibung
LANG:10027 20 Описание DPE

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
EE20 72
"cb_einheit"
""
1 283 169 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
72 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  283 169 407 197
1
T 
4
LANG:10001 8 DPE unit
LANG:10004 9 DPE单位
LANG:10000 11 DPE-Einheit
LANG:10027 17 Ед. изм. DPE

1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
EE19 73
"rb_bereich"
""
1 282.7083333333334 188 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
73 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  283 188 452 275
3
T 
4
LANG:10001 9 Autoscale
LANG:10004 12 自动缩放
LANG:10000 14 Autoskalierung
LANG:10027 38 Автомасштабирование

1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
T 
4
LANG:10001 10 Fix values
LANG:10004 9 固定值
LANG:10000 9 Festwerte
LANG:10027 36 Фиксированные знач.

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
T 
4
LANG:10001 14 WinCC OA range
LANG:10004 18 WinCC OA 值范围
LANG:10000 21 WinCC OA Wertebereich
LANG:10027 25 Диапазон WinCC OA

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
"main()
{
int i;
bool bState, bStateNew;
  while(1)
  {
     getValue(\"\", \"number\", i);
     bStateNew= (i!=1);
     if(bStateNew!=bState)
     {
       bState= bStateNew;
       setMultiValue(\"tb_min\", \"editable\", !bState,
                     \"tb_min\", \"enabled\",  !bState,
                     \"tb_max\", \"editable\", !bState,
                     \"tb_max\", \"enabled\",  !bState);
     }
     delay(0,500);
   }
}
" 0
 E
17 74
"cl_name"
""
1 206 31 E E E 1 E 0 E N "_3DText" E N {255,255,153} E E
 E E
74 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  206 31 251 110
0

E
E
E

0 0
17 75
"cl_einheit"
""
1 251 31 E E E 1 E 0 E N "_3DText" E N {255,255,153} E E
 E E
75 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  251 31 296 110
0

E
E
E

0 0
17 76
"cl_bereich"
""
1 296 31 E E E 1 E 0 E N "_3DText" E N {255,255,153} E E
 E E
76 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,50,0,0,0,0,0
0  296 31 341 110
0

E
E
E

0 0
0
LAYER, 1 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
0
LAYER, 2 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 3 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
1 80 1 "" 0
0
0
LAYER, 4 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 5 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 6 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 7 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
3 0 "" -1
"layoutAlignment" "AlignCenter"
"" ""
"gedi/ep_funktionsrahmen.pnl" 57 26 T 0 1 0 1 -59 -21
0
3 1 "" -1
"layoutAlignment" "AlignCenter"
"UDS dpTextChange" "void dpTextChange(string dp)
{
  string sConfig, sConfigNew;

  getValue(\"1dpConfig\", \"text\", sConfig);
  sConfigNew = \":_offline.._value\";

  if(sConfigNew != sConfig)
  {
    setValue(\"1dpConfig\", \"text\", sConfigNew);
  }
}
"
"" ""
"gedi/ep_dpsel.pnl" 170 75 T 0 1 0 1 -125 226
0
0
