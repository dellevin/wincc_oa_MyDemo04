V 13
4
LANG:10001 10 Defination
LANG:10004 6 定义
LANG:10000 10 Definition
LANG:10027 22 Определение
PANEL,-1 -1 507 372 N "_3DFace" 9
"$DATATYPE"
"$DESCR"
"$DPE"
"$DPGET"
"$DPSET"
"$EDIT"
"$EXISTINGNAMES"
"$KONFIGS"
"$NAME"
"main()
{
  string sKonfigs = $KONFIGS;
  dsExistingNames = stringToDynString($EXISTINGNAMES);

  if ( isDollarDefined(\"$DPSET\") )
    if ( (bool)$DPSET == true)
      bDpSet = true;
  
  if ( bDpSet )
  {
    string s = frame.text;
    strreplace(s, \"Connect\", \"dpSet\");
    strreplace(s, \"connect\", \"dpSet\");
    frame.text = s;
  }
  
  if ( isDollarDefined(\"$DPGET\") )
    if ( (bool)$DPGET == true)
    {
      string s = frame.text;
      strreplace(s, \"Connect\", \"dpGet\");
      strreplace(s, \"connect\", \"dpGet\");
      frame.text = s;
    }
  
  if($EDIT == \"TRUE\")
  {
    if ( !bDpSet )
      txtName.editable(false);
    else
    {
      lblName.enabled = false;
      txtName.enabled = false;
    }
  }
  else
  {
    if ( !bDpSet )
      sKonfigs = \"_online.._value\";
    else
      sKonfigs = \"_original.._value\";
  }
  
  txtName.text($NAME);
  txtAbsoluteDPE.text($DPE);
  
  if($DPE != \"\")
  {
    cbDPE.selectedPos(2);
    setValue(\"grFixDPE\", \"enabled\", true);
    setValue(\"grDataType\", \"enabled\", false);
  }
  else
  {
    setValue(\"grFixDPE\", \"enabled\", false);
    setValue(\"grDataType\", \"enabled\", true);
  }
  
  cbDatatype.text($DATATYPE);

  txtDescr.text($DESCR!=\"\"?getCatStr(\"symple\",$DESCR):\"\");
  
  if ($DESCR != \"\")
  {
    for (int i = 0; i < getNoOfLangs(); i++)
    {
      string sTemp = getCatStr(SD_SYMPLE_CAT, $DESCR, i);
          
      if(!dynlen(getLastError()))
        setLangString(lsDescr, i, sTemp);
    }
  }
  
  lstProps.items(propsAndDescr(stringToDynString(sKonfigs)));
}
" 0
 E E E E 1 -1 -1 0  -1 0
""0  1
E "#uses \"CtrlXml\"

langString lsDescr;
dyn_string dsExistingNames;
bool bDpSet = false;

bool checkInput()
{  
  string sName = txtName.text;
  
  if ( dynContains(dsExistingNames, sName) && $EDIT == \"FALSE\" )
  {
    string sTemp = getCatStr(\"ScriptWizard\", \"VariableAlreadyExists\");
    
    strreplace(sTemp, \"$\", sName);
    
    ChildPanelOnCentralModal(\"vision/MessageWarning\", \"\", makeDynString(\"$1:\"+sTemp));
    return false;
  }
  
  if ( (nameCheck(sName) != 0 || sName == \"\") && ( txtName.editable && txtName.enabled ) )
  {
    ChildPanelOnCentralModal(\"vision/MessageWarning\", \"\", makeDynString(\"$1:\"+getCatStr(\"ScriptWizard\", \"invalidName\")));
    return false;
  }
  return true;
}

dyn_string propsAndDescr(dyn_string dsProps)
{
  mapping mConfigs = loadFromFile(getPath(DATA_REL_PATH,\"ScriptWizard/connectConfigs.xml\"));
  
  for(int i = 1; i <= dynlen(dsProps); i++)
  {
    string sConfig = strsplit(dsProps[i], \".\")[1];
    string sAttr = strsplit(dsProps[i], \".\")[3];
    
    if ( mappingHasKey(mConfigs[sConfig], sAttr) )
      if ( mappingHasKey(mConfigs[sConfig][sAttr], \"shortTextKey\") )
        dsProps[i] += \" (\"+getCatStr(\"ScriptWizard\", mConfigs[sConfig][sAttr][\"shortTextKey\"])+\")\";
  }  
  
  return dsProps;
}

mapping loadFromFile(string sFile)
{
  mapping mConfig;
  
  string errMsg;
  mapping mEmpty;
  int errLine, errColumn;
  int docId = xmlDocumentFromFile(sFile, errMsg, errLine, errColumn);//get the xmlDocumentId from the file
  int settingId = xmlFirstChild(docId);                  //get the nodeId from the connection list

  int configID = xmlFirstChild(docId, settingId);           //get the nodeId from the config node

  if (configID >= 1)
  {
    do                                                   //foreach element of dpt's
    {
      mapping mAttr = xmlElementAttributes(docId, configID);//get the attributes from the dpt node
      string sConfig = mAttr[\"name\"];
      if ( !mappingHasKey(mConfig, mAttr[\"name\"]) )
        mConfig[mAttr[\"name\"]] = mEmpty;
      
      if ( mappingHasKey(mAttr, \"shortTextKey\") )
      {
        if ( !mappingHasKey(mConfig[sConfig], \"shortTextKey\") )
          mConfig[sConfig][\"shortTextKey\"] = mAttr[\"shortTextKey\"];
      }
      if ( mappingHasKey(mAttr, \"toolTipKey\") )
      {
        if ( !mappingHasKey(mConfig[sConfig], \"toolTipKey\") )
          mConfig[sConfig][\"toolTipKey\"] = mAttr[\"toolTipKey\"];
      }

      int attributeID = xmlFirstChild(docId, configID);       //get the nodeId from the \"element\" element
      
      if (attributeID >= 1)
      {
        do                                               //foreach element of \"elements\"
        {
          mapping mAttr = xmlElementAttributes(docId, attributeID);//get the attributes from the element node

          if ( bDpSet && mappingHasKey(mAttr, \"dpSet\") && (bool)mAttr[\"dpSet\"] == false )
          {
            attributeID = xmlNextSibling(docId, attributeID);
            continue;
          }
          
          if ( !mappingHasKey(mConfig[sConfig], mAttr[\"name\"]) )
            mConfig[sConfig][mAttr[\"name\"]] = mEmpty;
          
          if ( mappingHasKey(mAttr, \"shortTextKey\") )
          {
            if ( !mappingHasKey(mConfig[sConfig][mAttr[\"name\"]], mAttr[\"shortTextKey\"]) )
              mConfig[sConfig][mAttr[\"name\"]][\"shortTextKey\"] = mAttr[\"shortTextKey\"];
          }
          if ( mappingHasKey(mAttr, \"toolTipKey\") )
          {
            if ( !mappingHasKey(mConfig[sConfig][mAttr[\"name\"]], mAttr[\"toolTipKey\"]) )
              mConfig[sConfig][mAttr[\"name\"]][\"toolTipKey\"] = mAttr[\"toolTipKey\"];
          }
          
          attributeID = xmlNextSibling(docId, attributeID);            //get the next nodeId from the \"element\" element
        }
        while(attributeID >= 0);
      }
      configID = xmlNextSibling(docId, configID);                        //get the next nodeId from the dpt element
    }
    while(configID >= 0);
  }
  
  xmlCloseDocument(docId);                                         //close xmlDocument
//   DebugN(mConfig);
  return mConfig;                                                  //return the mapping of the file
}" 0
 2
"CBRef" "1"
"EClose" E
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
30 2
"frame"
""
1 10 2 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
2 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 1.088888888888889 0 1.143884892086331 -0.88888888888888 -0.2877697841726623 0 E 10 2 461 281
4
LANG:10001 26 Arial,10,-1,5,75,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,75,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,75,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,75,0,0,0,0,0
0 4
LANG:10001 14 Define connect
LANG:10004 12 定义连接
LANG:10000 18 Connect definieren
LANG:10027 31 Определить связь
2 5
"PRIMITIVE_TEXT2"
""
1 22 115 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 22 115 80 130
0 2 2 "0s" 0 0 0 192 0 0  22 115 1
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0 4
LANG:10001 10 Data type:
LANG:10004 13 数据类型:
LANG:10000 9 Datentyp:
LANG:10027 20 Тип данных:
13 11
"BUTTON_OK"
""
1 179 208 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
50 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  317 336 405 364

T 
4
LANG:10001 2 OK
LANG:10004 6 确定
LANG:10000 2 OK
LANG:10027 2 OK
"main()
{
  if ( checkInput() )
  {
    dyn_anytype daTemp = makeDynAnytype(txtName.text, txtAbsoluteDPE.text, cbDatatype.text, lsDescr);
    dyn_string dsProps;
    
    dynAppend(dsProps, lstProps.items());
    
    dynUnique(dsProps);
    
    for(int i = 1; i <= dynlen(dsProps); i++)
    {
      if( strpos(dsProps[i], \" \") != -1 )
        dsProps[i] = strsplit(dsProps[i], \" \")[1];
    }
    
    if ( dynlen(dsProps) == 0 && !dynContains(dsProps, \"_online.._value\") )
      dynAppend(dsProps, \"_online.._value\");
    
    dynAppend(daTemp, dsProps);
    
    panelOff(makeDynAnytype(myModuleName(), myPanelName(), daTemp));
  }
  else
    ; // fehlerausgabe...
}
" 0
 E E E
13 12
"BUTTON_CANCEL"
""
1 109 208 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
51 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  407 336 495 364

T 
4
LANG:10001 6 Cancel
LANG:10004 6 取消
LANG:10000 9 Abbrechen
LANG:10027 16 Отменить
"main()
{
  panelOff(makeDynAnytype(myModuleName(), myPanelName(), makeDynAnytype()));
}" 0
 E E E
22 18
"cbDatatype"
""
1 143 112 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
34 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  141 110 492 136
0

"main()
{
  dyn_string dsTemp = sdGetAllDatatypes(true);
  
  dynRemove(dsTemp, dynContains(dsTemp, \"anytype\"));
  dynRemove(dsTemp, dynContains(dsTemp, \"ulong\"));
  dynRemove(dsTemp, dynContains(dsTemp, \"long\"));
  dynRemove(dsTemp, dynContains(dsTemp, \"double\"));
  dynRemove(dsTemp, dynContains(dsTemp, \"mapping\"));
  dynRemove(dsTemp, dynContains(dsTemp, \"mixed\"));
  dynRemove(dsTemp, dynContains(dsTemp, \"unsigned\"));  
  dynRemove(dsTemp, dynContains(dsTemp, \"bit64\"));  
  
  this.items = dsTemp;
}
" 0

E
E
 0 0
2 29
"lblName"
""
1 22 31 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
27 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 22 31 62 46
0 2 2 "0s" 0 0 0 192 0 0  22 31 1
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0 4
LANG:10001 5 Name:
LANG:10004 7 名称:
LANG:10000 5 Name:
LANG:10027 7 Имя:
13 31
"PUSH_BUTTON14"
""
1 468 83 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
31 0 0 0 0 0
E E E
0
4
LANG:10001 19 Datapoint selection
LANG:10004 17 数据点DP选择
LANG:10000 17 Datenpunktauswahl
LANG:10027 34 Выбор точки данных

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  466 81 494 109

P 
4294967295
"pictures/StandardIcons/dpeMon_tree_20.png"
4
LANG:10001 12 PUSH_BUTTON1
LANG:10004 12 PUSH_BUTTON1
LANG:10000 3 ???
LANG:10027 3 ???
"main()
{
  string s;
  
  dpSelector(s, false, \"OWN_SYSTEM_NAME_NO_SYS\");

  if ( s == \"\" )
    return;

  if ( strpos(s, \".\") == -1 )
    s += \".\";
  
  txtAbsoluteDPE.text(s);

  int dpElType = dpAttributeType(s+((dpElementType(s) == DPEL_STRUCT)?\":_general.._type\":\":_online.._value\"));
  addGlobal(\"ScriptWizardDummy\", dpElType);
  cbDatatype.text = getTypeName(ScriptWizardDummy);
  removeGlobal(\"ScriptWizardDummy\");
}" 0
 E E E
1 61 0 "" 0
0
13 38
"PUSH_BUTTON13"
""
1 -291 38 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
49 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  12 336 100 364

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main()
{
  std_help(\"scrwiz_dpconnect_define\");
}" 0
 E E E
14 41
"txtName"
""
1 144 6 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
16 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  141 26 492 52
3 "0s" 0 0 0 0 0 -1  E E E
2 50
"PRIMITIVE_TEXT9"
""
1 22 59 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
42 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 22 59 76 74
0 2 2 "0s" 0 0 0 192 0 0  22 59 1
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0 4
LANG:10001 8 Connect:
LANG:10004 7 连接:
LANG:10000 8 Connect:
LANG:10027 11 Связь:
22 51
"cbDPE"
""
1 143 56 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
23 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  141 54 492 80
2
4
LANG:10001 20 Input variable ($DP)
LANG:10004 17 输入变量($DP)
LANG:10000 22 Eingangsvariable ($DP)
LANG:10027 41 Входная переменная ($DP)

0
4
LANG:10001 12 Absolute DPE
LANG:10004 9 绝对DPE
LANG:10000 9 Fixes DPE
LANG:10027 22 Имеющийся DPE

0

E
"main()
{
  if(this.selectedPos() == 2)
  {
    setValue(\"grFixDPE\", \"enabled\", true);
    setValue(\"grDataType\", \"enabled\", false);
    if ( bDpSet )
    {
      txtName.text = \"\";
      txtName.enabled = false;
      lblName.enabled = false;
    }
//     setValue(\"grProps\", \"enabled\", false);    
  }
  else
  {
    setValue(\"grFixDPE\", \"enabled\", false);
    setValue(\"grDataType\", \"enabled\", true);
//     setValue(\"grProps\", \"enabled\", true);
    txtAbsoluteDPE.text(\"\");
    if ( bDpSet )
    {
      txtName.enabled = true;
      lblName.enabled = true;
    }
  }
}" 0

E
 0 0
2 52
"PRIMITIVE_TEXT10"
""
1 22 144 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
44 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 22 144 110 159
0 2 2 "0s" 0 0 0 192 0 0  22 144 1
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0 4
LANG:10001 11 Properties:
LANG:10004 7 属性:
LANG:10000 14 Eigenschaften:
LANG:10027 17 Свойства:
17 53
"lstProps"
""
1 142 140 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
35 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  140 138 466 282
0

E
E
E

0 0
13 54
"PUSH_BUTTON15"
""
1 468 140 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
43 0 0 0 0 0
E E E
0
4
LANG:10001 18 Property selection
LANG:10004 12 属性选择
LANG:10000 20 Eigenschaftenauswahl
LANG:10027 27 Выбор свойства

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  466 138 494 166

T 
4
LANG:10001 3 ...
LANG:10004 3 ...
LANG:10000 3 ...
LANG:10027 3 ...
"main()
{
  dyn_string ds;
  dyn_float df;
  
  ChildPanelOnCentralModalReturn(\"gedi/ScriptWizard/Dialogs/DPEPropertySelection.pnl\", \"a\", 
                                 makeDynString(\"$DATATYPE:\"+cbDatatype.text,\"$PROPS:\"+dynStringToString(lstProps.items),\"$DPSET:\"+bDpSet, \"$DPE:\"+txtAbsoluteDPE.text),df,ds);
  
  if(dynlen(df) > 0)
    if(df[1] == 1)
    {
      ds = propsAndDescr(ds);
      lstProps.items(ds);
    }
}" 0
 E E E
2 55
"PRIMITIVE_TEXT11"
""
1 22 289 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
47 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 22 289 107 304
0 2 2 "0s" 0 0 0 192 0 0  22 289 1
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0 4
LANG:10001 12 Description:
LANG:10004 7 描述:
LANG:10000 13 Beschreibung:
LANG:10027 17 Описание:
14 56
"txtDescr"
""
1 144 14 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
48 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  140 284 491 310
2 "0s" 0 0 0 0 0 -1  "main()
{
  langEditor(lsDescr);
  txtDescr.text(lsDescr);
}" 0
 E E
13 57
"PUSH_BUTTON16"
""
1 468 168 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
45 0 0 0 0 0
E E E
0
4
LANG:10001 21 Delete selected entry
LANG:10004 18 删除所选条目
LANG:10000 29 Selektierten Eintrag löschen
LANG:10027 48 Удалить выбранный элемент

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  466 166 494 194

P 
4294967295
"pictures/StandardIcons/delete_20.png"
4
LANG:10001 3 ...
LANG:10004 3 ...
LANG:10000 3 ...
LANG:10027 3 ...
"main()
{
  lstProps.deletePos(lstProps.selectedPos());
}" 0
 E E E
13 58
"PUSH_BUTTON17"
""
1 468 196 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
46 0 0 0 0 0
E E E
0
4
LANG:10001 18 Delete all entries
LANG:10004 18 删除所有条目
LANG:10000 23 Alle Einträge löschen
LANG:10027 38 Удалить все элементы

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  466 194 494 222

P 
4294967295
"pictures/StandardIcons/delete_all_20.png"
4
LANG:10001 3 ...
LANG:10004 3 ...
LANG:10000 3 ...
LANG:10027 3 ...
"main()
{
  lstProps.deleteAllItems();
}" 0
 E E E
14 59
"txtAbsoluteDPE"
""
1 143 8 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
29 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  141 82 467 108
2 "0s" 0 0 0 0 0 -1  E E E
2 60
"PRIMITIVE_TEXT12"
""
1 22 86 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
52 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"sizePolicy" "Fixed Fixed"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 22 86 91 101
0 2 2 "0s" 0 0 0 192 0 0  22 86 1
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0 4
LANG:10001 13 Absolute DPE:
LANG:10004 9 绝对DPE
LANG:10000 10 Fixes DPE:
LANG:10027 4 DPE:
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
3 0 "PANEL_REF1" -1
"" ""
"objects_parts/STD_OBJECTS/ButtonBarBackground.pnl" 0 485 T 34 1.302605210420842 0 1 -16 -157
0
1 1 "grFixDPE" -1
3 0 
60 59 31 

"" ""
1 2 "grDataType" -1
2 0 
5 18 

"" ""
1 3 "grProps" -1
5 0 
52 53 54 57 58 

"" ""
0
