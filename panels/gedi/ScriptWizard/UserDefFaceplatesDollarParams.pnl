V 13
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 628 448 N "_3DFace" 3
"$DPT"
"$Dollar"
"$File"
"#uses \"sdScriptWizard.ctl\"
main()
{
  string sDP,sTreeSelected;//=TREE.selectedItem();
  string sItem;
  dyn_string dsShortNames,dsFileNames;
  dyn_string dsDollars,dsDollarValues;
  dyn_string dsTableDollars,dsTableDollarValues;
  int pos;
  string sWork;
  sDP=$DPT;
  string sDollarParams = $Dollar;
  
  strreplace(sDollarParams,\"\\\"\",\"\");

  dyn_string dsTemp = stringToDynString(sDollarParams);
  dyn_string dsTemp2;
  
  for(int i = 1; i <= dynlen(dsTemp); i++)
  {
    
    dsTemp2 = strsplit(dsTemp[i], \":\");
    if (dynlen(dsTemp2)==1)
    {
      dynAppend(dsDollars, dsTemp2[1]);
      dynAppend(dsDollarValues, \"\");
    }
    else
    {
      dynAppend(dsDollars, dsTemp2[1]);
      dynAppend(dsDollarValues, dsTemp2[2]);
    }
  }
  
  TABLE1.tableMode(TABLE_SELECT_BROWSE);
  TABLE1.selectByClick(TABLE_SELECT_LINE);
  
//   DebugN(\"$DPT:\"+sDP);
  DPTTREE.addColumn(\"ITEM\");        // Add just one column
  DPTTREE.showHeader(false);         // and we need no header
  if (sDP==\"\")// If no Symbol is selected an empty one is shown therefore no need to fill in the fields.
  {
    
    string sId=TREE.selectedItem();
    strreplace(sId,\"SYMBOLSNODE|\",\"\");
    DPTTREE.clear();
    DPTTREE.appendItemNC(\"\",\"TYPE|\"+sId,sId);
    DPTTREE.setIcon(\"TYPE|\"+sId,0,\"dptree/dptype.png\");
    DPTTREE.setExpandable(\"TYPE|\"+sId,TRUE);
    DPTTREE.setOpen(\"TYPE|\"+sId,TRUE);
    DPTTREE.setDragEnabled(\"TYPE|\"+sId,TRUE);
    return;
  }
  
  strreplace(sDP,\"_mp_\",\"\");
  

  DPTTREE.clear();
  
  string sDPType;
  
  dsTemp2 = strsplit($DPT,\"_\");

  sDPType = dsTemp2[3];
  for (int j=4; j<=dynlen(dsTemp2); j++)
  {
    sDPType += \"_\" + dsTemp2[j];
  }
  
  strreplace(sDPType,\"SYMBOLS|\",\"\");
  DPTTREE.appendItemNC(\"\",\"TYPE|\"+sDPType,sDPType);
  DPTTREE.setIcon(\"TYPE|\"+sDPType,0,\"dptree/dptype.png\");
  DPTTREE.setExpandable(\"TYPE|\"+sDPType,TRUE);
  DPTTREE.setOpen(\"TYPE|\"+sDPType,TRUE);
    
  dyn_string dsDPNames = dpNames(\"*\",sDPType);
  if (dynlen(dsDPNames)>0)
  {
    if (dpElementType(dsDPNames[1]+\".\")!=DPEL_STRUCT)// it s not a Struct at the beginning the
    {
      DPTTREE.setDragEnabled(\"TYPE|\"+sDPType,TRUE);
    }
  }
  
  for (int i=1;i<=dynlen(dsDollars);i++)
  {
    dynAppend(dsTableDollars,dsDollars[i]);
    dynAppend(dsTableDollarValues,dsDollarValues[i]);      
  }

  string sFileName = $File;
  
  if (isfile(getPath(PANELS_REL_PATH,sFileName)))
  {
    dyn_string dsDollarsFile = getDollarParamsFromPanel(sFileName);
//     DebugN(\"bhoer Dollarsfile:\",dsDollarsFile+\"\\n Dollars:\",dsTableDollars);
    if (dynContains(dsDollarsFile,\"$DP\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$DP\"));    
    }
    if (dynContains(dsDollarsFile,\"$SYMBOL_FACEPLATE_CONFIG\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$SYMBOL_FACEPLATE_CONFIG\"));   
    }
    if (dynContains(dsDollarsFile,\"$SYMBOL_FILE\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$SYMBOL_FILE\"));      
    }
    dyn_string dsTemp1 = dsTableDollars;
    dyn_string dsTemp2 = dsDollarsFile;
    
    dynSort(dsTemp1);
    dynSort(dsTemp2);
    
    if (dsTemp1 == dsTemp2)
    {
      TABLE1.appendLines(dynlen(dsTableDollars),\"DOLLAR\",dsTableDollars,\"VALUE\",dsTableDollarValues);
      TABLE2.appendLines(dynlen(dsTableDollars),\"DOLLAR\",dsTableDollars,\"VALUE\",dsTableDollarValues);
    }
    else
    {
      dyn_string ds;
      dyn_float df;
      ChildPanelOnCentralModalReturn(\"vision/MessageInfo\",getCatStr(\"SimpleSymbols\",\"SymbolsDollarWrong\"),
      makeDynString(getCatStr(\"SimpleSymbols\",\"SymbolsDollarWrong\"),
                    getCatStr(\"para\",\"yes\"), getCatStr(\"para\",\"no\")), 
      df,ds);
      if (dynlen(df)<1)//X Close
      { 
        return; 
      }
      else if (df[1]!=1)//No
      {
        TABLE1.appendLines(dynlen(dsTableDollars),\"DOLLAR\",dsTableDollars,\"VALUE\",dsTableDollarValues);
//         TABLE2.appendLines(dynlen(dsTableDollars),\"DOLLAR\",dsTableDollars,\"VALUE\",dsTableDollarValues);
        return;
      }
      else if (df[1]==1)//Yes
      {
        dyn_string dsUpdatedTableDollarValues;
        
        if (dynContains(dsDollarsFile,\"$DP\")>0)
        {
          dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$DP\"));    
        }
        if (dynContains(dsDollarsFile,\"$SYMBOL_FACEPLATE_CONFIG\")>0)
        {
          dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$SYMBOL_FACEPLATE_CONFIG\"));   
        }
        if (dynContains(dsDollarsFile,\"$SYMBOL_FILE\")>0)
        {
          dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$SYMBOL_FILE\"));      
        }
        
        for(int i = 1; i <= dynlen(dsDollarsFile); i++)
        {
          int iPos = 0;
          
          if(i <= dynlen(dsDollarsFile))
            iPos = dynContains(dsTableDollars, dsDollarsFile[i]);
     
          if(iPos > 0)
            dynAppend(dsUpdatedTableDollarValues, dsTableDollarValues[iPos]);
          else
            dynAppend(dsUpdatedTableDollarValues, \"\");
        }
        TABLE1.appendLines(dynlen(dsDollarsFile),\"DOLLAR\",dsDollarsFile,\"VALUE\",dsUpdatedTableDollarValues);
//         TABLE2.appendLines(dynlen(dsDollarsFile),\"DOLLAR\",dsDollarsFile,\"VALUE\",dsTableDollarValues);
      }
    }
  }
  else
  {
    if (FILE.text!=\"\")
    {
      dyn_string ds;
        dyn_float df;
        ChildPanelOnCentralModalReturn(\"vision/MessageWarning\",getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
        makeDynString(getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
                      getCatStr(\"para\",\"close\")), 
        df,ds);
    }
  } 
}
" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "void objwFileSelection(dyn_string dsDollarsFile)
{
  string sDP,sTreeSelected=TREE.selectedItem();
  string sItem;
  dyn_string dsShortNames,dsFileNames;
  dyn_string dsDollars,dsDollarValues;
  dyn_string dsTableDollars,dsTableDollarValues;
  int pos;
  string sWork;
  sDP=$DPT;
//   DebugN(\"$DP\"+$DP);
  strreplace(sDP,\"_mp_\",\"\");
  sDP=\"_objwSymbolsPerType_\"+sDP;
  if(dpExists(sDP))
  {
    dpGet(sDP+\".ShortNames\",dsShortNames,
          sDP+\".FileNames\",dsFileNames,
          sDP+\".Dollars\",dsDollars,
          sDP+\".DollarValues\",dsDollarValues);  
  }
  
    for (int i=0;i<TABLE1.lineCount();i++)
    {
      dynAppend(dsTableDollars,TABLE1.cellValueRC(i,\"DOLLAR\"));
      dynAppend(dsTableDollarValues,TABLE1.cellValueRC(i,\"VALUE\"));
    }
    
    if (dsTableDollars==dsDollarsFile)
    {
      //DebugN(\"Update Table with the same dsDollarsFile:\",dsDollarsFile);
      TABLE1.deleteAllLines();
      TABLE1.appendLines(dynlen(dsTableDollars),\"DOLLAR\",dsDollarsFile,\"VALUE\",dsTableDollarValues);
//       TABLE2.deleteAllLines();
//       TABLE2.appendLines(dynlen(dsTableDollars),\"DOLLAR\",dsDollarsFile,\"VALUE\",dsTableDollarValues);
    }
    else
    {
      //DebugN(\"New Table dsDollarsFile:\",dsDollarsFile);
      dyn_string ds;
      dyn_float df;
//       DebugN(\"Tablecount\"+TABLE1.lineCount());
      if (TABLE1.lineCount()>0)
      {
        ChildPanelOnCentralModalReturn(\"vision/MessageInfo\",getCatStr(\"SimpleSymbols\",\"SymbolsDollarWrong\"),
        makeDynString(getCatStr(\"SimpleSymbols\",\"SymbolsDollarWrong\"),
                      getCatStr(\"para\",\"yes\"), getCatStr(\"para\",\"no\")), 
        df,ds);
      }
      else
      {
        dynClear(df);
        df=makeDynFloat(1);
      }
      if (dynlen(df)<1)//X Close
      { 
        return; 
      }
      else if (df[1]!=1)//No
      {
        TABLE1.deleteAllLines();
        TABLE1.appendLines(dynlen(dsTableDollars),\"DOLLAR\",dsTableDollars,\"VALUE\",dsTableDollarValues);
//         TABLE2.deleteAllLines();
//         TABLE2.appendLines(dynlen(dsTableDollars),\"DOLLAR\",dsTableDollars,\"VALUE\",dsTableDollarValues);        
        return;
      }
      else if (df[1]==1)//Yes
      {
        TABLE1.deleteAllLines();
        TABLE1.appendLines(dynlen(dsDollarsFile),\"DOLLAR\",dsDollarsFile,\"VALUE\",dsTableDollarValues);    
//         TABLE2.deleteAllLines();
//         TABLE2.appendLines(dynlen(dsDollarsFile),\"DOLLAR\",dsDollarsFile,\"VALUE\",dsTableDollarValues);          
      }
    }
}" 0
 2
"CBRef" "1"
"EClose" E
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
30 3
"FRAME1"
""
1 0 2 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
3 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 1.602765886006883 0 1.708079960858321 10 -1.421248980240816 0 E 0 2 381 231
4
LANG:10001 26 Arial,10,-1,5,75,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,75,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,75,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,75,0,0,0,0,0
0 4
LANG:10001 20 Properties of symbol
LANG:10004 15 符号的属性
LANG:10000 25 Eigenschaften des Symbols
LANG:10027 31 Свойства символа
25 5
"TABLE1"
""
1 181.7185628742516 24.00000000000003 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"acceptDrops" ""
"DragDrop" "main(string information, int dragType, int row, string column)
{
  bSettingsChanged=true;
  
  if (strpos(information,\"TYPE|\")==0)
  {
    if (row!=-1)
    {
      this.cellValueRC(row,\"VALUE\")=\".\";
    }
  }
  else
  {  
    if (row!=-1)
    {
      this.cellValueRC( row, \"VALUE\" ) = \"\\\"\"+ information+\"\\\"\";
    }
  }
}
"
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  234 22 608 378
"main()
{
}
" 0
E 1 0 1 2 0 "DOLLAR" 16 1 0 "s" 4
LANG:10001 11 $-Parameter
LANG:10004 8 $-参数
LANG:10000 11 $-Parameter
LANG:10027 18 $-Параметр
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

186 "VALUE" 15 1 1 "s" 4
LANG:10001 5 Value
LANG:10004 6 数值
LANG:10000 4 Wert
LANG:10027 16 Значение
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

181 
18 18 10 10
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
29 8
"DPTTREE"
""
1 24 23.99999999999993 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
8 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

12
"DragStart" "main(int keys, string id)
{
  
  if (strpos(id,\"TYPE|\")==0)
  {
    dragStart(\"TYPE|\");
  }
  strreplace(id,\"DPE|\",\"\");
  dyn_string dsDPE=strsplit(id,\".\");
  string information;
  for (int i=2;i<=dynlen(dsDPE);i++)
  {
    information=information+\".\"+dsDPE[i];
  }
  dragStart(information);
}
"
"hScrollBarMode" "enum 0"
"inputMethodHints" "enum 0"
"contextMenuPolicy" "enum 1"
"selectionMode" "enum 0"
"resizeMode" "enum 0"
"resizePolicy" "enum 1"
"frameShadow" "enum 48"
"layoutDirection" "enum 0"
"defaultRenameAction" "enum 0"
"frameShape" "enum 6"
"vScrollBarMode" "enum 0"
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  24 24 225 376
10 TreeWidget
1
0 "expanded" "(string id)"
"  dyn_string dsChilds=this.children(id);
//   DebugN(\"Childs:\"+dsChilds); 
  if (dynlen(dsChilds)==0)
  {
    string sWork=id;
    if (strpos(id,\"TYPE|\")==0)
    {
      strreplace(sWork,\"DP|\",\"\"); // sWork is the DPT we want to add the DPS's
//       string sType=this.parent(id);
      string sType=sWork;
      strreplace(sType,\"TYPE|\",\"\"); // sWork is the DPT we want to add the DPS's      
                //######################################################################################
//       Add Structure of the DP
      dyn_dyn_int ddiTypes;
      dyn_dyn_string ddsElements;
      dyn_dyn_anytype daType;
      dpTypeGet(sType,ddsElements,ddiTypes, TRUE);
//       ddsElements[1][1]=sWork; // Exchange the Typename with the DP NAme to get that into the Path
      for (int k=2;k<=dynlen(ddsElements);k++)// go through lines
      {
        if (ddiTypes[k][dynlen(ddiTypes[k])]==DPEL_TYPEREF)
        {
          dynRemove(ddsElements[k],dynlen(ddsElements[k])); // cut out the Typeref ref
        }
      }
      for (int k=2;k<=dynlen(ddsElements);k++)// go through lines
      {
        for (int j=1;j<=dynlen(ddsElements[k]);j++)// go through columns
        {
          if (ddsElements[k][j]==\"\"&&ddiTypes[k-1][j]!=DPEL_TYPEREF) // if it is a typeref than dont copy it down as a node
          {
            ddsElements[k][j]=ddsElements[k-1][j];
          }
        }
      }   
      dyn_int diFound;
      for (int k=1;k<=dynlen(ddsElements);k++)// go through lines
      {
        if (ddiTypes[k][dynlen(ddiTypes[k])]==DPEL_TYPEREF)
        {
          dynAppend(diFound,k);
        }
      }  
      for (int j=dynlen(diFound);j>0;j--)
      {
        dynRemove(ddiTypes,diFound[j]);
        dynRemove(ddsElements,diFound[j]);
      }
      for (int k=1;k<=dynlen(ddsElements);k++)// go through lines
      {
        dynAppend(daType,makeDynAnytype(ddsElements[k][1],(int)0) );
        daType[k]=ddsElements[k][1];
        for (int j=2;j<=dynlen(ddsElements[k]);j++)// go through columns
        {
          daType[k][1]=daType[k][1]+\".\"+ddsElements[k][j];
        }
        daType[k][2]=(int)ddiTypes[k][dynlen(ddiTypes[k])];
        dynAppend(daType[k],ddiTypes[k][dynlen(ddiTypes[k])]);
      }      
      for (int k=1;k<=dynlen(daType);k++)//if typerefs has been in there than \"..\" is a deliminater and we replace that with \".\"
      {
        strreplace(daType[k][1],\"..\",\".\");
      }
      for (int k=2;k<=dynlen(daType);k++)// now appedn to the tree
      {
        dyn_string dsSplit3=strsplit(daType[k][1],\".\");
        if (dynlen(dsSplit3)==2)
        {
//           this.appendItem(\"DP|\"+sWork,\"DPE|\"+daType[k][1],dsSplit3[dynlen(dsSplit3)]);
          this.appendItem(sWork,\"DPE|\"+daType[k][1],dsSplit3[dynlen(dsSplit3)]);
          this.setIcon(\"DPE|\"+daType[k][1],0,objwGetTreeIcon(daType[k][2]));
          this.setOpen(\"DPE|\"+daType[k][1],TRUE);
          if (daType[k][2]!=DPEL_STRUCT)
          {
            this.setDragEnabled(\"DPE|\"+daType[k][1],TRUE);           
          }
        }
        if (dynlen(dsSplit3)>2)
        {
          string parent, sSearch;
          parent=daType[k][1];
          dyn_string dsSplit23=strsplit(parent,\".\");
          sSearch=\".\"+dsSplit23[dynlen(dsSplit23)];
          parent = dsSplit23[1];
          for (int ii=2; ii< dynlen(dsSplit23);ii++)
          {
            parent=parent+\".\"+dsSplit23[ii];
          }
//           this.appendItem(\"DPE|\"+parent,\"DPE|\"+daType[k][1],dsSplit3[dynlen(dsSplit3)]);
          this.appendItem(\"DPE|\"+parent,\"DPE|\"+daType[k][1],dsSplit3[dynlen(dsSplit3)]);
          this.setIcon(\"DPE|\"+daType[k][1],0,objwGetTreeIcon(daType[k][2]));
          this.setOpen(\"DPE|\"+daType[k][1],TRUE);
          if (daType[k][2]!=DPEL_STRUCT)
          {
            this.setDragEnabled(\"DPE|\"+daType[k][1],TRUE);
          }          
        }
      }
    }
  }
"
"main()
{
  this.showHeader(false);
}" 0
25 12
"TABLE2"
""
1 646.7185628742516 197 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
12 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"acceptDrops" ""
"DragDrop" "main(string information, int dragType, int row, string column)
{
}
"
"selectionChangedCB" "synchronized main()
{
}
"
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  699 195 1073 547
"main()
{
}
" 0
E 1 0 1 2 0 "DOLLAR" 16 1 0 "s" 4
LANG:10001 11 $-Parameter
LANG:10004 8 $-参数
LANG:10000 11 $-Parameter
LANG:10027 18 $-Параметр
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

186 "VALUE" 15 1 1 "s" 4
LANG:10001 5 Value
LANG:10004 6 数值
LANG:10000 4 Wert
LANG:10027 16 Значение
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

181 
18 18 10 10
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
14 13
"FILE1"
""
1 668 194 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
13 0 0 0 0 0
E "main()
{
  if (isfile(getPath(PANELS_REL_PATH,FILE.text())))
  {
    dyn_string dsDollarsFile = getDollarParamsFromPanel(FILE.text());
    if (dynContains(dsDollarsFile,\"$DP\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$DP\"));    
    }
    if (dynContains(dsDollarsFile,\"$SYMBOL_FACEPLATE_CONFIG\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$SYMBOL_FACEPLATE_CONFIG\"));   
    }
    if (dynContains(dsDollarsFile,\"$SYMBOL_FILE\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$SYMBOL_FILE\"));      
    }
    dyn_string dsSplitFile=strsplit(FILE.text(),\".\");
    if (dsSplitFile[dynlen(dsSplitFile)]!=\"xml\") 
    {
      dyn_string ds;
      dyn_float df;
      ChildPanelOnCentralModalReturn(\"vision/MessageWarning\",getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
      makeDynString(getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
                    getCatStr(\"para\",\"close\")), 
      df,ds);
      updateSymbolPreview(FILE.text());
      return;
    }    
    objwFileSelection(dsDollarsFile);
  }
  else
  {
    if (FILE.text()!=\"\")
    {
      dyn_string ds;
        dyn_float df;
        ChildPanelOnCentralModalReturn(\"vision/MessageWarning\",getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
        makeDynString(getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
                      getCatStr(\"para\",\"close\")), 
        df,ds);
    }
  }
  updateSymbolPreview(FILE.text());
}
" 0
 E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"textChangedCB" "main(string newText)
{
  bSettingsChanged=true;
}
"
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  666 192 1049 220
3 "0s" 0 0 0 0 0 -1  E E "main()
{
  if (isfile(getPath(PANELS_REL_PATH,FILE.text())))
  {
    dyn_string dsDollarsFile = getDollarParamsFromPanel(FILE.text());
    if (dynContains(dsDollarsFile,\"$DP\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$DP\"));    
    }
    if (dynContains(dsDollarsFile,\"$SYMBOL_FACEPLATE_CONFIG\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$SYMBOL_FACEPLATE_CONFIG\"));   
    }
    if (dynContains(dsDollarsFile,\"$SYMBOL_FILE\")>0)
    {
      dynRemove(dsDollarsFile,dynContains(dsDollarsFile,\"$SYMBOL_FILE\"));      
    }
    dyn_string dsSplitFile=strsplit(FILE.text(),\".\");
    if (dsSplitFile[dynlen(dsSplitFile)]!=\"xml\") 
    {
      dyn_string ds;
      dyn_float df;
      ChildPanelOnCentralModalReturn(\"vision/MessageWarning\",getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
      makeDynString(getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
                    getCatStr(\"para\",\"close\")), 
      df,ds);
      updateSymbolPreview(FILE.text());
      return;
    }       
    objwFileSelection(dsDollarsFile);
  }
  else
  {
    if (FILE.text()!=\"\")
    {
      dyn_string ds;
        dyn_float df;
        ChildPanelOnCentralModalReturn(\"vision/MessageWarning\",getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
        makeDynString(getCatStr(\"SimpleSymbols\",\"SymbolsFileDoesNotExist\"),
                      getCatStr(\"para\",\"close\")), 
        df,ds);
    }
  }
  updateSymbolPreview(FILE.text());
}
" 0
14 14
"SHORT1"
""
1 668.0000000000002 161 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
14 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"textChangedCB" "main(string newText)
{
  bSettingsChanged=true;
}
"
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  666 159 990 187
3 "0s" 0 0 0 0 0 -1  E E E
1 21 0 "" 0
0
13 19
"Button_Apply"
""
1 570 425 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
18 1 0 0 65 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  528 413 616 441
T 
4
LANG:10001 6 Cancel
LANG:10004 6 取消
LANG:10000 9 Abbrechen
LANG:10027 16 Отменить
"main()
{
  PanelOff();
}" 0
 E E E
13 20
"Button_OK"
""
1 476 425 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
19 1 0 0 79 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10004 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10000 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10027 26 Arial,10,-1,5,50,0,0,0,0,0
0  434 413 522 441
T 
4
LANG:10001 2 OK
LANG:10004 6 确定
LANG:10000 2 OK
LANG:10027 2 OK
"main()
{
  dyn_string ds;
  dyn_float df;
  
  dyn_string dsDollar = TABLE1.getColumnN(0);
  dyn_string dsDollarValues = TABLE1.getColumnN(1);
  dyn_string dsTemp;
  
  for(int i = 1; i <= dynlen(dsDollar); i++)
    dynAppend(dsTemp, dsDollar[i]+\":\"+dsDollarValues[i]);
  
  ds[1] = dynStringToString(dsTemp);
  
  PanelOffReturn(df,ds);
}
" 0
 E E E
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
3 0 "PANEL_REF10" -1
"" ""
"objects_parts/STD_OBJECTS/ButtonBarBackground.pnl" 452 653 T 17 2.020040080160321 0 1 -1009.058116232465 -249
0
0
