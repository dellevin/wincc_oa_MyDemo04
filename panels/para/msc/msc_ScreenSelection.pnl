V 13
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 230 142 N "_3DFace" 0
"main()
{
  int i = 0;
  int iOldX;
  int iX, iY;

  calculateScreenPositions();//get numbor of monitors connected
 
  iOldX = g_diX[g_iSmallXIdx];//start with monitor g_iSmallIdx depending on the following:
  
  //for a monitor configuration like this:
  // 4 5 6
  // 1 2 3
  //the order of monitors processed by do-while loop is:
  // 4,1,5,2,6,3
  
  //for a monitor configuration like this:
  // 1 2 3 4 5 6
  //the order of monitors processed by do-while loop is:
  // 1,2,3,4,5,6  
  
  do
  {    
    if(iOldX < g_diX[g_iSmallXIdx])//g_diX[] contains x-position of each monitor
    {
      i++;
      iOldX = g_diX[g_iSmallXIdx];//use next monitor's x-position
    }
     
    iX = SIDE_DIFF + i * ITEM_WIDTH;//calculate item's x-position
    iY = TOP_DIFF + getYForX();//calculate item's y-position with given x-position
    
    changePanelSize(iX, iY);//adjust panel size
    
    addSymbol(myModuleName(), myPanelName(), \"para/msc/msc_ScreenIcon.pnl\",//add monitor item on panel
              \"msc_Screen_\" + g_iSmallXIdx, makeDynString(\"$Num:\" + g_iSmallXIdx, \"$Feld:txtSelection\"),
              iX, iY, 0, 1, 1); 
    //IM 97814 disable icons for unused monitors - if there is no history, the monitor never has been used
    string sScreen = cptms_Displays[g_iSmallXIdx];
    setValue(\"msc_Screen_\" + g_iSmallXIdx, \"enabled\",(ptnavi_navigation[ptnavi_HISTORY][sScreen][ptnavi_HISTORY_POS]>0)?TRUE:FALSE);

  }while(getNextSmallXIdx());//break if there is no monitor remaining or get index for next monitor
  
  g_sMyScreen = ptnavi_GetScreenName();//detect own monitor
  
  setValue(\"msc_Screen_\" + g_sMyScreen, \"enabled\", false);//disable own monitor
}









" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "const int MIN_WIDTH     = 230;
const int MIN_HEIGHT    = 142;
const int WARP_FACT     =  30;
const int ITEM_WIDTH    =  50;
const int ITEM_HEIGHT   =  60;
const int SIDE_DIFF     =  30;
const int TOP_DIFF      =  20;
const int BUTTON_HEIGHT =  34;
const int BUTTON_POS    =  10;

dyn_int g_diX, g_diY, g_diOlds;
int g_iSmallXIdx;
string g_sMyScreen;

void calculateScreenPositions()
{
  int w, h, x, y;
  int iSmallX = -1;
  
  for(int i = 0; i < getScreenCount(); i++)
  {
    getScreenSize(w, h, x, y, i);
    
    if( (iSmallX == -1) || (iSmallX > x) )//do it only for 1st monitor
    {
      iSmallX = x;
      g_iSmallXIdx = i + 1;
    }

    dynAppend(g_diX, x);//all x-positions of monitors
    dynAppend(g_diY, y);//all y-positions of monitors
  }
}

int getYForX() //calculate the monitor's y-position
{
  int iYPos = g_diY[g_iSmallXIdx];//get current monitor's y-position
  int iMult = 0;
  int iPrev = 0;
  
  dyn_int diTemp = g_diY;
  dynUnique(diTemp);
    
  for(int i = 1; i <= dynlen(diTemp); i++)
  {
    //calculate iMult: iMult = 1 for 1st row of monitors, = 2 for 2nd rows of monitors, etc.
    if ( ( (iYPos <  0) && ( (diTemp[i] <  iYPos) && (iPrev != diTemp[i]) ) )
      || ( (iYPos >= 0) && ( (diTemp[i] <= iYPos) && (iPrev != diTemp[i]) ) ) )
    {
      iMult++;
      iPrev = diTemp[i];
    }
  }
  
  return (iMult * ITEM_HEIGHT);//return y-position of monitor
}

bool getNextSmallXIdx()//get index of next monitor
{
  int iSmallX = -1;
  dynAppend(g_diOlds, g_iSmallXIdx);
  
  for(int i = 1; i <= dynlen(g_diX); i++)
  {
    if(!dynContains(g_diOlds, i))
    {
      if( (iSmallX == -1) || (g_diX[i] < iSmallX) )//for i=1 only
      {
        iSmallX = g_diX[i];
        g_iSmallXIdx = i;
      }
    }
  }
  
  return (iSmallX != -1);
}

void changePanelSize(int iX, int iY)
{
  int iCancelWidth, iCancelHeight;
  int iCurrWidth, iCurrHeight;
  
  iX = iX + ITEM_WIDTH + SIDE_DIFF;
  iY = iY + ITEM_HEIGHT + TOP_DIFF + BUTTON_HEIGHT;  
  
  panelSize(myPanelName(), iCurrWidth, iCurrHeight);
  
  if(iX < MIN_WIDTH)
    iX = MIN_WIDTH;
  
  if(iY < MIN_HEIGHT)
    iY = MIN_HEIGHT;
  
  if(iX < iCurrWidth)
    return;
  
  if(iY < iCurrHeight)
    return;

  getValue(\"cmdCancel\", \"size\", iCancelWidth, iCancelHeight);
  
  setPanelSize(myModuleName(), myPanelName(), false, iX, iY);
  frmMovePanel.size(iX - (BUTTON_POS * 2), iY - (BUTTON_HEIGHT + TOP_DIFF));
  cmdCancel.position(iX - (iCancelWidth + BUTTON_POS), iY - BUTTON_HEIGHT);
}






" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
30 55
"frmMovePanel"
""
1 11 13 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
21 0 0 0 0 0
E E E
1
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 0.3122843178551739 0 0.3097393091340123 6.564872503593087 5.973388981257839 0 E 11 13 684 296
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 21 Move panel to monitor
LANG:10004 27 将面板移动到监视器
LANG:10000 29 Panel verschieben auf Monitor
LANG:10027 55 Переместить панель на монитор
13 57
"cmdCancel"
""
1 128 108 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
23 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  126 106 220 133

T 
4
LANG:10001 5 Close
LANG:10004 6 关闭
LANG:10000 10 Schließen
LANG:10027 14 Закрыть
"main()
{
  dyn_float df = makeDynFloat(0);
  dyn_string ds = makeDynString(\"\", \"\");
  
  PanelOffReturn(df, ds);
}" 0
 E E E
14 59
"txtSelection"
""
1 76 110 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
25 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"textChangedCB" "main(string newText)
{
  dyn_float df = makeDynFloat(1);
  dyn_string ds = makeDynString(g_sMyScreen, newText);

  PanelOffReturn(df, ds);
}"
4
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10004 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10000 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10027 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0  74 108 109 131
3 "0s" 0 0 0 0 0 -1  E E E
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
0
