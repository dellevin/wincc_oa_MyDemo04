V 14
4
LANG:10001 6 common
LANG:10004 6 常规
LANG:10000 6 common
LANG:10027 10 общее
PANEL,-1 -1 620 480 N "_3DFace" 1
"$1"
"main()
{
  if ($1==\"\")
  {
    RootPanelOn(
      \"vision/MessageWarning\",
      paGetCatStr(\"para\",\"warning\"),
      makeDynString(paGetCatStr(\"para\",\"novision\")));
    delay(1);
  }
  paInitPanel($1,\":_general\");
}
" 0
 "main()
{
  //IM 106997
  if(mappingHasKey(gMpLastDpLocked,myModuleName()) && (dpSubStr(gMpLastDpLocked[myModuleName()],DPSUB_SYS_DP_EL) == $1) && dpExists(dpSubStr($1,DPSUB_DP_EL)))
    dpSet($1+\":_lock._general._locked\",FALSE);
  if(mappingHasKey(gMpLastDpLocked,myModuleName()))
  {
    gMpLastDpLocked[myModuleName()] = \"\";
    mappingRemove(gMpLastDpLocked,myModuleName());
  }
}
" 0
 E E E 1 -1 -1 0  240 102
"refFileName"0  1
E "string setColumnFormat(int row)
{
  string aValue;
  
  getValue(\"TABLE1\",\"cellValueRC\",row,\"Attribute\",aValue);
  int dataType = testDataType(aValue);
  switch(dataType)
  {
    case DPEL_CHAR   : prepareTable(row,\"[1s,,,ALIGNMENT_BEGINNING]\"); return \"[1s,,,ALIGNMENT_BEGINNING]\";
    case DPEL_UINT   : 
    case DPEL_INT    : prepareTable(row,\"[d,FALSE,FALSE,ALIGNMENT_BEGINNING,FALSE]\"); return \"[d,FALSE,FALSE,ALIGNMENT_BEGINNING,FALSE]\";
    case DPEL_ULONG   : 
    case DPEL_LONG    : prepareTable(row,\"[20s,FALSE,FALSE,ALIGNMENT_BEGINNING,FALSE]\"); return \"[20s,FALSE,FALSE,ALIGNMENT_BEGINNING,FALSE]\";
    case DPEL_FLOAT  : prepareTable(row,\"[10.3f,FALSE,FALSE,ALIGNMENT_BEGINNING]\"); return \"[10.3f,FALSE,FALSE,ALIGNMENT_BEGINNING]\";
    case DPEL_BOOL   : prepareTable(row,\"\",TRUE); return \"\";
    case DPEL_BIT32  :
    case DPEL_BIT64  :  
    case DPEL_STRING : 
    case DPEL_BLOB   : prepareTable(row,\"[s,,,ALIGNMENT_BEGINNING]\"); return \"[s,,,ALIGNMENT_BEGINNING]\";
    default : return \"\";    
  }
  return \"\";
}

prepareTable(int row, string format, bool isBool=FALSE)
{
  if(format != \"\")
  {
    setValue(\"TABLE1\", \"cellFormatRC\",row,\"Value\",format);
  }
  else if(isBool)
  {
    bool b=FALSE;
    getValue(\"TABLE1\", \"cellValueRC\",row,\"Value\",b);
    setValue(\"TABLE1\", \"cellValueRC\",row,\"Value\",b);
  }
}

int testDataType(string s)
{
  if(patternMatch(\"_char*\",s)) return DPEL_CHAR;
  else if(patternMatch(\"_unsigned*\",s)) return DPEL_UINT;
  else if(patternMatch(\"_int*\",s)) return DPEL_INT;  
  else if(patternMatch(\"_long*\",s)) return DPEL_LONG;
  else if(patternMatch(\"_ulong*\",s)) return DPEL_ULONG;
  else if(patternMatch(\"_float*\",s)) return DPEL_FLOAT;
  else if(patternMatch(\"_blob*\",s)) return DPEL_BLOB;
  else if(patternMatch(\"_bool*\",s)) return DPEL_BOOL;
  else if(patternMatch(\"_bit32*\",s)) return DPEL_BIT32;
  else if(patternMatch(\"_bit64*\",s)) return DPEL_BIT64;
  else if(patternMatch(\"_string*\",s)) return DPEL_STRING;
  else if(patternMatch(\"_time*\",s)) return DPEL_TIME;
  else if(patternMatch(\"_dpid*\",s)) return DPEL_DPID;
  else if(patternMatch(\"_langString*\",s)) return DPEL_LANGSTRING;
  else if(patternMatch(\"_dyn_char*\",s)) return DPEL_DYN_CHAR;
  else if(patternMatch(\"_dyn_unsigned*\",s)) return DPEL_DYN_UINT;
  else if(patternMatch(\"_dyn_int*\",s)) return DPEL_DYN_INT;
  else if(patternMatch(\"_dyn_ulong*\",s)) return DPEL_DYN_ULONG;
  else if(patternMatch(\"_dyn_long*\",s)) return DPEL_DYN_LONG;
  else if(patternMatch(\"_dyn_float*\",s)) return DPEL_DYN_FLOAT;
  else if(patternMatch(\"_dyn_blob*\",s)) return DPEL_BLOB;
  else if(patternMatch(\"_dyn_bit32*\",s)) return DPEL_DYN_BIT32;
  else if(patternMatch(\"_dyn_bit64*\",s)) return DPEL_DYN_BIT64;
  else if(patternMatch(\"_dyn_string*\",s)) return DPEL_DYN_STRING;
  else if(patternMatch(\"_dyn_time*\",s)) return DPEL_DYN_TIME;
  else if(patternMatch(\"_dyn_dpid*\",s)) return DPEL_DYN_DPID;
  else if(patternMatch(\"_dyn_langString*\",s)) return DPEL_DYN_LANGSTRING;
  return -1;
}





















" 0
 4
"CBRef" "0"
"EClose" E
"dpi" "96"
"pdpi" "96"
0 0 0
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
4
LANG:10001 6 Layer1
LANG:10004 6 Layer1
LANG:10000 6 Layer1
LANG:10027 6 Layer1
2 1
"Text1"
""
1 28 10 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
0 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 1 1 0 1 E U  0 E 30 10 96 30
0 2 0 "0s" 0 0 0 192 0 0  30 10 1
4
LANG:10001 26 arial,-1,18,5,50,0,0,0,0,0
LANG:10004 26 arial,-1,18,5,50,0,0,0,0,0
LANG:10000 26 arial,-1,18,5,50,0,0,0,0,0
LANG:10027 26 arial,-1,18,5,50,0,0,0,0,0
0 4
LANG:10001 7 General
LANG:10004 6 常规
LANG:10000 7 General
LANG:10027 12 Прочее
25 55
"TABLE1"
""
1 5.684341886080801e-14 67 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
14 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  -2 65 621 432
E"main(int row, string column, string value)
{
  string aValue,sDPE,format;
  bool   bValue;
  langString ls;
  int ye,mo,da,ho,mi;
  dyn_string resultText;
  dyn_float  resultFloat;
  
  getValue(\"TABLE1\",\"cellValueRC\",row,\"Attribute\",aValue);
  int dataType = testDataType(aValue);
  
  switch(dataType)
  {
    case DPEL_INT    :
    case DPEL_UINT   :
    case DPEL_FLOAT  :
    case DPEL_BIT32  :
    case DPEL_STRING :
    case DPEL_BLOB :
    case DPEL_CHAR   :  getValue(\"TABLE1\",\"cellValueRC\",row,\"RawValue\",aValue);
                        format = setColumnFormat(row);
                        if(dataType == DPEL_BIT32) format = \"[s,FALSE,FALSE,ALIGNMENT_BEGINNING,FALSE]\";
                        ChildPanelOnCentralModalReturn(\"objects/STD_INPUTS/EnterValue.pnl\", \"Enter a value\", 
                                                       makeDynString(\"$format:\"+format,\"$value:\"+aValue,\"$b32:\"+((dataType == DPEL_BIT32)?TRUE:FALSE)),
                                                       resultFloat, resultText);
                        if(dynlen(resultText))
                        {
                          if(dataType == DPEL_BIT32)
                          {
                            string s;
                            uint value = resultText[1];
                            sprintf(s, \"0x %04X %04X\", (value >> 16) & 0xFFFFU, value & 0xFFFFU);
                            setValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",s);
                          }
                          else
                          {
                            setValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",resultText[1]);
                          }

                          setValue(\"TABLE1\",\"cellValueRC\",row,\"RawValue\",resultText[1]);
                        }
                        break;
    case DPEL_LONG    :
    case DPEL_ULONG   :
    case DPEL_BIT64   : getValue(\"TABLE1\",\"cellValueRC\",row,\"RawValue\",aValue);
                        format = setColumnFormat(row);
                        if(dataType == DPEL_BIT64) format = \"[s,FALSE,FALSE,ALIGNMENT_BEGINNING,FALSE]\";                        
                        ChildPanelOnCentralModalReturn(\"objects/STD_INPUTS/EnterValue64.pnl\", \"Enter a value\", 
                                                       makeDynString(\"$format:\"+format,\"$value:\"+aValue,\"$b64:\"+((dataType == DPEL_BIT64)?TRUE:FALSE)),
                                                       resultFloat, resultText);
                        if(dynlen(resultText))
                        {
                          if(dataType == DPEL_BIT64)
                          {
                            string s;
                            ulong value = resultText[1];
                            sprintf(s,\"0x %04X %04X %04X %04X\", (value >> 48) & 0xFFFF, (value >> 32) & 0xFFFFU,
                                                                  (value >> 16) & 0xFFFF, value & 0xFFFFU);
                            setValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",s);
                          }
                          else
                          {
                            setValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",resultText[1]);
                          }
                          setValue(\"TABLE1\",\"cellValueRC\",row,\"RawValue\",resultText[1]);
                        }
                        break;
    case DPEL_BOOL   :  getValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",bValue);
                        setValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",!bValue);
                        setValue(\"TABLE1\",\"cellValueRC\",row,\"RawValue\",!bValue);
                        break;
    case DPEL_TIME   :  getValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",aValue);
                        convertTimeValue(aValue,ye,mo,da,ho,mi);
                        ChildPanelOnCentralModalReturn(\"objects/STD_INPUTS/Date_Time.pnl\", getCatStr(\"general\",\"inputDialog\"), 
                                                       makeDynString(\"$year:\"+ye,\"$month:\"+mo,\"$day:\"+da,\"$hour:\"+ho,\"$minute:\"+mi,
                                                                     \"$generalConfig:TRUE\",\"$dpe_value:\"+$1),
                                                       resultFloat, resultText);
                        if(dynlen(resultText))
                        {
                          setValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",resultText[1]);
                          setValue(\"TABLE1\",\"cellValueRC\",row,\"RawValue\",resultText[1]);
                        }
                        break;
    case DPEL_DPID   :  dpSelector(sDPE);
                        setValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",sDPE);
                        setValue(\"TABLE1\",\"cellValueRC\",row,\"RawValue\",sDPE);
                        break;
    case DPEL_LANGSTRING : getValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",ls);;
                        langEditor(ls);
                        setValue(\"TABLE1\",\"cellValueRC\",row,\"Value\",ls);
                        setValue(\"TABLE1\",\"cellValueRC\",row,\"RawValue\",ls);
                        break;
    default : ChildPanelOnCentralModal(\"vision/MessageInfo1\",\"Warning\",makeDynString(\"$1:\"+getCatStr(\"pmon\",\"notImplemented\")));
              break;
  }
}

convertTimeValue(string aValue, int &ye, int &mo, int &da, int &ho, int &mi)
{
  time t = (time)aValue;
  ye = year(t); mo = month(t); da = day(t); mi = minute(t); ho = hour(t);
}
" 0
 1 0 1 3 0 "Attribute" 12 1 0 "s" 4
LANG:10001 9 Attribute
LANG:10004 6 属性
LANG:10000 8 Attribut
LANG:10027 14 Атрибут
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

140 "Value" 37 1 0 "s" 4
LANG:10001 5 Value
LANG:10004 6 数值
LANG:10000 4 Wert
LANG:10027 16 Значение
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

420 "RawValue" 4 0 0 "s" 4
LANG:10001 5 Value
LANG:10004 6 数值
LANG:10000 4 Wert
LANG:10027 16 Значение
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0 
18 18 10 0
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
1 56 1 "" 0
0
1 58 2 "0" 0
0
0
LAYER, 1 
4
LANG:10001 6 Layer2
LANG:10004 6 Layer2
LANG:10000 6 Layer2
LANG:10027 6 Layer2
0
LAYER, 2 
4
LANG:10001 6 Layer3
LANG:10004 6 Layer3
LANG:10000 6 Layer3
LANG:10027 6 Layer3
0
LAYER, 3 
4
LANG:10001 6 Layer4
LANG:10004 6 Layer4
LANG:10000 6 Layer4
LANG:10027 6 Layer4
0
LAYER, 4 
4
LANG:10001 6 Layer5
LANG:10004 6 Layer5
LANG:10000 6 Layer5
LANG:10027 6 Layer5
0
LAYER, 5 
4
LANG:10001 6 Layer6
LANG:10004 6 Layer6
LANG:10000 6 Layer6
LANG:10027 6 Layer6
0
LAYER, 6 
4
LANG:10001 6 Layer7
LANG:10004 6 Layer7
LANG:10000 6 Layer7
LANG:10027 6 Layer7
0
LAYER, 7 
4
LANG:10001 6 Layer8
LANG:10004 6 Layer8
LANG:10000 6 Layer8
LANG:10027 6 Layer8
0
3 1 "" -1
"layoutAlignment" "AlignCenter"
"" ""
"para/lock_unlock.ref" 6 12 T 19 1.288888888888889 0 1.133333333333333 -0.7333333333333332 -3.600000000000097
1
"$1""$1"
3 2 "PANEL_REF2" -1
"layoutAlignment" "AlignCenter"
"" ""
"para/buttons.ref" 220 440 T 20 1 0 1 -210 5
0
0
