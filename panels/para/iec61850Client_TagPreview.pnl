V 14
4
LANG:10001 27 IEC 61850/61400 tag preview
LANG:10004 25 IEC 61850/61400 tag预览
LANG:10000 27 IEC 61850/61400 tag preview
LANG:10027 27 IEC 61850/61400 tag preview
PANEL,-1 -1 900 550 N "_3DFace" 5
"$dataset"
"$dplist"
"$dsattr"
"$dsclean"
"$iedname"
"main()
{
  // global variables
  g_bUpdateRunning = 0;
  g_bLoopSQ = 0;
  g_bMaxLinesMsg = 0;

  // Number of maximum lines in monitor panel, index 0 is lowest, enter maximum number below
  g_iMaxLinesTable = 50;

  // Allowed datatypes
  g_diDpeType = makeDynInt(DPEL_CHAR,
                           DPEL_INT,
                           DPEL_UINT,
                           DPEL_LONG,
                           DPEL_ULONG,
                           DPEL_FLOAT,
                           DPEL_BOOL,
                           DPEL_BIT32,
                           DPEL_BIT64,
                           DPEL_STRING,
                           DPEL_LANGSTRING,
                           DPEL_TIME,
                           DPEL_BLOB);

  // statusbits
  g_cBit_default    = getCatStr(\"sc\", \"default\")[0];
  g_cBit_out_prange = getCatStr(\"sc\", \"out_prange\")[0];
  g_cBit_invalid    = getCatStr(\"sc\", \"invalid\")[0];
  g_cBit_from_GI    = getCatStr(\"sc\", \"from_GI\")[0];
  g_cBit_userbit1   = '1';
  g_cBit_userbit2   = '2';

  setValue(\"tabInfo\", \"selectByClick\", TABLE_SELECT_LINE,
                      \"selectColors\", \"grey\", \"_3DText\",
                      \"tableMode\", TABLE_SELECT_BROWSE);

  //setValue(\"dateTime\", \"text\", formatTime(\"%c\", getCurrentTime()));

  tabInfo.sortOnClick(0);

  //txtOneUpdate.visible(0);
  //txtPermUpdate.visible(0);
  //txtPermUpdateOver.visible(0);
  //dateTime.visible(0);

  g_sList  = $dplist;
  g_sAttr  = $dsattr;
  g_sIed   = $iedname;
  g_sDs    = $dataset;
  g_sClean = $dsclean;

  tfIed.text = g_sIed;
  tfDs.text  = g_sDs;

  dyn_string dsList = stringToDynString(g_sList, \"|\");
  for ( int i = 1; i <= dynlen(dsList); i++ )
    strreplace(dsList[i], \" \", \"\");

  dyn_string dsAttr = stringToDynString(g_sAttr, \"|\");
  for ( int i = 1; i <= dynlen(dsAttr); i++ )
    strreplace(dsAttr[i], \" \", \"\");

  g_dsAttr = dsAttr;

  dyn_string dsLNs = g_dsAttr;
  for ( int i = 1; i <= dynlen(dsLNs); i++ )
  {
    dsLNs[i] = strsplit(dsLNs[i], \"$\")[1];
    dsLNs[i] = strsplit(dsLNs[i], \"/\")[2];
  }

  dynUnique(dsLNs);
  dynSort(dsLNs);

  g_dsLNs = dsLNs;

  //dynSort(dsList);
  g_dsList = dsList;

  dynInsertAt(g_dsLNs, getCatStr(\"iec61850\", \"TagsNoLnFilter\"), 1);
  cmbLnFilter.items = g_dsLNs;

  string sIedDp = iec61850_getIedDpName(g_sIed);
  dpGet(sIedDp + IEC61850_DPE_IDP_CONFIG_DRVNUM, g_iDrvNum);

  cbAllLines.text(0) = getCatStr(\"iec61850\", \"TagsAllLines\") + \"(\" + dynlen(g_dsList) + \")\";
  cbAllLines.enabled = ( dynlen(g_dsList) > g_iMaxLinesTable );
  tfMaxLines.text = g_iMaxLinesTable;
  tfTagCount.text = dynlen(g_dsList);

  g_dmInit = makeDynMixed(cmbLnFilter.selectedPos, tfMaxLines.text, cbAllLines.state(0));

  g_dsListSorted = g_dsList;
  dynSort(g_dsListSorted);

  for ( int i = 1; i <= dynlen(g_dsListSorted); i++ )
    if ( dpExists(g_dsListSorted[i] + \".\") )
      checkAndAddDpe(g_dsListSorted[i] + \".\");

  //g_bUpdateRunning = 1;
  //cbPermanentUpdate.state(0) = 1;
  startUpdateValues(1);
  triggerSQ(0);
}

" 0
 E E E E 1 -1 -1 0  60 50
""0  1
E "// =================================================================================================
// panel global variables
// =================================================================================================
bool       g_bUpdateRunning,
           g_bLoopSQ,
           g_bMaxLinesMsg;

dyn_int    g_diDpeType;

int        g_iMaxLinesTable,
           g_iDrvNum;

dyn_string g_dsDpes,
           g_dsList,
           g_dsListSorted,
           g_dsAttr,
           g_dsLNs,
           g_dsFLND,
           g_dsFLNDSorted;

string     g_sList,
           g_sAttr,
           g_sIed,
           g_sDs,
           g_sClean;

dyn_mixed  g_dmInit,
           g_dmNew;

char g_cBit_default,
     g_cBit_out_prange,
     g_cBit_invalid,
     g_cBit_from_GI,
     g_cBit_userbit1,
     g_cBit_userbit2;

// =================================================================================================
// Function: checkAndAddDpe()
// Description: checks and adds a datapoint element
// Parameter: string dpe ... Datapointelement to add
// =================================================================================================
checkAndAddDpe(string dpe)
{
  dyn_string dpes;
  string 	   dp1;
  int        type,o,u,x;

  // If no DPE is selected
  if ( dpe == \"\" )
  {
    ChildPanelOnCentral(\"vision/MessageInfo1\",
                        getCatStr(\"general\",\"information\"),
                        makeDynString(getCatStr(\"dpeMonitor\", \"dpeMon_add_item\")));
    return;
  }

  // Check the datatype and returns if incorrect
  getDpeType(dpe, type);

//   if ( type == 0 )
//   {
//     ChildPanelOnCentral(\"vision/MessageWarning\",
//                         getCatStr(\"general\",\"warning\"),
//                         makeDynString(getCatStr(\"dpeMonitor\", \"dpeMon_type_invalid\")));
//     return;
//   }

  getCurrentDpes(dpes);
  dp1 = dpSubStr(dpe, DPSUB_SYS_DP_EL);

  // Check if duplicate
  if ( !dynContains(dpes, dp1) )
    getValuesAndApp(dpe);
  else
  {
    ChildPanelOnCentral(\"vision/MessageWarning\",
                        getCatStr(\"general\", \"warning\"),
                        makeDynString(getCatStr(\"dpeMonitor\", \"dpeMon_dpe_dublicate\")));
    return;
  }

  tfMaxLines.text = tabInfo.lineCount();
  tfTagCount.text = dynlen(g_dsList);

  getValue(\"tabInfo\", \"lineRangeVisible\", o, u);

  x = tabInfo.lineCount()-1;

  if ( o <= x && x <= u )
    tabInfo.selectLineN(tabInfo.lineCount()-1);
  else
  {
    tabInfo.lineVisible () = tabInfo.lineCount()-1;
    tabInfo.selectLineN(tabInfo.lineCount()-1);
  }
}
// =================================================================================================
// Function:     pieceTogetherBits()
// Description:
// Parameter:    string state : = dpes[i]+\":_online.._status\"
// Return value: bits \"%c%c%c%c%c%c\" : selection of statusbits
// =================================================================================================
pieceTogetherBits(string state, string &bits)
{
  sprintf(bits, \"%c%c%c%c%c%c\",
         (dpGetStatusBit(state, \":_online.._default\")    == 1) ? g_cBit_default    : '-',
         (dpGetStatusBit(state, \":_online.._out_prange\") == 1) ? g_cBit_out_prange : '-',
         (dpGetStatusBit(state, \":_online.._invalid\")    == 1) ? g_cBit_invalid    : '-',
         (dpGetStatusBit(state, \":_online.._from_GI\")    == 1) ? g_cBit_from_GI    : '-',
         (dpGetStatusBit(state, \":_online.._userbit1\")   == 1) ? g_cBit_userbit1   : '-',
         (dpGetStatusBit(state, \":_online.._userbit2\")   == 1) ? g_cBit_userbit2   : '-');
}
// =================================================================================================
// Function: getDpesOfTable()
// Description: get list of all DPEs that are currently in the table
// Parameters:
// dpes ... List of DPEs
// =================================================================================================
getDpesOfTable(dyn_string &dpes)
{
  int noLines;
  string dpe;

  noLines = tabInfo.lineCount();

  for ( int i = 0; i < noLines; i++ )
  {
    getValue(\"tabInfo\", \"cellValueRC\", i,\"dpe_orig\",dpe);

    if (strpos(dpe,\":\") <0 && dpExists(dpe))
      dpe = getSystemName()+dpe;

    dynAppend(dpes,dpe);
  }

  dynClear(g_dsDpes);
  g_dsDpes = dpes;
}
// =================================================================================================
// Function:	appendLineIfNotMax()
// Description: if not maximal lines of table reacheddo appendline with new datapoint.
// Parameters:
// dpe ... New datapoint
// desc ... Datapoint description
// value ... Value of datapoint
// bits ... Chosen statusbits
// t ... Systemtime
// =================================================================================================
appendLineIfNotMax(string dpe, string desc, anytype value, string bits, time t)
{
  int type;
  string dp1;

  getDpeType(dpe, type);

  if ( tabInfo.lineCount() < g_iMaxLinesTable )
  {
    if ( strlen(desc) > 0 )
    {
      dp1 = desc;
      checkSys(dpe, desc);
    }
    else
      checkSys(dpe, dp1);

    tabInfo.appendLine(\"dpe_orig\",dpe,
                       \"dpe\",dp1,
                       //\"dpcomment\", desc,
                       \"value\", value,
                       //\"value_d\", value,
                       //\"type\", type,
                       \"bits\", bits,
                       \"time\", formatTime(\"%c\",t,\"  (%03d)\"),
                       //\"time\", formatTime(\"%X\", t),
                       \"detail\", \"...\");
    }
//     else
//     {
//       if ( g_bMaxLinesMsg == 0 )
//       {
//         ChildPanelOnCentral(\"vision/MessageWarning\",
//                             getCatStr(\"general\", \"warning\"),
//                             makeDynString(getCatStr(\"dpeMonitor\", \"dpeMon_maxLines\")));
//
//         g_bMaxLinesMsg = 1;
//       }
//    }
}
// =================================================================================================
// Function:	getCurrentDpes()
// Description: get current dpes as they are formatted in the table
// Parameters:
// dpes ... List of current DPE´s
// =================================================================================================
getCurrentDpes(dyn_string &dpes)
{
  for ( int i = 1; i <= tabInfo.lineCount(); i++ )
    getValue(\"tabInfo\", \"cellValueRC\", i-1, \"dpe_orig\", dpes[i]);
}
// =================================================================================================
// Function:	dpGetFormat()
// Description: get the format of the dpe
// Parameters:
// dpe ... New DPE
// type ... Datatype of the new DPE
// =================================================================================================
getDpeType(string dpe, int &type)
{
  for ( int i = 1; i <= dynlen(g_diDpeType); i++ )
  {
    if ( dpElementType(dpe) == g_diDpeType[i] )
    {
      type = g_diDpeType[i];
      return;
    }
  }

  type = 0;
}
// =================================================================================================
// Function: getValuesAndApp()
// Description: checks if OK and appends the table in the table
// Parameters:
// dpes ... List of current DPE´s
// dpe ... New DPE
// =================================================================================================
getValuesAndApp(string dpe)
{
  string 	desc, bits, state, type;
  anytype value;
  time    t;

  // Check the datatype and returns if incorrect
  getDpeType(dpe, type);

  if ( type == 0 )
    return;

  dpe = dpSubStr(dpe, DPSUB_SYS_DP_EL);
  desc = dpGetComment(dpe);
  // Show without attrib, detail & config

  dpGet(dpe + \":_online.._value\",  value,
        dpe + \":_online.._stime\",  t,
        dpe + \":_online.._status\", state);

  pieceTogetherBits(state, bits);

  appendLineIfNotMax(dpe, desc, value, bits, t);
}
// =================================================================================================
// Function: checkSys()
// Description: check if dp name consists of the system name and remove it
// Parameters:
// dpe ... New DPE
// dp1 ... New DPE without system, configs and attributes
// =================================================================================================
checkSys(string dpe, string &dp1)
{
  if ( dpSubStr(dpe, DPSUB_SYS) == getSystemName() )
    dp1 = dpSubStr(dpe, DPSUB_DP_EL);
  else
    dp1 = dpe;
}
// =================================================================================================
// Function: startUpdateValues
// Description: updates the values in the table
// =================================================================================================
startUpdateValues(bool bDoConnect)
{
  dyn_string dpes;
  string     dpe;
  int        i;
  bool       update;

  getDpesOfTable(dpes);

  // If no configuration is selected
  if ( dynlen(dpes) == 0 )
  {
    setValue(\"cbPermanentUpdate\", \"state\", 0, 0);
    return;
  }

  if ( bDoConnect )
  {
    //getValue(\"cbPermanentUpdate\", \"state\", 0, update);
    //g_bUpdateRunning = update;
    g_bUpdateRunning = 1;
  }

  //dateTime.text(formatTime(\"%c\", getCurrentTime()));
  //txtOneUpdate.visible(0);
  //txtPermUpdateOver.visible(0);
  //txtPermUpdate.visible(1);
  //dateTime.visible(1);

  // Enables or disables the other buttons if update is checked or not
  setMultiValue(\"cmdUpdateTable\",   \"enabled\", !g_bUpdateRunning,
                \"cmdDeleteDPE\",     \"enabled\", !g_bUpdateRunning,
                \"cmdDeleteAllDPEs\", \"enabled\", !g_bUpdateRunning);

  if ( ( g_bUpdateRunning || !bDoConnect ) && dynlen(dpes) > 0 )
  {
    for ( i = 1; i <= dynlen(dpes); i++ )
    {
      if ( bDoConnect )
        dpConnect(\"updateValuesCB\", 0, dpes[i] + \":_online.._value\",
                                       dpes[i] + \":_original.._stime\",
                                       dpes[i] + \":_online.._status\");
      else
      {
        anytype dpVal;
        time dpTime;
        bit32 dpState;

        dpGet(dpes[i] + \":_online.._value\",   dpVal,
              dpes[i] + \":_original.._stime\", dpTime,
              dpes[i] + \":_online.._status\",  dpState);

        updateValuesCB(dpes[i] + \":_online.._value\",   dpVal,
                       dpes[i] + \":_original.._stime\", dpTime,
                       dpes[i] + \":_online.._status\",  dpState);
      }
    }
  }
  else
  {
    if ( bDoConnect )
      for ( i = 1; i <= dynlen(dpes); i++ )
        dpDisconnect(\"updateValuesCB\", dpes[i] + \":_online.._value\",
                                       dpes[i] + \":_original.._stime\",
                                       dpes[i] + \":_online.._status\");

    //txtOneUpdate.visible(0);
    //txtPermUpdate.visible(0);
    //txtPermUpdateOver.visible(1);
    //dateTime.text(formatTime(\"%c\", getCurrentTime()));
  }
}

// =================================================================================================
//  Callback function: updateValuesCB()
//  Description: processes the table update
// =================================================================================================
updateValuesCB(string dp1, anytype value,
               string dp2, time    t,
               string dp3, bit32   state)
{
  string bits, d, dpe, dp;
  int type;

  dpe = dpSubStr(dp1,DPSUB_SYS_DP_EL);

  dp1 = dpSubStr(dp1, DPSUB_SYS_DP_EL);
  pieceTogetherBits(state, bits);
  d = dpGetComment(dp1);
  //t = formatTime(\"%X\", t);

  getDpeType(dp1, type);
  checkSys(dpe, dp1);

  if ( strlen(d) > 0 )
  {
    dp1 = d;
    checkSys(dpe, d);
  }

  tabInfo.updateLine(1, \"dpe_orig\",dpe,
                        \"dpe\", dp1,
                        //\"dpcomment\", d,
                        \"value\", value,
                        //\"value_d\", value,
                        //\"type\", type,
                        \"bits\", bits,
                        \"time\", formatTime(\"%c\",t,\"  (%03d)\"),
                        //\"time\", formatTime(\"%X\", t),
                        \"detail\", \"...\");
}
// =================================================================================================
// Function:	cmdClose()
// Description: closes the tag preview panel
// =================================================================================================
cmdClose(int iOpt)
{
  if ( iOpt == 0 )
    PanelOffReturn(makeDynFloat(), makeDynString());

  if ( iOpt == 1 )
  {
    dyn_float  df;
    dyn_string ds;

    ChildPanelOnCentralModalReturn(\"vision/MessageInfo3\",
                                   getCatStr(\"general\", \"info\"),
                                   makeDynString(getCatStr(\"iec61850\", \"DatasetTagDelete\"),
                                                 \"$2:\"+getCatStr(\"general\", \"yes\"),
                                                 \"$3:\"+getCatStr(\"general\", \"no\"),
                                                 getCatStr(\"general\", \"cancel\")),
                                   df, ds);

    if ( dynlen(df) < 1 || df[1] == 2 )
      return;
    else if ( df[1] == 1 )
      PanelOffReturn(makeDynFloat(1), makeDynString(\"1\"));
    else if ( df[1] == 0 )
      PanelOffReturn(makeDynFloat(), makeDynString());
  }
}

// =================================================================================================
// Function: triggerSQ(int iOption)
// Description: triggers a single query for all tags in the list
// =================================================================================================
triggerSQ(int iOption)
{
  string sDrvCommonDp = \"_Driver\" + g_iDrvNum + \".SQ\";

  g_bLoopSQ = ( iOption > 0 );

  if ( iOption == -1 )
    return;
  else if ( iOption == 0 )
    for ( int i = 1; i <= dynlen(g_dsList); i++ )
      dpSetWait(sDrvCommonDp, g_dsList[i]+\".\");
  else
  {
    while ( g_bLoopSQ )
    {
      for ( int i = 1; i <= dynlen(g_dsList); i++ )
        dpSetWait(sDrvCommonDp, g_dsList[i]+\".\");

      delay(iOption);
    }
  }
}
// =================================================================================================
// Function: applySettings()
// Description: applies the update rate value for the single query and reloads table if configuration changed
// =================================================================================================
applySettings()
{
  if ( sbUpdate.value == 0 )
    triggerSQ(-1);
  else
    triggerSQ(sbUpdate.value);

  //cbAllLines.enabled = ( dynlen(g_dsList) > tfMaxLines.text);

  if ( cbAllLines.state(0) )
    g_iMaxLinesTable = dynlen(g_dsList);
  else
    g_iMaxLinesTable = tfMaxLines.text;

  if ( g_dmInit != g_dmNew )
    reloadPreview(g_dmNew);
}

// =================================================================================================
// Function: reloadPreview()
// Description: reload table for max lines and LN filter
// =================================================================================================
reloadPreview(dyn_mixed dm)
{
  g_dmInit = dm;
  g_dsFLND = g_dsList;

  dyn_string dsLnFilter = cmbLnFilter.items;
  int iLnFilter = cmbLnFilter.selectedPos;

  if ( iLnFilter > 1 )
  {
    dynClear(g_dsFLND);

    string sLn = dsLnFilter[iLnFilter];

    dyn_string dsLNs = g_dsAttr;

    for ( int i = 1; i <= dynlen(dsLNs); i++ )
    {
      dsLNs[i] = strsplit(dsLNs[i], \"$\")[1];
      dsLNs[i] = strsplit(dsLNs[i], \"/\")[2];

      if ( dsLNs[i] == sLn )
        dynAppend(g_dsFLND, g_dsList[i]);
    }
  }

  tabInfo.deleteAllLines();

  g_dsFLNDSorted = g_dsFLND;
  dynSort(g_dsFLNDSorted);

  cbAllLines.text(0) = getCatStr(\"iec61850\", \"TagsAllLines\") + \"(\" + dynlen(g_dsFLND) + \")\";

  for ( int i = 1; i <= dynlen(g_dsFLNDSorted); i++ )
    if ( dpExists(g_dsFLNDSorted[i] + \".\") )
      checkAndAddDpe(g_dsFLNDSorted[i] + \".\");

  startUpdateValues(1);
}


" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
25 0
"tabInfo"
""
1 60.00000000000003 90.71633237822348 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
0 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignNone"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  8 77.99999999999997 891 456
E"main(int row, string column, string value)
{
  string  dpe, dp1, desc, d, bits, state;
  anytype value_d;
  int     i, type, type_t,OK_NotOK;
  time    t;

  // opens the detail panel
  if ( column == \"bits\" )
  {
    getValue(\"\", \"cellValueRC\", row,
                 \"dpe_orig\", dpe);

    if ( (!dpExists(dpe+\":_online.._value\")) || (dpElementType(dpe)==1) )
    {
      ChildPanelOnModal(\"vision/MessageWarning\",
                        getCatStr(\"para\",\"warning\"),
                        makeDynString(getCatStr(\"misc\", \"DpeNotExisting\")),
                        50,50);
      return;
    }
    else
    {
      bit64 b64;
      dpGet(dpe+\":_original.._status64\", b64);

      ChildPanelOnCentralModal(\"para/iec61850Client_TagBits.pnl\",
                               getCatStr(\"misc\", \"title_of_dpe_info\"),
                               makeDynString(\"$1:\" + dpe,
                                             \"$2:\" + b64));
    }
  }

  // opens the detail panel
  if ( column == \"detail\" )
  {
    getValue(\"\", \"cellValueRC\", row,
                 \"dpe_orig\", dpe);

    if ( (!dpExists(dpe+\":_online.._value\")) || (dpElementType(dpe)==1) )
    {
      ChildPanelOnModal(\"vision/MessageWarning\",
                        getCatStr(\"para\",\"warning\"),
                        makeDynString(getCatStr(\"misc\", \"DpeNotExisting\")),
                        50,50);
      return;
    }
    else
    {
      ChildPanelOnCentralModal(\"vision/dpe_info.pnl\",
                               getCatStr(\"misc\", \"title_of_dpe_info\"),
                               makeDynString(\"$b_editable:FALSE\",
                                             \"$dpe:\"+dpe));
    }
  }
}
" 0
 1 0 1 6 0 "dpe_orig" 0 0 0 "s" 4
LANG:10001 8 dpe_orig
LANG:10004 8 dpe_orig
LANG:10000 8 dpe_orig
LANG:10027 8 dpe_orig
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

0 "dpe" 32 1 0 "s" 4
LANG:10001 3 Tag
LANG:10004 3 Tag
LANG:10000 3 Tag
LANG:10027 6 Тэг
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

370 "value" 17 1 0 "s" 4
LANG:10001 5 Value
LANG:10004 6 数值
LANG:10000 4 Wert
LANG:10027 16 Значение
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

200 "bits" 6 1 0 "s" 4
LANG:10001 4 Bits
LANG:10004 4 Bits
LANG:10000 4 Bits
LANG:10027 8 Биты
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

80 "time" 15 1 0 "s" 4
LANG:10001 10 Time stamp
LANG:10004 6 时间
LANG:10000 11 Zeitstempel
LANG:10027 25 Метка времени
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

180 "detail" 2 1 0 "s" 4
LANG:10001 3 ...
LANG:10004 3 ...
LANG:10000 3 ...
LANG:10027 3 ...
E
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

30 
25 25 10 0
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0 0 2 1 1 7
1 0
21 1
"sbUpdate"
""
1 421 371 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignNone"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  833 463 891 491
0

E
E
E

N 0 100 5 0 1 1
2 2
"ptUpdate"
""
1 830 470 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
2 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 684 470 830 485
0 2 2 "0s" 0 0 0 194 0 0  830 470 1
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 25 Update rate (in seconds):
LANG:10004 12 刷新率(s)
LANG:10000 34 Aktualisierungsrate (in Sekunden):
LANG:10027 51 Интервал обновления (в сек.):
2 5
"comNumberOfElements"
""
1 567.9583333333333 49.99999999999995 E E E 1 E 1 E N "STD_text" E N "_Transparent" E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 1 0 1 E U  0 E 664 49.99999999999995 694.9583333333333 65
0 2 2 "0s" 0 0 0 194 0 0  694.9583333333333 49.99999999999995 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 6 Total:
LANG:10004 7 总计:
LANG:10000 7 Gesamt:
LANG:10027 11 Всего:
14 6
"tfTagCount"
""
1 772.6607142857142 87.99999999999991 E E E 1 E 1 E N "STD_textfield_text" E N "STD_textfield_back" E E
 E E
6 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  703 43.49999999999997 756 71.49999999999997
2 "0s" 0 0 0 0 0 -1  E E E
13 7
"cmdUpdateTable"
""
1 504.7708333333334 515 E E E 0 E 0 E N "_ButtonText" E N "_Button" E E
 E E
7 0 0 0 0 0
E E E
0
4
LANG:10001 12 Update table
LANG:10004 18 刷新表格数据
LANG:10000 21 Tabelle aktualisieren
LANG:10027 31 Обновить таблицу

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10004 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10000 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10027 32 Courier New,-1,12,5,40,0,0,0,0,0
0  503.1041666666667 513 531.1041666666667 541

P 
10862530
"pictures/StandardIcons/refresh_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  startUpdateValues(0);
}
" 0
 E E E
20 8
"cbPermanentUpdate"
""
1 327.7708333333335 787 E E E 0 E 0 E N "_3DText" E N "_3DFace" E E
 E E
8 0 0 0 0 0
E E E
0
4
LANG:10001 27 Update table automatically 
LANG:10004 24 实时更新表格数值
LANG:10000 33 Tabelle automatisch aktualisieren
LANG:10027 49 Автомат. обновлять таблицу

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  533.1041666666667 513 561.1041666666667 541
1
T 
4
LANG:10001 27 Update table automatically 
LANG:10004 24 实时更新表格数值
LANG:10000 33 Tabelle automatisch aktualisieren
LANG:10027 49 Автомат. обновлять таблицу

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
E"main()
{
  startUpdateValues(1);
}
" 0
13 9
"cmdClosePanel"
""
1 803.1666666666667 513 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
10 0 0 0 27 0
E E E
0
4
LANG:10001 26 Close panel without action
LANG:10004 12 关闭面板
LANG:10000 41 Panel schließen, ohne Aktion auszulösen
LANG:10027 52 Закрыть без выполн. операции

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  803.1666666666667 513 891.1666666666667 541

T 
4
LANG:10001 5 Close
LANG:10004 6 关闭
LANG:10000 10 Schließen
LANG:10027 14 Закрыть
"main()
{
  cmdClose(1);
}
" 0
 E E E
13 10
"cmdPrintTable"
""
1 798.1666666666667 1328 E E E 0 E 0 E N "STD_button_text" E N "STD_pushbutton_back" E E
 E E
11 0 0 0 0 0
E E E
0
4
LANG:10001 11 Print Table
LANG:10004 6 打印
LANG:10000 15 Tabelle Drucken
LANG:10027 31 Печатать таблицу

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  623.1666666666667 513 711.1666666666667 541

T 
4
LANG:10001 5 Print
LANG:10004 6 打印
LANG:10000 7 Drucken
LANG:10027 12 Печать
"main()
{
  printTable(\"tabInfo\", true);
}" 0
 E E E
13 11
"cmdOpenHelp"
""
1 403.1666666666667 1283 E E E 0 E 0 E N "STD_button_text" E N "STD_pushbutton_back" E E
 E E
12 0 0 0 0 0
E E E
0
4
LANG:10001 16 Open online help
LANG:10004 18 打开在线帮助
LANG:10000 20 Online Hilfe öffnen
LANG:10027 14 Справка

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  8.166666666666741 513 96.1666666666667 541

T 
4
LANG:10001 4 Help
LANG:10004 6 帮助
LANG:10000 5 Hilfe
LANG:10027 14 Справка
"main()
{
  if ( getUserPermission(1) )
 	  std_help(\"dpe_monitor\");
  else
    ChildPanelOnCentral(\"vision/MessageWarning\",
                        getCatStr(\"va\",\"headerPanelhost\"),
                        makeDynString(getCatStr(\"general\",\"permission\"),
                                      getCatStr(\"general\",\"cancel\")));
}
" 0
 E E E
1 50 0 "" 0
0
13 14
"cmdDeleteDPE"
""
1 564.8750000000001 515 E E E 0 E 0 E N "_ButtonText" E N "_Button" E E
 E E
13 0 0 0 0 0
E E E
0
4
LANG:10001 20 Delete selected line
LANG:10004 18 删除选定的行
LANG:10000 24 Gewählte Zeile löschen
LANG:10027 46 Удалить выбранную строку

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10004 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10000 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10027 32 Courier New,-1,12,5,40,0,0,0,0,0
0  563.2083333333335 513 591.2083333333335 541

P 
10862530
"pictures/StandardIcons/delete_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  // Remove the selected element.
  dyn_int line;
  int i;

  line = tabInfo.getSelectedLines;

  if ( dynlen(line) == 0 )
  {
    ChildPanelOnCentral(\"vision/MessageInfo1\",
                        getCatStr(\"general\",\"information\"),
                        makeDynString(getCatStr(\"para\",\"nolineselected\")));
    return;
  }

  tabInfo.deleteLineN(line[1]);
  i = line[1];

  tabInfo.lineVisible () = i;
  setValue(\"tabInfo\",\"selectLineN\",i);
  tfMaxLines.text = tabInfo.lineCount();
  tfTagCount.text = dynlen(g_dsList);
}
" 0
 E E E
13 15
"cmdDeleteAllDPEs"
""
1 594.8750000000001 515 E E E 0 E 0 E N "_ButtonText" E N "_Button" E E
 E E
14 0 0 0 0 0
E E E
0
4
LANG:10001 12 Delete table
LANG:10004 12 删除表格
LANG:10000 16 Tabelle löschen
LANG:10027 31 Очистить таблицу

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10004 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10000 32 Courier New,-1,12,5,40,0,0,0,0,0
LANG:10027 32 Courier New,-1,12,5,40,0,0,0,0,0
0  593.2083333333335 513 621.2083333333335 541

P 
10862530
"pictures/StandardIcons/delete_all_20.png"
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
"main()
{
  // Remove all elements
  dyn_string ds;
  dyn_float  df;

  ChildPanelOnCentralReturn(\"vision/MessageWarning2\",
                            getCatStr(\"general\",\"warning\"),
                            makeDynString(getCatStr(\"dpeMonitor\",\"dpeMon_delete_all\"),
                                          \"$2:\"+getCatStr(\"general\",\"OK\"),
                                          \"$3:\"+getCatStr(\"general\",\"cancel\")),
                            df, ds);

  if ( df[1] == 1 )
  {
    tabInfo.deleteAllLines();
    tfMaxLines.text = tabInfo.lineCount();
    tfTagCount.text = dynlen(g_dsList);
  }
  else
    return;
}
" 0
 E E E
2 16
"ptPreview"
""
1 9.999999999999931 15 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
15 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 9.999999999999931 15 89 30
0 2 2 "0s" 0 0 0 192 0 0  9.999999999999931 15 1
4
LANG:10001 31 Arial,-1,13,5,75,0,0,0,0,0,Bold
LANG:10004 31 Arial,-1,13,5,75,0,0,0,0,0,Bold
LANG:10000 31 Arial,-1,13,5,75,0,0,0,0,0,Bold
LANG:10027 31 Arial,-1,13,5,75,0,0,0,0,0,Bold
0 4
LANG:10001 11 Tag preview
LANG:10004 9 Tag预览
LANG:10000 11 Tag-Preview
LANG:10027 25 Просмотр тэга
2 19
"ptIed"
""
1 239.9999999999999 15 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
16 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 215 15 239.9999999999999 30
0 2 2 "0s" 0 0 0 194 0 0  239.9999999999999 15 1
4
LANG:10001 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 4 IED:
LANG:10004 4 IED:
LANG:10000 4 IED:
LANG:10027 4 IED:
2 20
"ptDs"
""
1 559.9999999999999 15 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 511 15 559.9999999999999 30
0 2 2 "0s" 0 0 0 194 0 0  559.9999999999999 15 1
4
LANG:10001 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 8 Dataset:
LANG:10004 9 数据集
LANG:10000 10 Datensatz:
LANG:10027 24 Набор данных:
14 21
"tfIed"
""
1 747.6607142857142 52 E E E 1 E 1 E N "STD_textfield_text" E N "STD_textfield_back" E E
 E E
18 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  248 8 431 36
2 "0s" 0 0 0 0 0 -1  E E E
14 22
"tfDs"
""
1 812.6607142857142 52 E E E 1 E 1 E N "STD_textfield_text" E N "STD_textfield_back" E E
 E E
19 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  568 8 891 36
2 "0s" 0 0 0 0 0 -1  E E E
2 25
"dateTime"
""
1 297.5 518 E E E 0 E 0 E N "STD_text" E N "_Transparent" E E
 E E
20 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 299.5 520 495 535
0 2 2 "0s" 0 0 0 64 0 0  299.5 520 1
4
LANG:10001 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
0 4
LANG:10001 17 20.05.01 12:00:00
LANG:10004 17 20.05.01 12:00:00
LANG:10000 17 20.05.01 12:00:00
LANG:10027 17 20.05.01 12:00:00
2 26
"txtPermUpdateOver"
""
1 257.1666666666667 520 E E E 0 E 0 E N "STD_text" E N "_Transparent" E E
 E E
21 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 200 520 295.1666666666667 535
0 2 2 "0s" 0 0 0 194 0 0  295.1666666666667 520 1
4
LANG:10001 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
0 4
LANG:10001 15 Update stopped:
LANG:10004 16 更新已停止:
LANG:10000 23 Aktualisierung beendet:
LANG:10027 44 Обновление остановлено:
2 27
"txtPermUpdate"
""
1 264 520 E E E 0 E 0 E N "STD_text" E N "_Transparent" E E
 E E
22 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 250 520 295 535
0 2 2 "0s" 0 0 0 194 0 0  295 520 1
4
LANG:10001 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
0 4
LANG:10001 7 Update:
LANG:10004 7 更新:
LANG:10000 20 Aktualisierung seit:
LANG:10027 36 Обновление [начато]:
2 28
"txtOneUpdate"
""
1 259.1666666666667 520 E E E 0 E 0 E N "STD_text" E N "_Transparent" E E
 E E
23 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 223 520 295.1666666666667 535
0 2 2 "0s" 0 0 0 194 0 0  295.1666666666667 520 1
4
LANG:10001 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,13,5,50,0,0,0,0,0,Regular
0 4
LANG:10001 12 Last update:
LANG:10004 13 最后更新:
LANG:10000 22 Letzte Aktualisierung:
LANG:10027 40 Последнее обновление:
13 29
"cmdSQ"
""
1 708.166666666667 513 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
24 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  378 463 506 491

T 
4
LANG:10001 13 Update values
LANG:10004 12 更新数值
LANG:10000 18 Werte aktualiseren
LANG:10027 33 Обновить значения
"main()
{
  //g_bLoopSQ = 0;
  //sbUpdate.value = 0;
  triggerSQ(0);
}
" 0
 E E E
13 32
"cmdApply"
""
1 972 447 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
25 0 0 0 16777221 0
E E E
0
4
LANG:10001 14 Accept changes
LANG:10004 12 接受更改
LANG:10000 23 Änderungen übernehmen
LANG:10027 37 Применить изменения

2
"sizePolicy" "Minimum Fixed"
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  713 513 801 541

T 
4
LANG:10001 5 Apply
LANG:10004 6 应用
LANG:10000 11 Übernehmen
LANG:10027 18 Применить
"main()
{
  applySettings();
}















" 0
 E E E
20 39
"cbAllLines"
""
1 -1073.220196759258 737 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
30 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  788 44 891 72
1
T 
4
LANG:10001 3 All
LANG:10004 6 所有
LANG:10000 4 Alle
LANG:10027 6 Все

0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
E E
0 0 0 0 0
1
E E
E"main()
{
  if ( cbAllLines.state(0) )
    g_iMaxLinesTable = dynlen(g_dsList);
  else
    g_iMaxLinesTable = 50;

  tfMaxLines.enabled = !cbAllLines.state(0);
  tfMaxLines.text = ( dynlen(g_dsFLND) && dynlen(g_dsFLND) < g_iMaxLinesTable) ? dynlen(g_dsFLND) : g_iMaxLinesTable;

  g_dmNew = makeDynMixed(cmbLnFilter.selectedPos, tfMaxLines.text, cbAllLines.state(0));
  reloadPreview(g_dmNew);
}

" 0
2 40
"ptLnFilter"
""
1 239.9999999999999 49.9999999999999 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
31 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 133 49.9999999999999 239.9999999999999 65
0 2 2 "0s" 0 0 0 194 0 0  239.9999999999999 49.9999999999999 1
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0 4
LANG:10001 20 Logical Node filter:
LANG:10004 21 Logical 节点过滤:
LANG:10000 20 Logical Node Filter:
LANG:10027 45 Фильтр логического узла:
22 41
"cmbLnFilter"
""
1 250 45 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
32 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,50,0,0,0,0,0
0  248 43 431 71
0

E
"main()
{
  g_dmNew = makeDynMixed(cmbLnFilter.selectedPos, tfMaxLines.text, cbAllLines.state(0));
  reloadPreview(g_dmNew);
}
" 0

E
 0 0
2 48
"PRIMITIVE_TEXT2"
""
1 432.9583333333333 49.99999999999995 E E E 1 E 1 E N "STD_text" E N "_Transparent" E E
 E E
35 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 1 0 1 E U  0 E 470 49.99999999999995 559.9583333333333 65
0 2 2 "0s" 0 0 0 194 0 0  559.9583333333333 49.99999999999995 1
4
LANG:10001 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 arial,-1,13,5,40,0,0,0,0,0
0 4
LANG:10001 15 Tags displayed:
LANG:10004 10 Tag显示:
LANG:10000 15 Tags angezeigt:
LANG:10027 34 Отображённые тэги:
14 49
"tfMaxLines"
""
1 777.6607142857142 87.99999999999991 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
36 0 0 0 0 0
E "main()
{
  g_iMaxLinesTable = tfMaxLines.text;
  g_dmNew = makeDynMixed(cmbLnFilter.selectedPos, tfMaxLines.text, cbAllLines.state(0));
  reloadPreview(g_dmNew);
}
" 0
 E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

1
"layoutAlignment" "AlignCenter"
4
LANG:10001 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10004 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10000 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10027 26 Arial,-1,13,5,40,0,0,0,0,0
0  568 43.49999999999997 621 71.49999999999997
3 "0s" 0 0 0 0 0 -1  E E "main()
{
  g_iMaxLinesTable = tfMaxLines.text;
  g_dmNew = makeDynMixed(cmbLnFilter.selectedPos, tfMaxLines.text, cbAllLines.state(0));
  reloadPreview(g_dmNew);
}
" 0

0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
3 0 "PANEL_REF0" -1
"layoutAlignment" "AlignCenter"
"" ""
"objects_parts/STD_OBJECTS/ButtonBarBackground.pnl" 75 565 T 9 1.801603206412826 0 1 -134.9535738142953 -60
0
0
