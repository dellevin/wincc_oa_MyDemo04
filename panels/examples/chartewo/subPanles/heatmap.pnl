V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 835 554 N "White" 0
"main()
{
  //define axes labels
  labelXaxis = \"Row\";
  labelYaxis = \"Column\";

  //define panel size
  maxX = 30;
  maxY = 20;

  //define cell size
  g_iBubleSize = 40;

  //define value of cells
  for (int x = 1; x <= maxX; x++)
  {
    for (int y = 1; y <= maxY; y++)
    {
      //filling with random values
      cellValue[x][y] = fabs(sin(deg2rad(x * (180.0 / maxX)))) +
                        fabs(sin(deg2rad(y * (180.0 / maxY))));
    }
  }

  //initialize and draw a chart name 'Chart_ewo2'
  initChart(\"Chart_ewo2\");

  //set title global font if exist
  if ( globalExists(\"g_chartTitleFont\") )
    title.font(g_chartTitleFont);

  //call randomization function for the chart name 'Chart_ewo2'
  randChart(\"Chart_ewo2\");
}
" 0
 E E E E 1 -1 -1 0  10 10
""0  1
E "int maxX = 30, maxY = 20, g_iBubleSize = 40;
string labelXaxis, labelYaxis;
dyn_dyn_float cellValue;

/*
  @authors Grygorii Sokhrannyi, Martin Koller
  Initialize and draw the chart for the given chart name
  @param sChartName Is the chart name which will be drawn
*/
initChart(string sChartName)
{
  //get shape of the chart
  shape shChart = getShape(sChartName);

  //remove axes if chart is redrawn
  shChart.removeAxes();

  //set global fonts for the chart if exist
  if ( globalExists(\"g_chartLabelsFont\") )
  {
    shChart.font(g_chartLabelsFont);
    shChart.legendFont(g_chartLabelsFont);
    shChart.axesFont(g_chartLabelsFont);
    shChart.axesLabelFont(g_chartLabelsFont);
  }

  //set bubbles size
  shChart.bubbleColorFromValue = TRUE;
  shChart.bubbleMinSize = g_iBubleSize;
  shChart.bubbleMaxSize = g_iBubleSize;

  //set labels for axis
  if ( labelXaxis != \"\" )
    shChart.addAxis(-1, -1, labelXaxis);

  if ( labelYaxis != \"\" )
    shChart.addAxis(-1, -1, labelYaxis);

  //cells coordinates and value
  dyn_float dx, dy, dv;

  //fill chart with cells
  for (int x = 0; x < maxX; x++)
  {
    for (int y = 0; y < maxY; y++)
    {
      dx[x * maxY + y + 1] = x;
      dy[x * maxY + y + 1] = y;

      if ( dynlen(cellValue) <= 0 )
        dv[x * maxY + y + 1] = fabs(sin(deg2rad( x * (180.0 / maxX)))) + fabs(sin(deg2rad( y * (180.0 / maxY))));
      else
        dv[x * maxY + y + 1] = cellValue[x+1][y+1];
    }
  }
  shChart.setSeriesXYV(0, dx, dy, dv);

  //set colors and maker type for the Chart
  shChart.setSeriesFillColor(0, \"SiemensNaturalRedDark\");
  shChart.setSeriesLineColor(0, \"SiemensNaturalRedDark\");
  shChart.setSeriesLineType(0, \"[none,oneColor,JoinBevel,CapButt,0]\");
  shChart.setSeriesMarkerType(0, 1);
}

/*
  @authors Grygorii Sokhrannyi
  Function that randomize the given chart with the given delay in seconds
  @params
    - sChartName Is the chart name which will be drawn
    - iDelay Is the delay value in seconds, it specify how frequently randomization is executed
*/
randChart(string sChartName)
{
  const int iDelay = 3;

  //get shape of the chart
  shape shChart = getShape(sChartName);

  //infinite loop for an infinite animation
  while ( 1 )
  {
    delay(iDelay);

    //regenerate all values
    dyn_float dx, dy, dv;
    float variationX = 180.0 * rand() / 32768.0;
    float variationY = 180.0 * rand() / 32768.0;

    for (int x = 0; x < maxX; x++)
    {
      for (int y = 0; y < maxY; y++)
      {
        dx[x * maxY + y + 1] = x;
        dy[x * maxY + y + 1] = y;
        dv[x * maxY + y + 1] = fabs(sin(deg2rad(variationX + x * (180.0 / maxX)))) +
                               fabs(sin(deg2rad(variationY + y * (180.0 / maxY))));
      }
    }

    //redraw the chart with the generated values
    shChart.setSeriesXYV(0, dx, dy, dv);
  }
}
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
3 0 1 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
29 1
"Chart_ewo2"
""
1 9 75 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
0 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

4
"chartType" "enum 6"
"legendPosition" "enum 3"
"lineWidth" "int 0"
"layoutAlignment" "AlignNone"
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
LANG:10027 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
0  9 75 825.0000000000001 544
9 Chart.ewo
0
E2 26
"title"
""
1 20 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
25 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"sizePolicy" "Preferred Fixed"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E 1.068395125745398 0 5.499999999999999 -10.35805029815919 -43.99999999999999 0 E 20 10 780 20
0 2 2 "0s" 0 0 0 65 0 0  20 10 1
4
LANG:10001 31 Arial,-1,33,5,75,0,0,0,0,0,Fett
LANG:10004 31 Arial,-1,33,5,75,0,0,0,0,0,Fett
LANG:10000 31 Arial,-1,33,5,75,0,0,0,0,0,Fett
LANG:10027 31 Arial,-1,33,5,75,0,0,0,0,0,Fett
0 4
LANG:10001 19 Surface temperature
LANG:10004 12 表面温度
LANG:10000 19 Surface temperature
LANG:10027 19 Surface temperature
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
4 0 "LAYOUT_GROUP0" -1
2 0 
26 1 

"S 26" "0 0 1 1"
"S 1" "1 0 1 1"
"" ""
0 3 0 0
0
