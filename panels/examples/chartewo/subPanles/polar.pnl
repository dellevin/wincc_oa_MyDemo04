V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 835 554 N "White" 0
"main()
{
  //define axes labels
  xLabel = \"Row\";
  yLabel = \"Column\";

  dyn_int valX, valY;

  //define series1
  chartNames[1] = \"Location A\";   //label
  chartColors[1] = \"{175,35,95,128}\"; //color
  valX = makeDynInt(0, 45, 90, 135, 180, 225, 270, 315);
  valY = makeDynInt(20, 60, 100, 70, 30, 50, 10, 80);

  //store values for series 1
  dynAppend(series1Values,valX);
  dynAppend(series1Values,valY);

  //define series2
  chartNames[2] = \"Location B\";   //label
  chartColors[2] = \"{85,160,185,128}\"; //color
  valX = makeDynInt(0, 45, 90, 135, 180, 225, 270, 315);
  valY = makeDynInt(77, 40, 10, 25, 85, 130, 100, 90);

  //store values for series 2
  dynAppend(series2Values,valX);
  dynAppend(series2Values,valY);

  //initialize and draw a chart name 'Chart_ewo2'
  initChart(\"Chart_ewo2\");

  string dateTitle = getCurrentTime();
  dyn_string date = strsplit(dateTitle, \" \");

  dateTitle = \"Wind speed (km/h) on \" + date[1];
  title.text(dateTitle);

  //set title global font if exist
  if ( globalExists(\"g_chartTitleFont\") )
    title.font(g_chartTitleFont);

  //call randomization function for the chart name 'Chart_ewo2'
  randChart(\"Chart_ewo2\");
}
" 0
 E E E E 1 -1 -1 0  10 10
""0  1
E "string xLabel, yLabel;
dyn_string chartColors, chartNames;
dyn_dyn_float series1Values, series2Values;

/*
  @authors Grygorii Sokhrannyi, Martin Koller
  Initialize and draw the chart for the given chart name
  @param chartName Is the chart name which will be drawn
*/
initChart(string chartName)
{
  //get shape of the chart
  shape shapeChart = getShape(chartName);

  //remove axes if chart is redrawn
  shapeChart.removeAxes();

  //set global fonts for the chart if exist
  if ( globalExists(\"g_chartLabelsFont\") )
  {
    shapeChart.font(g_chartLabelsFont);
    shapeChart.legendFont(g_chartLabelsFont);
    shapeChart.axesFont(g_chartLabelsFont);
    shapeChart.axesLabelFont(g_chartLabelsFont);
  }

  dyn_int valX, valY;
  int maxX = 360, maxY = 160; //max values for axes

  //set axis maximum value
  shapeChart.addAxis(maxX, 0, xLabel);
  shapeChart.addAxis(0, maxY, yLabel);
  Chart_ewo2.startAngle(90.0);

  //do series 1
  {
    //if values are not defined
    if ( dynlen(series1Values[1]) <= 0 )
    {
      for (int i = 1; i <= 8; ++i)
      {
        valX[i] = rand() / 100.0;
        valY[i] = rand() * maxY / 32767.0;
      }
    }
    else
    {
      for (int i = 1; i <= dynlen(series1Values[1]); ++i)
      {
        valX[i] = series1Values[1][i];
        valY[i] = series1Values[2][i];
      }
    }

    //set values for series
    sortingRespectively(valX, valY, true);
    shapeChart.setSeriesPolar(0, valX, valY);

    //set series 1 bubbles type
    shapeChart.setSeriesMarkerType(0, 0);
    shapeChart.setSeriesLineType(0, \"[none,oneColor,JoinMiter,CapButt,0]\");
  }

  dynClear(valX);
  dynClear(valY);

  //do series 2
  {
    //if values are not defined
    if ( dynlen(series2Values[1]) <= 0 )
    {
      for (int i = 1; i <= 8; ++i)
      {
        valX[i] = rand() / 100;
        valY[i] = rand() * maxY / 32767.0;
      }
    }
    else
    {
      for (int i = 1; i <= dynlen(series2Values[1]); ++i)
      {
        valX[i] = series2Values[1][i];
        valY[i] = series2Values[2][i];
      }
    }

    //set values for series
    sortingRespectively(valX, valY, true);
    shapeChart.setSeriesPolar(1, valX, valY);

    //set series 1 bubbles type
    shapeChart.setSeriesMarkerType(1, 0);
    shapeChart.setSeriesLineType(1, \"[none,oneColor,JoinMiter,CapButt,0]\");
  }

      //set labels and colors for series
  if ( chartNames[1] != \"\" )
      shapeChart.setSeriesName(0, chartNames[1]);

  if ( chartColors[1] != \"\" )
      shapeChart.setSeriesFillColor(0, chartColors[1]);

  if ( chartNames[2] != \"\" )
      shapeChart.setSeriesName(1, chartNames[2]);

  if ( chartColors[2] != \"\" )
      shapeChart.setSeriesFillColor(1, chartColors[2]);
}

/*
  @author Grygorii Sokhrannyi
  Function that randomize the given chart
  @params
    - chartName Is the chart name which will be drawn
*/
void randChart(string chartName)
{
  shape shapeChart = getShape(chartName);
  const int iDelay = 3;
  dyn_int valX, valY;

  //infinite loop for an infinite animation
  while ( 1 )
  {
    delay(iDelay);

    //randomize series 1
    if ( dynlen(series1Values[1]) <= 0 )
    {
      for (int i = 1; i <= 8; ++i)
      {
        valX[i] = rand() / 100;
        valY[i] = rand() * 130 / 32767.0;
      }

      sortingRespectively(valX, valY, true);
      shapeChart.setSeriesPolar(0, valX, valY);
    }
    else
    {
      for (int i = 1; i <= dynlen(series1Values[1]); ++i)
      {
        series1Values[2][i] = rand() * 130 / 32767.0;
      }

      sortingRespectively(series1Values[1], series1Values[2], true);
      shapeChart.setSeriesPolar(0, series1Values[1], series1Values[2]);
    }

    dynClear(valX);
    dynClear(valY);

    //randomize series 2
    if ( dynlen(series2Values[1]) <= 0 )
    {
      for (int i = 1; i <= 8; ++i)
      {
        valX[i] = rand() / 100;
        valY[i] = rand() * 140 / 32767.0;
      }

      sortingRespectively(valX, valY, true);
      shapeChart.setSeriesPolar(1, valX, valY);
    }
    else
    {
      for (int i = 1; i <= dynlen(series2Values[1]); ++i)
      {
        series2Values[2][i] = rand() * 140 / 32767.0;
      }

      sortingRespectively(series2Values[1], series2Values[2], true);
      shapeChart.setSeriesPolar(1, series2Values[1], series2Values[2]);
    }
  }
}


/*
  @author Grygorii Sokhrannyi
  Sort first given dynamic variable and apply its sorting to the second dynamic variable
  @params
    - oneSeries Is the first given series, which will be sorted
    - otherSeries Is the second given series, the order of which will be changed with respect to the first series
*/
void sortingRespectively(dyn_anytype &oneSeries, dyn_anytype &otherSeries, bool descending = FALSE)
{
  // sanity checks
  if ( dynlen(oneSeries) <= 0 || dynlen(oneSeries) != dynlen(otherSeries) )
    return;

  anytype value;

  for (int i = 2; i <= dynlen(oneSeries); ++i)
  {
    for (int j = 1; j < i; ++j)
    {
      if ( (!descending && (oneSeries[j] > oneSeries[i])) ||   // if the first value is bigger then the next one
           (descending && (oneSeries[j] < oneSeries[i])) )  // if the first value is smaller then the next one
      {
        // swap two values of checked series
        value = oneSeries[i];
        oneSeries[i] = oneSeries[j];
        oneSeries[j] = value;

        // swap two values of other series
        value = otherSeries[i];
        otherSeries[i] = otherSeries[j];
        otherSeries[j] = value;
      }
    }
  }
}
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
3 0 1 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
29 1
"Chart_ewo2"
""
1 9 83 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
0 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"chartType" "enum 7"
"legendPosition" "enum 3"
"layoutAlignment" "AlignNone"
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
LANG:10027 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
0  9 83 825 544
9 Chart.ewo
0
E2 10
"title"
""
1 20 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"sizePolicy" "Preferred Fixed"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E 1.068421052631579 0 6.300000000000001 -10.36842105263158 -52.00000000000001 0 E 20 10 780 20
0 2 2 "0s" 0 0 0 65 0 0  20 10 1
4
LANG:10001 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10004 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10000 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10027 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
0 4
LANG:10001 17 Wind speed (km/h)
LANG:10004 14 风速(km / h)
LANG:10000 17 Wind speed (km/h)
LANG:10027 17 Wind speed (km/h)
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
4 0 "LAYOUT_GROUP1" -1
2 0 
1 10 

"S 1" "1 0 1 1"
"S 10" "0 0 1 1"
"" ""
0 2 0 0
0
