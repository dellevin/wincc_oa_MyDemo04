V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 835 554 N "White" 0
"main()
{
  //define axis labels
  g_chartLabels = makeDynString(\"Device Type #1\",
                               \"Device Type #4\",
                               \"Device Type #12\",
                               \"Device Type #25\",
                               \"Device Type #26\",
                               \"Device Type #31\");

  //define series1 attributes and values
  g_serie1Name = \"WARNING STATE FREQUENCY\";
  g_serie1Color = \"{235,210,10,128}\"; //yellow semi-transpearent color
  g_serie1Values = makeDynFloat( 13000, 8000, 5000, 17000, 3000, 3000);

  //define series2 attributes and values
  g_serie2Name = \"ERROR STATE FREQUENCY\";
  g_serie2Color = \"{175,35,95,128}\"; //red semi-transpearent color
  g_serie2Values = makeDynFloat( 2700, 2200, 2100, 2600, 2400, 2200);

  //initialize and draw a chart name 'Chart_ewo2'
  initChart(\"Chart_ewo2\");

  //set title global font if exist
  if ( globalExists(\"g_chartTitleFont\") )
    title.font(g_chartTitleFont);

  //call randomization function for the chart name 'Chart_ewo2'
  randChart(\"Chart_ewo2\");
}
" 0
 E E E E 1 -1 -1 0  10 10
""0  1
E "string g_sFontName = \"Arial,-1,30,5,50,0,0,0,0,0,Regular\";
string g_sFontAxis = \"Arial,-1,30,5,50,0,0,0,0,0,Regular\";
string g_serie1Color, g_serie2Color, g_serie1Name, g_serie2Name;
dyn_string g_chartLabels;
dyn_float g_serie1Values, g_serie2Values;
float g_axesMax = 0;

/*
  @authors Grygorii Sokhrannyi, Martin Koller
  Initialize and draw the chart for the given chart name
  @param sChartName Is the chart name which will be drawn
*/
initChart(string sChartName)
{
  //get shape of the chart
  shape shChart = getShape(sChartName);

  //set global fonts for the chart if exist
  if ( globalExists(\"g_chartLabelsFont\") )
  {
    shChart.font(g_chartLabelsFont);
    shChart.legendFont(g_chartLabelsFont);
    shChart.axesFont(g_chartLabelsFont);
    shChart.axesLabelFont(g_chartLabelsFont);
}

  //remove axes if chart is redrawn
  shChart.removeAxes();

  //some internal parameters
  int iCount = 6;
  bool bNoValues = true;

  //get maximum value of a series if its not set, needed for axes length
  if ( g_axesMax <= 0 )
  {
    g_axesMax = getDynMax(g_serie1Values);

    if ( g_axesMax < getDynMax(g_serie2Values) )
      g_axesMax = getDynMax(g_serie2Values);
  }

  //check users values and define max axis value
  if ( dynlen(g_serie1Values) > 0 )
  {
    bNoValues = false;   //false, as user provided values
    iCount = dynlen(g_serie1Values);
  }
  else
    g_axesMax = 32768;

  //define values and axis labels for the chart
  for (int i = 1; i <= iCount; i++)
  {
    //if no values provided, they would be generated
    if ( bNoValues )
      g_serie1Values[i] = rand() + 1;   //no 0 values generated for this chart

    //if no axis labels provided -> generate
    if ( dynlen(g_chartLabels) <= 0 )
      g_chartLabels[i] = \"value \" + (string)i;

    //set axis labels and maximum value
    shChart.addAxis(0, g_axesMax + g_axesMax * 0.1, g_chartLabels[i]);
  }

  //set values for the chart
  shChart.setSeries(0, g_serie1Values, g_chartLabels);

  //do series 2
  {
    for (int i = 1; i <= iCount; i++)
    {
      //if no values provided -> generate some
      if ( bNoValues )
      {
        g_serie2Values[i] = rand();
      }
    }

    //set values of series 2 for the chart, labels not needed here, as series 2 share them with series 1
    shChart.setSeries(1, g_serie2Values);

    //set serieses labels
    if ( g_serie1Name != \"\" )
      shChart.setSeriesName(0, g_serie1Name);
    else
      shChart.setSeriesName(0, \"series 1\");

    if ( g_serie2Name != \"\" )
      shChart.setSeriesName(1, g_serie2Name);
    else
      shChart.setSeriesName(1, \"series 2\");

    //set serieses colors
    if ( g_serie1Color )
      shChart.setSeriesFillColor(0, g_serie1Color);

    if ( g_serie2Color )
      shChart.setSeriesFillColor(1, g_serie2Color);
  }
}

/*
  @author Grygorii Sokhrannyi
  Function that randomize the given chart with the given delay in seconds
  @param sChartName Is the chart name which will be drawn
*/
randChart(string sChartName)
{
  //randomize period in seconds
  const int iDelay = 3;

  //infinite loop for an infinite animation
  while ( 1 )
  {
    delay(iDelay);

    //regenerate all values
    for (int i = 1; i <= dynlen(g_serie1Values); ++i)
    {
      //generate random value
      int val = (int)(rand() * 0.01);

      //redefine chart values
      if ( val % 2 == 0 )
      {
        g_serie1Values[i] = g_serie1Values[i] + val * i;
        g_serie2Values[i] = g_serie2Values[i] + val * i;
      }
      else
      {
        g_serie1Values[i] = abs(g_serie1Values[i] - val * i);
        g_serie2Values[i] = abs(g_serie2Values[i] - val * i);
      }

      //make sure during randomization maximum axes value is not exceeded
      if( g_serie1Values[i] > g_axesMax)
        g_serie1Values[i] = g_axesMax;

      if( g_serie2Values[i] > g_axesMax)
        g_serie2Values[i] = g_axesMax;
    }

    //redraw the chart with the generated values
    initChart(sChartName);
  }
}

/*
  @author Grygorii Sokhrannyi
  Function that returns the maximum value of the given dynamic array
  @param dynValue Is the dynamic array to be examined
  @return maximum value in the array, if it is an empty arrey then return 0
*/
anytype getDynMax(dyn_anytype dynValue)
{
  //check if array is not empty
  if ( dynlen(dynValue) <= 0 )
    return 0;

  anytype val = 0;

  //get the maximum value
  for (int i = 1; i <= dynlen(dynValue); ++i)
  {
    if ( dynValue[i] > val )
      val = dynValue[i];
  }
  return val;
}
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
3 0 1 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
29 5
"Chart_ewo2"
""
1 9 65 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

6
"chartType" "enum 2"
"legendPosition" "enum 3"
"axesFont" "font Arial,-1,17,5,50,0,0,0,0,0,Regular"
"legendFont" "font Arial,-1,17,5,50,0,0,0,0,0,Regular"
"sizePolicy" "Preferred Preferred"
"layoutAlignment" "AlignNone"
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
LANG:10027 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
0  9 65 825.0000000000001 544
9 Chart.ewo
0
E2 13
"title"
""
1 20 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
12 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"sizePolicy" "Preferred Fixed"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E 1.068395125745398 0 4.5 -10.35805029815919 -34 0 E 20 10 780 20
0 2 2 "0s" 0 0 0 65 0 0  20 10 1
4
LANG:10001 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10004 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10000 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10027 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
0 4
LANG:10001 18 Devices comparison
LANG:10004 12 设备比较
LANG:10000 18 Devices comparison
LANG:10027 18 Devices comparison
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
4 0 "LAYOUT_GROUP0" -1
2 0 
5 13 

"S 5" "1 0 1 1"
"S 13" "0 0 1 1"
"" ""
0 3 0 0
0
