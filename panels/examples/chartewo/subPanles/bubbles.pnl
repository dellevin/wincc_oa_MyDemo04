V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 835 554 N "White" 0
"main()
{
  //define axes labels
  g_sXlabel = \"Row\";
  g_sYlabel = \"Column\";

  //define bubles size
  g_iBubleSize = 30;

  //our coordinates variables
  dyn_int valX, valY;

  //define series1
  g_chartNames[1] = \"broken\";   //label
  g_chartColors[1] = \"SiemensNaturalRedLight\"; //color
  valX = makeDynInt(12445, 30000, 2222, 20033, 3655);   //x coordinate
  valY = makeDynInt(25000, 10010, 2222, 1001,  8770);   //y coordinate

  //store values for series 1
  dynAppend(g_serie1Values,valX);
  dynAppend(g_serie1Values,valY);

  //define series2
  g_chartNames[2] = \"not responding\";   //label
  g_chartColors[2] = \"SiemensNaturalGrayLight\"; //color
  valX = makeDynInt(1445,  20000, 1222, 333, 2655,  26609, 29609);   //x coordinate
  valY = makeDynInt(15000, 8010,  1222, 4101, 7770, 16609, 20609);   //y coordinate

  //store values for series 2
  dynAppend(g_serie2Values,valX);
  dynAppend(g_serie2Values,valY);

  //define series3
  g_chartNames[3] = \"needs calibration\";   //label
  g_chartColors[3] = \"SiemensNaturalYellowLight\"; //color
  valX = makeDynInt(1445,  20000, 1222, 333,  2655, 26609, 29609,  10,   10000, 33000);   //x coordinate
  valY = makeDynInt(15000, 10,    1222, 2101, 7770, 16609, 20609, 11342, 10000, 33000);   //y coordinate

  //store values for series 3
  dynAppend(g_serie3Values,valX);
  dynAppend(g_serie3Values,valY);

  //initialize and draw a chart name 'Chart_ewo2'
  initChart(\"Chart_ewo2\");

  //set title global font if exist
  if ( globalExists(\"g_chartTitleFont\") )
    title.font(g_chartTitleFont);

  //call randomization function for the chart name 'Chart_ewo2'
  randChart(\"Chart_ewo2\");
}
" 0
 E E E E 1 -1 -1 0  10 10
""0  1
E "string g_sXlabel, g_sYlabel;
dyn_string g_chartColors, g_chartNames;
dyn_dyn_float g_serie1Values, g_serie2Values, g_serie3Values;
int g_iBubleSize = 15;

/*
  @authors Grygorii Sokhrannyi, Martin Koller
  Initialize and draw the chart for the given chart name
  @param sChartName Is the chart name which will be drawn
*/
initChart(string sChartName)
{
  //get shape of the chart
  shape shChart = getShape(sChartName);

  //remove axes if chart is redrawn
  shChart.removeAxes();

  //set global fonts for the chart if exist
  if ( globalExists(\"g_chartLabelsFont\") )
  {
    shChart.font(g_chartLabelsFont);
    shChart.legendFont(g_chartLabelsFont);
    shChart.axesFont(g_chartLabelsFont);
    shChart.axesLabelFont(g_chartLabelsFont);
  }

  dyn_float valX, valY;   //axis coordinates inserted into chart
  int iMaxX = 35000, iMaxY = 35000; //max values for axes

  //set axis maximum value
  shChart.addAxis(0, iMaxX, g_sXlabel);
  shChart.addAxis(0, iMaxY, g_sYlabel);

  //do series 1
  {
    //if values are not defined
    if ( dynlen(g_serie1Values) <= 0 )
    {
      for (int i = 1; i <= 5; ++i)
      {
        valX[i] = rand();   //X-axis coordinate
        valY[i] = rand();   //Y-axis coordinate
      }
    }
    else
    {
      for (int i = 1; i <= dynlen(g_serie1Values[1]); ++i)
      {
        valX[i] = g_serie1Values[1][i];
        valY[i] = g_serie1Values[2][i];
      }
    }

    //set values for series
    shChart.setSeriesXYV(0, valX, valY, valY);

    //set series 1 bubbles type
    shChart.setSeriesMarkerType(0, 0);
    shChart.setSeriesLineType(0, \"[none,oneColor,JoinMiter,CapButt,0]\");
  }

  //do series 2
  {
    //if values are not defined
    if ( dynlen(g_serie2Values) <= 0 )
    {
      for (int i = 1; i <= 7; ++i)
      {
        valX[i] = rand();   //X-axis coordinate
        valY[i] = rand();   //Y-axis coordinate
      }
    }
    else
    {
      for (int i = 1; i <= dynlen(g_serie2Values[1]); ++i)
      {
        valX[i] = g_serie2Values[1][i];
        valY[i] = g_serie2Values[2][i];
      }
    }

    //set values for series
    shChart.setSeriesXYV(1, valX, valY, valY);

    //set series 1 bubbles type
    shChart.setSeriesMarkerType(1, 0);
    shChart.setSeriesLineType(1, \"[none,oneColor,JoinMiter,CapButt,0]\");
  }

  //do series 3
  {
    //if values are not defined
    if ( dynlen(g_serie3Values) <= 0 )
    {
      for (int i = 1; i <= 10; ++i)
      {
        valX[i] = rand();   //X-axis coordinate
        valY[i] = rand();   //Y-axis coordinate
      }
    }
    else
    {
      for (int i = 1; i <= dynlen(g_serie3Values[1]); ++i)
      {
        valX[i] = g_serie3Values[1][i];
        valY[i] = g_serie3Values[2][i];
      }
    }

    //set values for series
    shChart.setSeriesXYV(2, valX, valY, valY);

    //set series 1 bubbles type
    shChart.setSeriesMarkerType(2, 0);
    shChart.setSeriesLineType(2, \"[none,oneColor,JoinMiter,CapButt,0]\");
  }

  //set labels and colors for series
  if ( g_chartNames[1] != \"\" )
      shChart.setSeriesName(0, g_chartNames[1]);

  if ( g_chartColors[1] != \"\" )
      shChart.setSeriesFillColor(0, g_chartColors[1]);

  if ( g_chartNames[2] != \"\" )
      shChart.setSeriesName(1, g_chartNames[2]);

  if ( g_chartColors[2] != \"\" )
      shChart.setSeriesFillColor(1, g_chartColors[2]);

  if ( g_chartNames[3] != \"\" )
      shChart.setSeriesName(2, g_chartNames[3]);

  if ( g_chartColors[3] != \"\" )
      shChart.setSeriesFillColor(2, g_chartColors[3]);

  //set bubbles size
  shChart.bubbleMinSize = g_iBubleSize;
  shChart.bubbleMaxSize = g_iBubleSize; //makes all bubbles equal size
}

/*
  @author Grygorii Sokhrannyi
  Function that randomize the given chart with the given delay in seconds
  @params
    - sChartName Is the chart name which will be drawn
    - iDelay Is the delay value in seconds, it specify how frequently randomization is executed
*/
randChart(string sChartName)
{
  const int iDelay = 3;

  //infinite loop for an infinite animation
  while ( 1 )
  {
    delay(iDelay);

    //randomize series 1
    for (int i = 1; i <= dynlen(g_serie1Values[1]); ++i)
    {
      g_serie1Values[1][i] = rand();
      g_serie1Values[2][i] = rand();
    }

    //randomize series 2
    for (int i = 1; i <= dynlen(g_serie2Values[1]); ++i)
    {
      g_serie2Values[1][i] = rand();
      g_serie2Values[2][i] = rand();
    }

    //randomize series 3
    for (int i = 1; i <= dynlen(g_serie3Values[1]); ++i)
    {
      g_serie3Values[1][i] = rand();
      g_serie3Values[2][i] = rand();
    }

    //redraw the chart with the generated values
    initChart(sChartName);
  }
}
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
3 0 1 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
29 1
"Chart_ewo2"
""
1 9 83 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
0 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

3
"chartType" "enum 6"
"legendPosition" "enum 3"
"layoutAlignment" "AlignNone"
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
LANG:10027 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
0  9 83 825.0000000000001 544
9 Chart.ewo
0
E2 10
"title"
""
1 20 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"sizePolicy" "Preferred Fixed"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E 1.068395125745398 0 6.300000000000001 -10.35805029815919 -52.00000000000001 0 E 20 10 780 20
0 2 2 "0s" 0 0 0 65 0 0  20 10 1
4
LANG:10001 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10004 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10000 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10027 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
0 4
LANG:10001 17 Panel #13 (State)
LANG:10004 17 Panel #13 (State)
LANG:10000 17 Panel #13 (State)
LANG:10027 17 Panel #13 (State)
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
4 0 "LAYOUT_GROUP0" -1
2 0 
10 1 

"S 10" "0 0 1 1"
"S 1" "1 0 1 1"
"" ""
0 3 0 0
0
