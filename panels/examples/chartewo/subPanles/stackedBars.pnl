V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 835 554 N "White" 0
"main()
{
  //Y-axis title
  g_chartYaxis = \"Hours\";

  //define chart labels
  g_chartLabels = makeDynString(\"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\");

  //define chart serie1 names, values and colors
  g_serie1Name =\"2015\";
  g_serie1Values = makeDynFloat(3451, 3511, 3600, 3390, 3201, 3491);
  g_serie1Color = \"SiemensNaturalRedLight\";

  //define chart serie2 names, values and colors
  g_serie2Name = \"2016\";
  g_serie2Values = makeDynFloat(3390, 3500, 3481, 3331, 3350, 3370);
  g_serie2Color = \"SiemensNaturalBlueLight\";

  //define chart serie3 names, values and colors
  g_serie3Name = \"2017\";
  g_serie3Values = makeDynFloat(3401, 3100, 3281, 3200,  3510, 3251);
  g_serie3Color = \"SiemensNaturalYellowLight\";

  //initialize and draw a chart name 'Chart_ewo2'
  initChart(\"Chart_ewo2\");

  //set title global font if exist
  if ( globalExists(\"g_chartTitleFont\") )
    title.font(g_chartTitleFont);

  //set Xaxis label and its global font
  label.text(\"Controller\");
  if ( globalExists(\"g_chartLabelsFont\") )
    label.font(g_chartLabelsFont);

  //call randomization function for the chart name 'Chart_ewo2'
  randChart(\"Chart_ewo2\");
}
" 0
 E E E E 1 -1 -1 0  10 10
""0  1
E "dyn_string g_chartLabels;
dyn_float g_serie1Values, g_serie2Values, g_serie3Values;
string g_serie1Color, g_serie2Color, g_serie3Color, g_chartYaxis, g_serie1Name, g_serie2Name, g_serie3Name;
float g_axesMax = 0;

/*
  @authors Grygorii Sokhrannyi, Martin Koller
  Initialize and draw the chart for the given chart name
  @param sChartName Is the chart name which will be drawn
*/
initChart(string sChartName)
{
  //get shape of the chart
  shape shChart = getShape(sChartName);

  //set global fonts for the chart if exist
  if ( globalExists(\"g_chartLabelsFont\") )
  {
    shChart.font(g_chartLabelsFont);
    shChart.legendFont(g_chartLabelsFont);
    shChart.axesFont(g_chartLabelsFont);
    shChart.axesLabelFont(g_chartLabelsFont);
  }

  //remove axis if chart is redrawn
  shChart.removeAxes();

  int iCount = 6; //default number of variables

  //check users values and redefine max axis value
  if ( dynlen(g_serie1Values) > 0 )
  {
    iCount = dynlen(g_serie1Values);

    if ( g_axesMax <= 0 )
    {
      g_axesMax = getDynMax(g_serie1Values);

      if ( g_axesMax < getDynMax(g_serie2Values) )
        g_axesMax = getDynMax(g_serie2Values);
      else if ( g_axesMax < getDynMax(g_serie3Values) )
        g_axesMax = getDynMax(g_serie3Values);
    }
  }

  //define values and axis labels for the chart
  for (int i = 1; i <= iCount; i++)
  {
    if ( dynlen(g_serie1Values) <= 0 )
      g_serie1Values[i] = rand();

    if ( dynlen(g_chartLabels) <= 0 )
      g_chartLabels[i] = \"value \" + (string)i;
  }

  //set axis labels and maximum
  shChart.addAxis(0, g_axesMax * 3.0 + g_axesMax * 0.1, g_chartYaxis);

  //set values for the chart
  shChart.setSeries(0, g_serie1Values, g_chartLabels);

  //set serie colors
  for (int i = 1; i <= iCount; i++)
  {
    shChart.setItemFillColor(0, i-1, g_serie1Color);
  }

  //do series 2
  {
    for (int i = 1; i <= iCount; i++)
    {
      //if no values provided, they would be generated
      if ( dynlen(g_serie2Values) <= 0 )
        g_serie2Values[i] = rand();
    }

    //set values for the chart
    shChart.setSeries(1, g_serie2Values);

    //set serie colors
    for (int i = 1; i <= iCount; i++)
    {
      shChart.setItemFillColor(1, i-1, g_serie2Color);
    }
  }

  //do series 3
  {
    for (int i = 1; i <= iCount; i++)
    {
      //if no values provided, they would be generated
      if ( dynlen(g_serie2Values) <= 0 )
        g_serie3Values[i] = rand();
    }

    //set values for the chart
    shChart.setSeries(2, g_serie3Values);

    //set serie colors
    for (int i = 1; i <= iCount; i++)
    {
      shChart.setItemFillColor(2, i-1, g_serie3Color);
    }
  }

  //set serieses labels and colors
  shChart.setSeriesName(0, g_serie1Name);
  shChart.setSeriesFillColor(0, g_serie1Color);
  shChart.setSeriesName(1, g_serie2Name);
  shChart.setSeriesFillColor(1, g_serie2Color);
  shChart.setSeriesName(2, g_serie3Name);
  shChart.setSeriesFillColor(2, g_serie3Color);
}

/*
  @author Grygorii Sokhrannyi
  Function that randomize the given chart with the given delay in seconds
  @param sChartName Is the chart name which will be drawn
*/
randChart(string sChartName)
{
  const int iDelay = 3;

  //get shape of the chart
  shape shChart = getShape(sChartName);

  //infinite loop for an infinite animation
  while ( 1 )
  {
    delay(iDelay);

    //regenerate all values
    for (int i = 1; i <= dynlen(g_serie1Values); ++i)
    {
      //generate random value
      int val = (int)(rand() * 0.005);

      //redefine chart values
      if ( val % 2 == 0 )
      {
        g_serie1Values[i] = g_serie1Values[i] + val * i;
        g_serie2Values[i] = g_serie2Values[i] + val * i;
        g_serie3Values[i] = g_serie3Values[i] + val * i;
      }
      else
      {
        g_serie1Values[i] = abs(g_serie1Values[i] - val * i);
        g_serie2Values[i] = abs(g_serie2Values[i] - val * i);
        g_serie3Values[i] = abs(g_serie3Values[i] - val * i);
      }

      //don't exceed maximum axes value during randomization
      if ( g_serie1Values[i] > g_axesMax)
        g_serie1Values[i] = g_axesMax;

      if ( g_serie2Values[i] > g_axesMax)
        g_serie2Values[i] = g_axesMax;

      if ( g_serie3Values[i] > g_axesMax)
        g_serie3Values[i] = g_axesMax;

    }

    initChart(\"Chart_ewo2\");
  }
}

/*
  @author Grygorii Sokhrannyi
  Function that returns the maximum value of the given dynamic array
  @param dynValue Is the dynamic array to be examined
  @return maximum value in the array, if it is an empty arrey then return 0
*/
anytype getDynMax(dyn_anytype dynValue)
{
  //check if array is not empty
  if ( dynlen(dynValue) <= 0 )
    return 0;

  anytype val = 0;

  //get the maximum value
  for (int i = 1; i <= dynlen(dynValue); ++i)
  {
    if ( dynValue[i] > val )
      val = dynValue[i];
  }
  return val;
}
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
3 0 1 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
29 5
"Chart_ewo2"
""
1 9 93 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

16
"chartType" "enum 4"
"legendPosition" "enum 3"
"lineWidth" "int 5"
"segmentSpacing" "int 15"
"seriesSpacing" "int 10"
"explosionOffset" "uint 20"
"holeFactor" "float 20"
"bubbleMaxSize" "uint 40"
"contextMenuPolicy" "enum 2"
"bubbleMinSize" "uint 20"
"frameShape" "enum 0"
"midLineWidth" "int 5"
"orientation" "enum 1"
"shownValueText" "enum 1"
"valueTextPosition" "enum 1"
"layoutAlignment" "AlignNone"
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
LANG:10027 35 MS Shell Dlg 2,-1,13,5,50,0,0,0,0,0
0  9 93 825.0000000000001 501
9 Chart.ewo
0
E2 14
"title"
""
1 20 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
13 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"sizePolicy" "Preferred Fixed"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E 1.068395125745398 0 7.3 -10.35805029815919 -62 0 E 20 10 780 20
0 2 2 "0s" 0 0 0 65 0 0  20 10 1
4
LANG:10001 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10004 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10000 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
LANG:10027 31 Arial,-1,33,5,75,0,0,0,0,0,Bold
0 4
LANG:10001 29 Controllers (Operating Hours)
LANG:10004 23 控制器(运行时间)
LANG:10000 29 Controllers (Operating Hours)
LANG:10027 29 Controllers (Operating Hours)
2 15
"label"
""
1 20 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
14 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"sizePolicy" "Preferred Fixed"
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E 1.068395125745398 0 3.200000000000002 -10.35805029815919 478 0 E 20 10 780 20
0 2 2 "0s" 0 0 0 65 0 0  20 10 1
4
LANG:10001 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10004 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10000 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
LANG:10027 34 Arial,-1,17,5,50,0,0,0,0,0,Regular
0 4
LANG:10001 5 title
LANG:10004 5 title
LANG:10000 5 title
LANG:10027 5 title
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
4 0 "LAYOUT_GROUP0" -1
3 0 
15 5 14 

"S 15" "2 0 1 1"
"S 5" "1 0 1 1"
"S 14" "0 0 1 1"
"" ""
0 3 0 0
0
