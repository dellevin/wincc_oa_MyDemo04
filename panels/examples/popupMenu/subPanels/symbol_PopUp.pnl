V 14
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
PANEL,-1 -1 190 49 N "_3DFace" 4
"$GROUP"
"$ICON"
"$SUBGROUP"
"$TEXT"
E E E E E 1 -1 -1 0  10.99999999999999 6.000000000000018
""0  1
E "#uses \"examples/popupMenu.ctl\"

#property bool selected
bool bSelected = false;

/*
  @authors Markus Trummer
  Call function which change menu item property if selected state is changed
  @param: bSelect - state of selected item
*/
public setSelected(bool bSelect)
{
  doDisplay();
}

/*
  @authors Markus Trummer
  Get the item state
  @return: bSelect - state of item
*/
public bool getSelected()
{
  return bSelected;
}

/*
  @authors Grygorii Sokhrannyi, Markus Trummer
  The function which change the menu item property if selected
  @params:
    pressedStatus - if item is pressed
    stateNum - numeric representation of an item status (0 - not selected, 1 - mouse over)
*/
doDisplay(bool pressedStatus = false, int stateNum = 0)
{
  string bkgColor = \"SiemensNaturalBlueDark\";  // mouse pressed color
  string txtColor = \"white\";  // mouse pressed color

  if ( stateNum == 1)
  {
    bkgColor = \"SiemensNaturalBlueLight\";
    txtColor = \"white\";
  }

  // Use color scheme depending of an item state
  if ( pressedStatus )
  {
    rBackground.backCol(bkgColor);
    header_TEXT.foreCol(txtColor);
    changeIcon($ICON, pressedStatus);
  }
  else
  {
    rBackground.backCol(\"SiemensStone35\");
    header_TEXT.foreCol(\"_WindowText\");
    changeIcon($ICON, pressedStatus);
  }
}

/*
  @authors Grygorii Sokhrannyi, Markus Trummer
  The function which change the menu item icon depending of its state
  @params:
    sIcon - icon file name
    bPressed - the menu item status (true - mouse pressed, false - mouse not pressed)
*/
void changeIcon(string sIcon, bool bPressed = false)
{

  if ( sIcon != \"\" )
    setValue(\"rIcon\",\"fill\",\"[pattern,[fit,any,\" + getIfIcon(sIcon, bSelected || bPressed) + \"]]\",
           \"visible\", true);
}

/*
  @authors Markus Trummer
  The function which invokes the menu closing procedure with the selected menu item info
*/
public clicked()
{
  invokeMethod(myModuleName() + \".\" + myPanelName() + \":\", \"doClose\", $GROUP, $SUBGROUP);
}

/*
  @authors Grygorii Sokhrannyi, Markus Trummer
  The function which change the menu item icon file depending of the item state
  @params:
    sIcon - icon file name
    bActive - the menu item status (true - mouse over, false - mouse not over)
  @return: sIcon - icon file name
*/
private string getIfIcon(string sIcon, bool bActive)
{
  if ( bActive )
    strreplace(sIcon, \"-enabled\", \"-active\");

  return sIcon;
}
" 0
 4
"CBRef" "1"
"EClose" E
"dpi" "96"
"sizePolicy" "Expanding Preferred"
1 1 0 0 0 0 1 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
6 7
"rBackground"
""
1 50 100 E E E 1 E 1 E N "_Transparent" E N "SiemensStone35" E E
 E E
6 0 0 0 0 0
E E "main(bool enter)
{
  if ( enter )
  {
    this.foreCol(\"black\");
    doDisplay(true, 1);
  }
  else
  {
    this.foreCol(\"_Transparent\");
    doDisplay(false);
  }
}" 0

0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

5
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"mousePressedCB" "main(mapping event)
{
  doDisplay(true);
}"
"mouseReleasedCB" "main(mapping event)
{
  doDisplay(false);
}"
"antiAliased" "0"
E "main(mapping event)
{
  clicked();
}" 0
 0 1 1 2 1 E -0.9999999999999999 -1.224646799147352e-16 1.224646799147353e-16 -0.9999999999999994 239 147.9999999999999 1 E 50 100 239 148
2 4
"header_TEXT"
""
1 71.5 13.5 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
3 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

6
"transparentForMouse" ""
"sizePolicy" "Expanding Fixed"
"layoutAlignment" "AlignVCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
"main()
{
  int x, y;
  header_TEXT.text($TEXT);
  changeIcon($ICON);
}
" 0
 E 0 1 1 2 1 E 2.56842105263158 0 0.9803921568627451 -126.642105263158 -1.235294117647058 0 E 71.5 13.5 119 39
0 0 2 "0s" 0 0 0 192 0 0  71.5 13.5 1
4
LANG:10001 35 Arial,-1,23,5,50,0,0,0,0,0,Standard
LANG:10004 35 Arial,-1,23,5,50,0,0,0,0,0,Standard
LANG:10000 35 Arial,-1,23,5,50,0,0,0,0,0,Standard
LANG:10027 35 Arial,-1,23,5,50,0,0,0,0,0,Standard
0 4
LANG:10001 5 label
LANG:10004 5 label
LANG:10000 5 label
LANG:10027 5 label
6 6
"rIcon"
""
1 50 120 E E E 1 E 1 E N "_Transparent" E N "_Transparent" E E
 E E
5 0 0 0 0 0
E E E
0
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 

6
"minimumSize" "41 41"
"maximumSize" "41 41"
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignVCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E 1 0 1 -40 -115.5 1 E 50 120 90 160
0
LAYER, 1 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 2 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 3 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 4 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 5 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 6 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
LAYER, 7 
3
LANG:10000 0 
LANG:10001 0 
LANG:10027 0 
0
4 0 "LAYOUT_GROUP0" -1
3 0 
7 4 6 

"S 4" "1 0 1 1"
"S 6" "0 0 1 1"
"" ""
1 1 1 9 9 3 3 0
0
