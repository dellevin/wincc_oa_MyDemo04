<?xml version='1.0' encoding='UTF-8'?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="de_AT.utf8"></prop>
   <prop name="en_US.utf8"></prop>
   <prop name="ru_RU.utf8"></prop>
   <prop name="en_GB.utf8"></prop>
   <prop name="de_DE.utf8"></prop>
  </prop>
  <prop name="Size">119 41</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 -900</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">120</prop>
  <prop name="layoutType">HBox</prop>
  <prop name="layoutLeftMargin">0</prop>
  <prop name="layoutRightMargin">0</prop>
  <prop name="layoutTopMargin">0</prop>
  <prop name="layoutBottomMargin">0</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;examples/popupMenu.ctl&quot;

/*
  @author Grygorii Sokhrannyi
  The call-back function which set the background color and an actual value for the TEXT_FIELD with respect to DPE alarm
  @params:
    DPE, value - pass the actual value (value) of the DPE (DPE)
    alarmDpe, colorName - pass an alarm actual color (colorName) of the DPE (alarmDpe)
*/
workCB(string DPE, float value,
       string alarmDpe, string colorName)
{
  TEXT_FIELD1.backCol(colorName);
  TEXT_FIELD1.text(value);
}


public initSpin()
{
  int rowN, colN;
  sscanf(TEXT_FIELD1.refName, &quot;PANEL_REF_%d_%d&quot;, rowN, colN); //PANEL_REF_0_2

  // Due to the spacer - empy row / column in between
  rowN += 2;
  rowN /= 2;

  colN += 2;
  colN /= 2;

  string Dpe = dpeDevices[rowN];
  string configDpe;

  // If no DPE found, then exit
  if ( !dpExists(Dpe) )
    return;

  // Initialize the value for a DPE
  if ( (colN - 1) % dynlen(columnNames) == 0 )  // column 2 is an Actual Value
  {
    Dpe += &quot;.analog.value&quot;;
    configDpe = Dpe + &quot;:_alert_hdl.._act_state_color&quot;;
  }

  dpConnect(&quot;workCB&quot;, Dpe, configDpe);  // set the background
}]]></script>
 </events>
 <shapes>
  <shape Name="TEXT_FIELD1" layerId="0" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">5</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">19 0.5000000000000001</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">{215,233,254}</prop>
    <prop name="TabOrder">5</prop>
    <prop name="ToolTipText">
     <prop name="de_AT.utf8"></prop>
     <prop name="en_US.utf8"></prop>
     <prop name="ru_RU.utf8"></prop>
     <prop name="en_GB.utf8"></prop>
     <prop name="de_DE.utf8"></prop>
    </prop>
    <prop name="minimumSize">81 41</prop>
    <prop name="maximumSize">81 41</prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignVCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="de_AT.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="ru_RU.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="en_GB.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="de_DE.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="en_US.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="zh_CN.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="neutral.iso88591">Arial,-1,20,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">19 0.5</prop>
    <prop name="Size">81 40</prop>
    <prop name="BorderStyle">None</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[3d,False,True,ALIGNMENT_END,False]</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  int rowN, colN;
  sscanf(TEXT_FIELD1.refName, &quot;PANEL_REF_%d_%d&quot;, rowN, colN); //PANEL_REF_0_2

  // Due to the spacer - empy row / column in between
  rowN += 2;
  rowN /= 2;

  colN += 2;
  colN /= 2;

  string Dpe = dpeDevices[rowN];
  string configDpe;

  // If no DPE found, then exit
  if ( !dpExists(Dpe) )
    return;

  // Initialize the value for a DPE
  if ( (colN - 1) % dynlen(columnNames) == 0 )  // column 2 is an Actual Value
  {
    Dpe += &quot;.analog.value&quot;;
    configDpe = Dpe + &quot;:_alert_hdl.._act_state_color&quot;;
  }
}
]]></script>
   </events>
  </shape>
 </shapes>
 <groups>
  <layout parentSerial="-1" Name="LAYOUT_GROUP0" serial="0">
   <properties>
    <prop idx="0" name="shapeSerial">5</prop>
    <prop name="isContainerShape">False</prop>
    <prop name="layoutType">HBox</prop>
    <prop name="layoutSpacing">7</prop>
   </properties>
  </layout>
 </groups>
</panel>
