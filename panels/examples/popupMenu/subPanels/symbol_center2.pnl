<?xml version='1.0' encoding='UTF-8'?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="de_AT.utf8"></prop>
   <prop name="en_US.utf8"></prop>
   <prop name="ru_RU.utf8"></prop>
   <prop name="en_GB.utf8"></prop>
   <prop name="de_DE.utf8"></prop>
  </prop>
  <prop name="Size">140 41</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 -800</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">120</prop>
  <prop name="layoutType">HBox</prop>
  <prop name="layoutLeftMargin">0</prop>
  <prop name="layoutRightMargin">0</prop>
  <prop name="layoutTopMargin">0</prop>
  <prop name="layoutBottomMargin">0</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;examples/popupMenu.ctl&quot;
string Dpe;

public initSpin()
{
}

/*
  @author Grygorii Sokhrannyi
  The function which change an alert limit for a given DPE
  @params:
    targetDPE - the DPE for which the alert will be changed
    targetValue - the value of an alert limit to be set
*/
synchronized changeAlert(string targetDPE, int targetValue)
{
  string oldDpe = targetDPE;
  int valueLim2, valueLim3;

  // Define the other alert limit
  if ( !strreplace(oldDpe, &quot;_alert_hdl.2._l_limit&quot;, &quot;_alert_hdl.3._l_limit&quot;) )
  {
    strreplace(oldDpe, &quot;_alert_hdl.3._l_limit&quot;, &quot;_alert_hdl.2._l_limit&quot;);

    dpGet(oldDpe, valueLim2); // range 2 has old value
    valueLim3 = targetValue;
  }
  else
  {
    dpGet(oldDpe, valueLim3); // range 3 has old value
    valueLim2 = targetValue;
  }

  // Take only the DPE name
  targetDPE = dpSubStr(targetDPE, DPSUB_SYS_DP_EL);  // when system name specified


  // Deactivate alarm before edit
  dpSetWait(targetDPE+&quot;:_alert_hdl.._ack&quot;, TRUE,
            targetDPE+&quot;:_alert_hdl.._active&quot;, FALSE);

  dpSetWait(targetDPE+&quot;:_alert_hdl.._type&quot;, 13,
            targetDPE+&quot;:_alert_hdl.1._type&quot;, 4,
            targetDPE+&quot;:_alert_hdl.2._type&quot;, 4,
            targetDPE+&quot;:_alert_hdl.3._type&quot;, 4,
            targetDPE+&quot;:_alert_hdl.1._u_limit&quot;, valueLim2,
            targetDPE+&quot;:_alert_hdl.2._u_limit&quot;, valueLim3,
            targetDPE+&quot;:_alert_hdl.2._l_limit&quot;, valueLim2,
            targetDPE+&quot;:_alert_hdl.3._l_limit&quot;, valueLim3,
            targetDPE+&quot;:_alert_hdl.1._u_incl&quot;, FALSE,
            targetDPE+&quot;:_alert_hdl.1._l_incl&quot;, TRUE,
            targetDPE+&quot;:_alert_hdl.2._u_incl&quot;, FALSE,
            targetDPE+&quot;:_alert_hdl.2._l_incl&quot;, TRUE,
            targetDPE+&quot;:_alert_hdl.3._u_incl&quot;, TRUE,
            targetDPE+&quot;:_alert_hdl.3._l_incl&quot;, TRUE,
            targetDPE+&quot;:_alert_hdl.1._text&quot;, &quot;OK&quot;,
            targetDPE+&quot;:_alert_hdl.2._text&quot;, &quot;Warning&quot;,
            targetDPE+&quot;:_alert_hdl.3._text&quot;, &quot;Error&quot;,
            targetDPE+&quot;:_alert_hdl.2._class&quot;, &quot;warning.&quot;,
            targetDPE+&quot;:_alert_hdl.3._class&quot;, &quot;alert.&quot;,
            targetDPE+&quot;:_alert_hdl.._orig_hdl&quot;, TRUE,
            targetDPE+&quot;:_alert_hdl.._active&quot;, TRUE);

  // refresh DPE
  float tempValue;
  dpGet(targetDPE, tempValue);
  dpSet(targetDPE, tempValue);
}
]]></script>
 </events>
 <shapes>
  <shape Name="SPIN_BUTTON2" layerId="0" shapeType="SPIN_BUTTON">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">0 0.5</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">0</prop>
    <prop name="ToolTipText">
     <prop name="de_AT.utf8"></prop>
     <prop name="en_US.utf8"></prop>
     <prop name="ru_RU.utf8"></prop>
     <prop name="en_GB.utf8"></prop>
     <prop name="de_DE.utf8"></prop>
    </prop>
    <prop name="minimumSize">140 41</prop>
    <prop name="maximumSize">140 41</prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignVCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="de_AT.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="ru_RU.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="en_GB.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="de_DE.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="en_US.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="zh_CN.utf8">Arial,-1,20,5,50,0,0,0,0,0</prop>
     <prop name="neutral.iso88591">Arial,-1,20,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">0 0.5</prop>
    <prop name="Size">140 40</prop>
    <prop name="MinimumID">0</prop>
    <prop name="MaximumID">999999999</prop>
    <prop name="IncrAccelerator">1</prop>
    <prop name="Position">0</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[main()
{
  float value = this.text();

  // Set the DPE value or an alarm limit
  if ( patternMatch(&quot;*.analog.C1.AVG_WT0&quot;, Dpe) )
  {
    string actDpe = Dpe;
    strreplace(actDpe, &quot;analog.C1.AVG_WT0&quot;, &quot;analog.value&quot;);

    dpSet(Dpe, value, actDpe, value);
  }
  else if ( patternMatch(&quot;*.analog.value:_alert_hdl.*&quot;, Dpe) )
    changeAlert(Dpe, (int)value);
}
]]></script>
    <script name="Initialize" isEscaped="1"><![CDATA[main ()
{
  this.wrapping(false);
  int rowN, colN;
  sscanf(this.refName, &quot;PANEL_REF_%d_%d&quot;, rowN, colN);

  // Due to the spacer - empy row / column in between
  rowN += 2;
  rowN /= 2;

  colN += 2;
  colN /= 2;

  Dpe = dpeDevices[rowN];

  // If no DPE found, then exit
  if ( !dpExists(Dpe) )
    return;

  // Initialize the value for a DPE
  if ( (colN - 2) % dynlen(columnNames) == 0 )  // column 2 is a Set Value
    Dpe += &quot;.analog.C1.AVG_WT0&quot;;
  else if ( (colN - 3) % dynlen(columnNames) == 0 )  // column 3 is a Set Warning Limit
    Dpe += &quot;.analog.value:_alert_hdl.2._l_limit&quot;;
  else if ( (colN - 4) % dynlen(columnNames) == 0 )  // column 4 is a Set Error Limit
    Dpe += &quot;.analog.value:_alert_hdl.3._l_limit&quot;;

  int valueToSet;
  dpGet(Dpe, valueToSet);
  this.text(valueToSet);
}

]]></script>
   </events>
  </shape>
 </shapes>
 <groups>
  <layout parentSerial="-1" Name="LAYOUT_GROUP0" serial="0">
   <properties>
    <prop idx="0" name="shapeSerial">0</prop>
    <prop name="isContainerShape">False</prop>
    <prop name="layoutType">HBox</prop>
    <prop name="layoutSpacing">7</prop>
   </properties>
  </layout>
 </groups>
</panel>
